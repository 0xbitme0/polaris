[
  {
    "frontMatter": {
      "name": "Accessible and inclusive language",
      "keywords": [
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "word list",
        "language",
        "race",
        "racial",
        "racist",
        "racism",
        "a11y",
        "accessible",
        "accessibility",
        "disability",
        "ableist",
        "ableism",
        "gender",
        "gendered",
        "ungendered",
        "gender binary",
        "sex",
        "gender identity",
        "gender-neutral",
        "pronoun",
        "inclusive content"
      ]
    },
    "intro": "Our mission is to make commerce better for _everyone_. Building products for everyone means creating inclusive content.",
    "content": "Accessible and inclusive language\n\n\nOur mission is to make commerce better for everyone. Building products for everyone means creating inclusive content.\nThe words we use have power. Writing for everyone, everywhere means that we don’t exclude or harm any of our merchants, even if these words have been normalized.\nWrite for more than one perspective, and limit assumptions or biases. For example, don’t assume that your audience is white, has a binary gender, or is nondisabled. Keep in mind that our merchants have intersectional identities, which means they can be from more than one historically-excluded group.\nTry to write what you mean without metaphors so your content is easy to understand and localize. If you can’t think of an alternate term, then find another way to write what you want to say.\nTest your content with a diverse audience by recruiting merchants from a variety of backgrounds, including historically-excluded groups, and create intersectionality-informed research objectives. Building inclusive experiences starts with involving diverse perspectives early on in the process.\n\nAccessible content\n\n\nUsing anti-ableist language is just one part of making accessible content at Shopify. Ableist language is content that holds bias towards the nondisabled experience, or discriminates against the disabled community.\nAbleism can show up in language directly, as well as in metaphors and euphemisms. For example, “don’t let your marketing efforts fall on deaf ears”. Write what you mean, instead of using analogies, metaphors, or euphemisms.\nWrite content that centers around the person, not their disability.\nWords and phrases to avoid\nAvoid the following words and phrases.\nInspire, inspirational\n\nThis language and narrative around people with disabilities can be othering and reductive. It can also center an abled perception of those with disabilities (For example, “my life’s not that bad, look at them!”).\nEnable, disable\n\nImplies that disability is a less-desired or negative state.\n\n\nDo\nAccounts are deactivated.\n\n\nDon’t\nAccounts are disabled.\n\n\n\n\nDo\n\nTurned on, turned off\nActive, inactive\nActivate, deactivate\n\n\n\nDon’t\n\nEnable, enabled\nDisable, disabled\n\n\n\nNote: Because disabled is a valid state for HTML elements, usage of “disabled” is appropriate when talking about specific element states, just not overall feature functionality.\n\n\nDo\nThe checkbox is disabled.\n\n\nNormal, abnormal\n\nThis language can imply that there’s something wrong with anyone outside of the majority.\n\n\nDo\n\nTypical\nAtypical\n\n\n\nDon’t\n\nNormal\nAbnormal\n\n\n\nDeaf\n\nThis language is often used to equate deafness or hearing impairment with ignorance or insensitivity, rather than refer to deafness itself or the Deaf community. Make sure to only use it when referencing actual deafness or the Deaf community, and not as a metaphor.\nBlind\n\nAs a metaphor, this can equate lack of vision to ignorance. Only use the term when referencing the disability itself.\n\n\nDo\n\nUnaware\nGap\n\n\n\nDon’t\n\nBlind\nBlind spot\n\n\n\nInsane, crazy\n\nThis language can stigmatize people with mental disabilities by using these words as modifiers for “unbelievable” or in a negative context.\n\n\nDo\n\nWild\nUnbelievable\nOutrageous\nIntense\nSilly\nStrange\n\n\n\nDon’t\n\nInsane\nCrazy\n\n\n\nHandicap, handicapped\n\nHandicap implies that the person is the issue, rather than the environment.\n\n\nDo\n\nDisability\n\n\n\nDon’t\n\nHandicap\nHandicapped\n\n\n\nWheelchair-bound\n\nThis term can reduce a person’s primary identity to using a wheelchair.\n\n\nDo\n\nPerson who uses a wheelchair\nPerson who uses an accessibility device\n\n\n\nDon’t\n\nWheelchair-bound\n\n\n\nSuffers from...\n\nThis phrasing implies that having a disability equates to suffering.\n\n\nDo\n\nExperiences vision impairment\n\n\n\nDon’t\n\nSuffers from vision impairment\n\n\n\nJust, only\n\nWhen we write a task is “only a few steps”, or this should “just take a minute”, it implies the task is easy, quick, or takes a minimal amount of effort. This can discourage people who might struggle with the task, or might take extra time to complete it.\n\nAnti-racist content\n\n\nRacist language expresses bias towards or against a particular race, or expresses the belief that some races are inferior to others. Always prioritize our merchants, partners, and buyers experience over perceived barriers to using anti-racist language.\nTips:\n\nTreat non-white or non-Western perspectives the same as white and Western perspectives. Non-Western ideals aren’t “exotic” or “strange”.\nWrite what you mean instead of using an analogy or a metaphor. If you need a metaphor, then don’t use one that denotes “black” or “dark” as bad or negative, versus “white” or “light” as good or positive.\nUse terms in an appropriate context.\nFor example, while we typically avoid the use of the term “powwow”, in the following context, it’s appropriate: “Bear Witness is a co-founder of A Tribe Called Red, a Canadian DJ collective that blends hip-hop and EDM with traditional powwow drums and vocals” (from Vanguard: How A Tribe Called Red Brought Activism to the Dance Floor).\n\n\n\n\n\nWords and phrases to avoid\nAvoid the following words and phrases.\nExotic\n\nConsider why you need to frame someone or something this way. What is “foreign” or “exotic” to you is familiar for someone else.\nGrandfather in, grandfather clause\n\nThese phrases come from laws meant to circumvent or disenfranchise Black people’s rights. These laws, or “grandfather clauses” originated in the Reconstruction era in the American South.\n\n\nDo\n\nLegacy, legacied\nExempt\n\n\n\nDon’t\n\nGrandfather in, grandfathered in\nGrandfather clause\n\n\n\nPowwow\n\nA powwow is a celebration of heritage, art, and community held by Indigenous people, and should only be used to refer to actual powwows. Use other terms to refer to meetings and events that aren’t powwows.\n\n\nDo\n\nMeet, meeting\nGather, get together\nAssemble, assembly\nRegroup\n\n\n\nDon’t\n\nPowwow\n\n\n\nSpirit animal\n\nIndigenous communities use spirit animals as totems and guides. A spirit animal has deep spiritual and cultural meaning, and should only be used in that context. Don’t say spirit animal to mean the animal a non-Indigenous person might identify with the most.\nBlack hat, white hat (hacking)\n\nThese terms imply that “white is good” and “black is bad”.\n\n\nDo\n\nUnethical hacking\nEthical hacking\n\n\n\nDon’t\n\nBlack hat\nWhite hat\n\n\n\nBlacklist, whitelist\n\nThese terms enforce the “white is good” and “black is bad” paradigm.\n\n\nDo\n\nDenylist, blocklist\nAllowlist\nPermit, permitted\n\n\n\nDon’t\n\nBlacklist\nWhitelist\nGraylist\n\n\n\n\n\nDo\nLearn how to secure a compromised account and reset blocked credentials.\n\n\nDon’t\nLearn how to secure a compromised account and reset blacklisted credentials.\n\n\n\n\nDo\nAdd no-reply[at]shopify.com to your email provider’s allowlist.\n\n\nDon’t\nAdd no-reply[at]shopify.com to your email provider’s whitelist.\n\n\nCakewalk\n\nThis term originates from a dance contest where enslaved Black people competed for cake.\n\n\nDo\nYou can easily file your your taxes with our latest features.\n\n\nDon’t\nIt’s a cakewalk to file your taxes with our latest features.\n\n\nWhitespace\n\nThis term refers to communities and places that are predominantly white and that might make non-white people feel restricted or isolated. Avoid using this term except when referring to the named property in CSS.\n\n\nDo\n\nNew market opportunity/new market space\nUnmet need/unexplored opportunity\nEmptyspace\n\n\n\nDon’t\n\nWhitespace\n\n\n\nLong time no see\n\nThis phrase was used to stereotype Indigenous peoples as unintelligent, and shouldn’t be used due to its racist origins.\n\n\nDo\nIt’s been a while\n\n\nDon’t\nLong time no see\n\n\nLow-hanging fruit\n\nThis metaphor refers to the lynching of Black people, and shouldn’t be used.\n\n\nDo\n\nPrepare to launch your store by adding a new product.\n\n\n\nDon’t\n\nTake care of low-hanging fruit on your task list by adding a new product.\n\n\n\n\nUngendered content\n\n\nGendered language is language biased towards a particular sex or gender. Language that relies on stereotypes, or makes broad assumptions about its audiences’ sex or gender identities is likely gendered.\nUngendered content doesn’t mean avoiding gendered terms—it means being intentional about how you use gendered terms.\nTips:\n\nWhen a subject is unknown, use “they”, “you”, or “we”.\nBe conscious of perpetuating stereotypes, like assuming that a merchant might only have a “men’s collection” or a “women’s collection”.\nAvoid asking for pronouns or gender unless they’re required (or offered).\nDon’t associate specific qualities with a specific gender, like linking positions of power with men. For example, judge, doctor, lawyer.\n\nAt Shopify, we believe ungendered language expands and improves the ways we talk—it makes us more accurate, more precise, and more inclusive.\nInternationalization\nMany languages lack gender-inclusive options, like the pronoun “they” in English. Try to avoid gendered language whenever possible by writing what you want to say in a different way, even if it’s longer. If gender-neutral language isn’t possible, then choose the expression that’s most understandable.\nWhen possible, don’t use gendered pronouns. Use the “you” pronoun instead of the third person “she/he”. Find alternatives to gendered adjectives, like indefinite adjectives, substantives, or objects.\nWords and phrases to avoid\nAvoid the following words and phrases.\nFemale or male adapter or female or male connector\n\nThese terms reinforce the idea that gender is binary.\n\n\nDo\n\nSocket\nInput\n\n\n\nDon’t\n\nFemale adaptor\nFemale connector\n\n\n\nBusinessman\n\nThis term can exclude people who aren’t men and reinforce the idea that positions of power are only for men. Use a word that’s gender-neutral and inclusive of all people.\n\n\nDo\n\nBusinessperson\n\n\n\nDon’t\n\nBusinessman\n\n\n\nManned\n\nThis term excludes people who aren’t men. Use a word that’s gender-neutral and inclusive of all people.\n\n\nDo\n\nStaffed\nManaged\n\n\n\nDon’t\n\nManned\n\n\n\nMan-made\n\nThis word can exclude people who aren’t men. Use a word that’s gender-neutral and inclusive of all people.\n\n\nDo\n\nArtificial\nSynthetic\nManufactured\nFabricated\n\n\n\nDon’t\n\nMan-made\n\n\n\nManpower\n\nThis word can also exclude people who aren’t men.\n\n\nDo\n\nWorkforce\nLabor force\n\n\n\nDon’t\n\nManpower\n\n\n\nMan, woman\n\nThese terms assume a binary gender which might not be the case. Consider how you use these terms and if they’re necessary in that particular context. If you’re listing genders, make sure to include all genders.\n\n\nDo\n\nPerson\nIndividual\n\n\n\nDon’t\n\nMan\nWoman\n\n\n\nHe/him/his, she/her/hers\n\nThese terms assume a binary gender which might not be the case. Consider how you use these terms and if they’re necessary in that particular context.\n\n\nDo\n\nThey/them/theirs\n\n\n\nDon’t\n\nHe/him/his\nShe/her/hers\n\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Actionable language",
      "keywords": [
        "button content",
        "button copy",
        "button terminology",
        "writing for buttons",
        "link content",
        "link copy",
        "link terminology",
        "writing for links",
        "action words",
        "calls to action",
        "calls-to-action",
        "CTA",
        "verbs",
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "save",
        "done",
        "ok",
        "okay",
        "o.k.",
        "accept",
        "close",
        "select",
        "choose",
        "edit",
        "manage",
        "change",
        "switch",
        "create",
        "add",
        "view",
        "see",
        "need",
        "must",
        "export",
        "download",
        "import",
        "upload",
        "confirmation modals",
        "disruptive",
        "delete",
        "deletions",
        "cancel",
        "leave page",
        "stay",
        "discard",
        "dangerous actions",
        "risky actions",
        "irreversible actions",
        "confirmation alerts",
        "warnings",
        "confirmation messaging",
        "headings",
        "subheadings",
        "titles",
        "directional language",
        "directionality",
        "above",
        "below",
        "right",
        "left",
        "up",
        "down"
      ]
    },
    "intro": "Merchants use Shopify to get things done. Content should be written and structured to help them understand and take the most important actions.",
    "content": "Actionable language\nMerchants use Shopify to get things done. Content should be written and structured to help them understand and take the most important actions.\n\nHeadings and subheadings\n\n\nHeadings and subheadings are titles and subtitles that refer to sections of the interface.\nBasic structure\nHeadings and subheadings should be:\n\nInformative and descriptive:\n\nHighlight the most important concept or piece of information for merchants\nHelp merchants understand what they’ll find in the section below\n\n\nConcise and scannable:\n\nUse simple, clear language\nKeep headings to a single sentence\nAvoid using punctuation such as periods, commas, or semicolons\nWrite in sentence case (capitalize the first word and proper nouns only)\n\n\n\n\n\nDo\n\nOnline store dashboard\nCustom reports\nSell your products in person\n\n\n\nDon’t\n\nThis is your online store dashboard\nCustom Reports\nSell your products in person!\n\n\n\nArticles\nWhether or not to use articles (“the,” “a,” “an”) in headings and subheadings depends on the type of message.\nConversational headings\nFor more conversational areas of the product, like Home cards, sell pages, and empty states, use articles. It makes the language more approachable and helps people to understand new, complex concepts.\n\n\nDo\n\nSecure your account with two-step authentication\n\n\n\nDon’t\n\nTwo-step authentication\n\n\n\nMicrocopy headings\nFor labels, titles, and microcopy, avoid articles to keep content short and actionable. This increases readability and encourages immediate action.\n\n\nDo\n\nCreate collection\n\n\n\nDon’t\n\nCreate a collection\n\n\n\n\nSentences\nStart sentences with imperative verbs when telling merchants what actions they can take (especially when introducing something new).\nWhen a merchant reads a sentence that starts with an imperative verb it should sound like they’re being instructed what to do. Don’t use permissive language like “you can.”\n\n\nDo\nAdd your first product and see how it looks in your store.\n\n\nDon’t\n\nProducts appear in your store after you add them.\n\nAdd your first product so you can see how it looks in your store.\n\n\n\n\n\nButtons\n\n\nButtons need to be clear and predictable. Merchants should be able to\nanticipate what will happen when they select a button. Never mislead\nsomeone by mislabeling a button.\nButtons should always lead with a strong verb that encourages action.\nTo provide enough context to merchants, use the {verb} + {noun} content formula on buttons except in the case of common actions like “Done,” “Close,” “Cancel,” or “OK.”\n\n\nDo\n\nActivate Apple Pay\nExplore free themes\nView shipping settings\n\n\n\nDon’t\n\nTry Apple Pay\nFree themes\nSettings\n\n\n\nAlways write button text in sentence case, which means the first word is capitalized and the rest are lowercase (unless a term is a proper noun).\n\n\nDo\n\nBuy new domain\n\n\n\nDon’t\n\nBuy New Domain\n\n\n\nAvoid unnecessary words and articles such as “the,” “an,” or “a.”\n\n\nDo\nAdd menu item\n\n\nDon’t\nAdd a menu item\n\n\n\nLinks\nLinks need to be clear and predictable. Merchants should be able to\nanticipate what will happen when they select a link. Never mislead\nsomeone by mislabeling a link.\n\n\nDo\n\nGet started with the\nUltimate Guide to Dropshipping.\n\n\n\nDon’t\n\nWant to learn more about dropshipping?\nClick here.\n\n\n\nLinks should never use “click here” or “here” as link text.\nLinks in a sentence\nLinks in full sentences shouldn’t link the entire sentence, only the text that describes where merchants go when they select the link.\nIt’s better for internationalization to have only single terms or small parts of phrases linked. Linking a full phrase is problematic because the word order might change, which would break the link into two parts.\n\n\nDo\n\nLearn more about Fraud Protect.\nManage the channels you use to sell products and services.\n\n\n\nDon’t\n\nLearn more about Fraud Protect.\nManage the channels you use to sell products and services.\n\n\n\nLinks outside of a sentence\nLinks that aren’t in full sentences should use the {verb + noun} pattern and not be punctuated, with the exception of question marks.\n\n\nDo\n\nLearn more\nForgot password?\n\n\n\nDon’t\n\nLearn more.\nForgot password\n\n\n\n\nConfirmations\nConfirmations are presented for actions that can’t be undone or are difficult to undo.\nConfirmation messages should:\n\nAlways give merchants the option to either confirm or cancel their action\nBe used for a single, primary task\nKeep body content to one line of text and not use more than two calls to action\n\nConfirmation titles should:\n\nAsk if merchants want to continue, using a concise {verb}+{noun} question\nBe one sentence and avoid using punctuation, with the exception of question marks\nAvoid articles (the, a, an) to keep content short and actionable\nBe written in sentence case (the first word is capitalized, and the rest is lowercase)\n\n\n\nDo\n\nDiscard unsaved changes?\nDelete 2 collections?\nDelete Dark Blue Tee?\nLeave page with unsaved changes?\n\n\n\nDon’t\n\nDiscard?\nAre you sure you want to delete?\nAre you sure you want to delete Dark Blue Tee?\nThis page has unsaved changes are you sure you want to leave?\n\n\n\nConfirmation body content should:\n\nClearly explain if the action is irreversible or difficult to undo, using plain language.\nBe concise: use only one line of text. Don’t start the sentence with “Are you sure?”\n\n\n\nDo\n\nThis can’t be undone.\nThis will delete all edits since you last saved.\nLeaving this page will delete all unsaved changes.\n\n\n\nDon’t\n\nAre you sure you want to delete the variant Dark Blue Tee/Small/Silk? This action cannot be reversed.\nIf you discard changes, you’ll delete any edits you made since you last saved.\nIf you leave this page, all unsaved changes will be lost. Are you sure you want to leave this page?\n\n\n\nConfirmation primary and secondary actions should:\n\nBe clear and predictable: merchants should be able to anticipate what will happen when they click a button\nScannable: avoid unnecessary words and articles such as “the,” “an,” or “a”\n\nSince confirmation messages are placed in modals, the call to action in the title is in close context to the buttons. Because of this, the call to action text on the buttons doesn’t have to follow the {verb}+{noun} pattern. Instead, one word calls to action can be used, for example, [Cancel] [Delete].\nDeletions\nBefore merchants can delete objects like collections, transfers, products, and variants, we present them with a confirmation message that has two calls to action, one to [Cancel] and one to [Delete]. We keep it short and don’t use {verb}+{noun} button copy.\nPrimary action:\n\n\nDo\n\nDelete\n\n\n\nDon’t\n\nRemove\nErase\nDiscard\n\n\n\nSecondary action:\n\n\nDo\n\nCancel\n\n\n\nDon’t\n\nDiscard\n\n\n\nDiscarding changes while on a page\nPrimary action:\n\n\nDo\n\nDiscard\n\n\n\nDon’t\n\nCancel\n\n\n\nSecondary action:\n\n\nDo\n\nKeep editing\n\n\n\nDon’t\n\nGo back\nCancel\n\n\n\nLeaving a page with unsaved changes\nPrimary action:\n\n\nDo\n\nLeave page\n\n\n\nDon’t\n\nExit\nDelete changes\n\n\n\nSecondary action:\n\n\nDo\n\nStay\n\n\n\nDon’t\n\nGo back\nCancel\nDiscard\nKeep editing\n\n\n\n\nDirectional language\nIn the same way that links should never say “click here,” avoid using directional language such as “above/below” or “right/left.”\nDirectional language is confusing and unhelpful when spoken aloud by a screen reader. It creates challenges for internationalization (for example, right to left languages) and can conflict with mobile design patterns.\nDirectional language often indicates a lack of visual or content hierarchy. Whenever possible, keep instructional copy and related actions close together so that directional language isn’t needed.\n\nSave vs. done\n\n\nUse “Save” when a change is saved immediately to a database and “Done” for deferred saves.\nSaving immediately to a database\nUse “Save” for web and iOS as the default for any action that saves immediately to a database. For Android, use a check mark.\nSaving using the context bar component\nWhen merchants make changes on a page they’re sometimes presented with a context bar at the top. This context bar displays a status message on the left to indicate the state of the changes,\nlike “Unsaved discount.” Since the status message provides context around the action being taken, the button doesn’t need to follow the common {verb} + {noun} content formula. For example, [Save] instead of [Save product].\nIn the context bar component, use the verb “Save” for web and iOS, and a check mark in Android.\n\n\nDo\nFor web, use the verb “Save” in the context bar\n\n\n\nDon’t\n\nDone\nApply\nSave discount\n\n\n\nStatus messages in the context bar should be descriptive and follow the {adjective} + {noun} content formula.\n\n\nDo\n\nUnsaved discount\nUnsaved product\nUnsaved customer\nUnsaved shipping zone\n\n\n\nDon’t\n\nUnsaved changes\n\n\n\n\n\nDo\n\nFor Android, use a check mark to indicate “Save” in the context bar.\n\nNote: When merchants press and hold on the “X” in Android, a tooltip appears with “Cancel”. For the check mark, the tooltip displays “Save”.\n\n\n\nDon’t\n\nDone\nApply\nSave discount\n\n\n\n\n\nDo\nFor iOS, use the verb “Save” in the context bar\n\n\n\nDon’t\n\nDone\nApply\nSave discount\n\n\n\nSaving in modals and sheets\nFor web and iOS, use the verb “Save” in modals and sheets when saving directly to the database. For Android, use a check mark to indicate “Save.”\n\n\nDo\nFor web, use the verb “Save” in modals and sheets\n\n\n\nDon’t\n\nEdit\nDone\nApply\n\n\n\n\n\nDo\n\nFor Android, use a check mark to indicate “Save” in modals and sheets.\n\nNote: When merchants press and holds on the “X” in Android, a tooltip appears with “Cancel”. For the check mark, the tooltip displays “Save”.\n\n\n\nDon’t\n\nEdit\nDone\nApply\n\n\n\n\n\nDo\nFor iOS, use the verb “Save” in modals and sheets\n\n\n\nDon’t\n\nEdit\nDone\nApply\n\n\n\nSaving at the bottom of a page in web\nUse the {Save} + {noun} content formula when a save action doesn’t have the surrounding context of a modal or context bar. This applies to the save action at the bottom of pages in web.\nFor example, the action at the bottom of the Create discount page in web uses [Save discount]:\n\n\nDo\n\n\n\nDon’t\n\nCreate discount\nSave\nDone\nApply\n\n\n\n\n  \n    \n      \n        Android and iOS have one save action at the top of the screen in the nav bar. These platforms don’t use a save           bar at the bottom of a page like in web.\n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\nDeferred saves\nSometimes, when merchants confirm a set of changes inside a modal or sheet, these changes are applied as unsaved changes to the current page. In other words, the changes made weren’t immediately saved to the database. When this happens, don’t use the verb “Save” as the call to action because it would be misleading.\nUse the adjective “Done” in web, Android, and iOS for deferred saves. When the modal or sheet closes, then merchants can save all of the changes they made.\nMost deferred saves happen when confirming changes in Add, Edit, Manage, and Select modals and sheets.\n\n\nDo\n\n\n\nDon’t\n\nAdd\nEdit\nManage\nSelect\nApply\nSave\n\n\n\nDatepickers\n\n\nUse the adjective “Done” in web, Android, and iOS for datepickers.\n\n\nDo\nWeb\n\n\n\nDon’t\n\nApply\nSelect\nSave\n\n\n\n\n\nOK vs. accept\n\n\nUse the adjective “OK” when merchants need to confirm they’ve read something, but aren’t required to legally accept terms of service before continuing. For example, use “OK” when presenting a security notification in a modal or sheet.\n\n\nDo\n\n\n\nDon’t\n\nOk\nO.k.\nOkay\nDone\nAccept\nContinue\n\n\n\nUse the adjective “Accept” when terms of service require legal confirmation before merchants can continue.\n\n\nDo\nAccept\n\n\nDon’t\n\nOk\nDone\nContinue\n\n\n\n\nClose vs. cancel\n\n\nUse the back arrow button in web, “Close” in iOS, and an “X” in Android, as the call to action for modals and screens when:\n\nthe content is in a view-only state\n\nDon’t use “Close” as the call to action when there’s the option for merchants to:\n\nmake any changes to the modal or screen\nconfirm they’ve read something or accept terms of service (see OK vs. accept)\n\n\n\nDo\n\n\n\nDon’t\n\nCancel\nExit\nOK\n\n\n\n\n\nDo\n\n\n\nDon’t\n\nClose\nCancel\nExit\nOK\n\n\n\n\n\nDo\n\n\n\nDon’t\n\nCancel\nExit\nOK\n\n\n\nUse “Cancel” as the option for merchants to back out of any changes made on a page, modal, or sheet. When the cancel button is pressed, changes automatically get discarded. “Cancel” is often paired with “Save” and “Done” actions (and is always placed to the left).\n\n\nDo\nFor web, use the verb “Cancel” as the action for merchants to back out of changes\n\n\n\nDon’t\n\nExit\nClose\nDone\n\n\n\n\n\nDo\n\nFor Android, use an “X” as the action for merchants to back out of changes\n\nNote: When merchants presses and holds on the “X” in Android, a tooltip appears with “Cancel”. For the check mark, the tooltip displays “Save”.\n\n\n\nDon’t\n\nCancel\nExit\nClose\nDone\n\n\n\n\n\nDo\nFor iOS, use the verb “Cancel” as the action for merchants to back out of changes\n\n\n\nDon’t\n\nExit\nClose\nDone\n\n\n\n\nSelect vs. choose\n\n\nUse the verb “select”:\n\nWhen telling merchants to pick something from a limited number of options of\nthe same kind\nWhen merchants need to make an easy or obvious decision that doesn’t require\ndeep reflection or analysis\nFor defined lists and dropdown menus\nWhen merchants are given the option to pick from a list of already existing objects, like products\n\nPair Select modals and screens with the “Done” call to action.\n\n\nDo\n\nSelect your country of residence\nSelect image\nSelect countries\n\n\n\nDon’t\n\nSelect a pricing plan.\nChoose countries\n\n\n\nUse the verb “choose” when:\n\nEncouraging merchants to make a decision that is more subjective, strategic,\nemotional, or open-ended\nMerchants have to pick from a large inventory of items, like themes, or\noptions that require strategic decision making, like pricing plans\n\n\n\nDo\n\nChoose a theme\nChoose a pricing plan.\n\n\n\nDon’t\n\nSelect a theme\nSelect a pricing plan\nChoose a province.\nPick a province.\nPick a pricing plan.\n\n\n\n\nEdit vs. manage\n\n\nUse the verb “edit” when you can change the input of a field (letters, numbers, properties). Place as link text next to the field or area that is being edited. There’s no need for a noun unless it’s unclear what’s being edited.\n\n\nDo\n\nIn this example, “Edit” is the correct call to action because it opens a modal where merchants update customer contact information \nHere are the editing actions that become available after the “Edit” button is selected \nEdit an individual blog post\n\n\n\nDon’t\n\nUse “Edit” if multiple actions can be taken after. “Manage” is more suitable.\nModify\n\n\n\n\n\nUse the verb “manage” at a higher level to convey that multiple actions can be done, or sections and settings can be updated. Pair this verb with a noun if it’s in a button or if it’s unclear what is being managed.\n\n\nDo\n\nIn this example, “Manage” is the correct call to action because it opens a modal where merchants can select channels to display their products \nHere are the options that become available after the “Manage” button is selected \nManage multiple blog posts and comments\n\n\n\nDon’t\n\nEdit\nModify\n\n\n\n\nChange vs. switch\n\n\nUse the verb “change” when merchants can replace an option, but not edit it. For example, they can change an image or theme, but the action doesn’t include editing its properties. Place as link text next to the field or area that is being changed. There’s no need for a noun unless it’s unclear what is being changed.\n\n\nDo\n\nChange image \nHere are the options that become available after the “Change” button is selected \n\n\n\nDon’t\n\nUse the verb “change” if a selection must be made between only two options\n\n\n\n\n\nUse the verb “switch” when it’s important for merchants to know what they’re switching between, like users, accounts, locations, or modes. When the switch happens, the previous option is turned off, logged out, or deactivated. Always pair with a noun to prevent confusion.\n\n\nDo\n\n\n\n\n\n\nDon’t\n\nSwitch images\n\n\n\n\nCreate vs. add\n\n\nUse the verb “create” when you’re encouraging merchants to generate something\nfrom scratch, like a collection.\n\n\nDo\n\nCreate order\nCreate collection\nCreate discount\n\n\n\nDon’t\n\nAdd order\nAdd collection\nAdd discount\n\n\n\nUse the verb “add” when you’re encouraging merchants to bring something that\nalready exists into Shopify, like a product.\n\n\nDo\n\nAdd product\nAdd customer\n\n\n\nDon’t\n\nCreate product\nCreate customer\n\n\n\n\nView vs. see\n\n\nUse the verb “view” when you’re encouraging merchants to go to a specific\npage or section for more details, or to reveal more information. Use “view” in\nbuttons, calls to action, and link text.\n\n\nDo\n\nView invoices\nView all {x}\nView details\nView report\nTry clearing your filters to view all results.\n\n\n\nDon’t\n\nSee invoices\nSee all {x}\nSee details\nSee report\n\n\n\nUse the verb “see” in more general, conversational descriptions without a\nspecific call to action.\n\n\nDo\n\nAdd your first product and see how it looks on your store.\nCustomers will see this name at checkout.\n\n\n\nDon’t\n\nAdd your first product and view how it looks on your store.\nCustomers will view this name at checkout.\n\n\n\n\nNeed vs. must\n\n\nUse the verb “need” when you’re telling merchants something they’re required\nto do or should do.\n\n\nDo\nTo buy a shipping label, you need to enter the total weight of your shipment,\nincluding packaging.\n\n\nDon’t\nTo buy a shipping label, you must enter the total weight of your shipment,\nincluding packaging.\n\n\n\nExport vs. download\n\n\nUse “export” as the call to action when merchants needs to transfer data from\nShopify and convert it into a different format.\n\n\nDo\n\nExport CSV file\n\n\n\nDon’t\n\nDownload CSV file\n\n\n\nUse “download” as the call to action when merchants need to copy data (of the\nsame format) from Shopify to a computer system.\n\n\nDo\n\nDownload shipping label\nDownload PDF\n\n\n\nDon’t\n\nExport shipping label\nExport PDF\n\n\n\n\nImport vs. upload\n\n\nUse “import” as the call to action when merchants need to transfer data and\nconvert it into a different format so it can be used in Shopify.\n\n\nDo\n\nImport CSV file\n\n\n\nDon’t\n\nDownload CSV file\n\n\n\nUse “upload” as the call to action when merchants need to copy data of the same\nformat from a computer system into Shopify.\n\n\nDo\n\nUpload image\nUpload file\n\n\n\nDon’t\n\nUpload CSV file\n\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Alternative text",
      "keywords": [
        "speech synthesis",
        "alt HTML element attribute",
        "alt text attribute",
        "screen reader",
        "a11y",
        "universal design",
        "inclusivity",
        "disability",
        "disabilities",
        "people with disabilities",
        "persons with disabilities",
        "accessible markup",
        "accessible mark up",
        "accessible code",
        "diversity",
        "diverse",
        "vision trouble",
        "visual impairments",
        "color blind",
        "hearing trouble",
        "physical disabilities",
        "physical functioning difficulty",
        "cognitive disabilities",
        "limited vision",
        "loss of vision",
        "low vision",
        "inclusive experiences",
        "alternative text",
        "alt text",
        "accessibility feedback",
        "accessible components"
      ]
    },
    "intro": "Shopify aims to provide an [inclusive experience](/foundations/accessibility).\nAlternative text (alt text) helps people with low or loss of vision use our\nproducts.",
    "content": "Alternative text\nShopify aims to provide an inclusive experience.\nAlternative text (alt text) helps people with low or loss of vision use our\nproducts.\nGenerally, alt text is text replacement for an image and is often represented by\nthe alt HTML element attribute, alt=&quot;&quot;, but is also used in other scenarios.\nScreen readers announce alt text to explain images to people with low or loss of\nvision. Alt text is also displayed if images fail to download for some reason\n(for example, due to an unstable network connection).\nAlt text should:\n\nHelp visitors navigate the site\nProvide an inclusive experience\nBe as specific and concise as possible\n\n\nAlt text for images\n\n\nAll &lt;img&gt; tags need an alt text attribute, even if it’s empty. We need to let\nthe screen reader know to ignore the image.\nEmpty alt text attribute for images: &lt;img alt=&quot;&quot; /&gt;\n\n\nDo\nUse alt text when the image conveys valuable information, such as the ability to\nplay a demonstration video.\nIn this case, you would use:\n&lt;img alt=&quot;Watch a video on how the Shopify reports section works.&quot; /&gt;\n\n\nDon’t\nUse alt text when the image doesn’t add clarity to the task. In this case, leave\nthe alt text attribute empty: alt=&quot;&quot;\n\n\n\nWriting alt text\n\n\nAlt text should always be written in plain text.\n\nUse the simplest words you can. Stuck on how to replace a complicated word?\nCheck this\nA-Z list of alternative words\nor these\nplain language tips.\nAvoid needless words. If you take out a word, is the phrase just as easy to\nunderstand? If yes, then cut that word.\nWrite concisely. Thinking about how to write for a small amount of space is a\ngood shortcut.\nWrite in the active voice. Only use\nthe passive voice if you want to hide who is doing the thing described.\n\n\nSituations that need alt text\n\n\nIcons\nIcons that could be misinterpreted need an\nexplanation, so use the aria-label attribute.\n&lt;button aria-label=&quot;Close&quot; onclick=&quot;myDialog.close()&quot;&gt;X&lt;/button&gt;\n\nActions\nIf space constraints require you to write calls to action without nouns, like\n“learn more” and “apply now”, give further indication of where merchants will\nbe sent after they select.\n\n&lt;a href=&quot;{cta-url}&quot; aria-label=&quot;Learn more about opening an online store with Shopify&quot;&gt;Learn more&lt;/a&gt;\n\nComplex images\nImages with a bit more complexity need more logic in the code.\n\n&lt;div role=&quot;img&quot; aria-labelledby=&quot;star_id&quot;&gt;\n  &lt;img src=&quot;fullstar.png&quot; alt=&quot;&quot; /&gt;\n  &lt;img src=&quot;fullstar.png&quot; alt=&quot;&quot; /&gt;\n  &lt;img src=&quot;halfemptystar.png&quot; alt=&quot;&quot; /&gt;\n&lt;/div&gt;\n&lt;div id=&quot;star_id&quot;&gt;3 of 5 stars&lt;/div&gt;\n\n\nPronunciation and translation\n\n\nNot only are we striving to make interactions with our products pleasurable, we\nalso want to try to make the listening experience for our merchants pleasant as\nwell. The HTML lang attribute helps speech synthesis tools figure out\npronunciation and translation tools figure out what rules to use.\n\n\nDo\nIndicate the language of the page. This example is for English.\n\n&lt;html lang=&quot;en&quot;&gt;\n\n\n\nDon’t\nFail to indicate the language of the page.\n\n&lt;html&gt;\n\n\n\nHere’s a\nstandard list of language attributes\nthat you can use in your document.\n\nSEO\n\n\nAlt text is a good way to increase site searchability. This applies outside of\nShopify’s admin.\n\nUse keywords (the words that people search for) logically\nNever reduce the relevance or clarity of the alt text just to insert a keyword\n\nFor a deeper dive into coding and alt text standards, visit the\nWeb Content Accessibility Guidelines (WCAG).\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Grammar and mechanics",
      "keywords": [
        "writing instructions",
        "writing rules",
        "writing guidelines",
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "content guidelines",
        "writing public-facing text",
        "public-facing text",
        "writing public-facing copy",
        "public-facing copy",
        "writing public-facing content",
        "public-facing content"
      ]
    },
    "intro": "This guide is to help designers, developers, recruiters, UX-ers, product\nmanagers, support advisors, or anyone who writes public-facing text for Shopify.",
    "content": "Grammar and mechanics\nThis guide is to help designers, developers, recruiters, UX-ers, product\nmanagers, support advisors, or anyone who writes public-facing text for Shopify.\n\nBasics\n\n\nActive voice\nYou should (almost) always write in the active voice:\n\nSubject (person/thing acting) verb (the action) object (receives the action)\n\nUse the active voice if merchants need to do something. It should be clear\nthat the subject is the one doing the action.\n\n\nDo\nAdd details to the product\n\n\nDon’t\nDetails were added to the product\n\n\nPassive voice\nTo tell if you’re using the passive voice, look out for:\n\nWhen the object comes before the subject (“the item was purchased by the\ncustomer”)\nPast tense verbs (“was added,” “was created,” and so on)\nForms of the verb “to be” (“was,” “is,” “were,” and so on)\n\nYou should almost always write in the active voice, but here’s when to use the\npassive voice:\n\nTo avoid referring to yourself or Shopify\nTo make it clear that you didn’t personally take an action or make a decision\nIf the object (thing being done) is more important than the subject (person\ndoing the thing)\n\n\n\nDo\nInvoices are created monthly and emailed to\nmarki.yeung@nomail.com\n\n\nDon’t\nShopify creates and emails your invoices monthly to\nsimran.robichaud@nomail.com\n\n\nContractions\nContractions are abbreviated words. We use them to set a light and casual tone\nin the interface. The goal is to sound human, so avoid contracting verbs that\nsound awkward when you say them out loud, or have been phased out of modern day\nspeech.\n\n\nDo\n\nYou can’t have products with negative weights\nYour products don’t have weights\nYou’re all set up\nThis product doesn’t require shipping\nThe customer name shouldn’t contain numbers\nIt’s a good time to plan your Black Friday sale\nAn error occurred and your changes couldn’t be saved\nI’m Kit, your digital marketing assistant\nThis transfer hasn’t been received\nYou haven’t connected your account\nYou’ve exceeded 10 password attempts\n\n\n\nDon’t\n\nThat’ll make sure you are all set up\nIt would’ve been possible if you’d installed the latest updates\nThe set up was not complete, but this’ll do\nThere’re 10 products in this collection\nYour product mustn’t be more than 20kgs\nThis product needn’t be shipped\nThere are 3 visitors who’ve viewed this product\nYou gotta set up Shopify Payments to use Shopify Capital\nIt’d be a good idea to place an ad this weekend\n\n\n\nPlain language\nUse words and language that our merchants use. Avoid jargon or technical\nterminology. Make sure each sentence has a single focus and keep them short. Aim\nfor a Grade 7 reading level.\n\n\nDo\n\nWe’ve made some changes to improve your store’s security\nThese products aren’t getting a lot of views, but visitors are adding them to\ntheir carts\n\n\n\nDon’t\n\nYour SSL certificates were activated\nThese are your less popular products with the highest add-to-cart conversion\n\n\n\n\nCapitalization\n\n\nHeadings\nUse sentence case for all headings:\n\nCapitalize the first word of a heading\nCapitalize proper or trademarked nouns (names of products, countries, or\npeople)\nLowercase for everything else\n\n\n\nDo\nCreate purchase order\n\n\nDon’t\nCreate Purchase Order\n\n\nProduct and feature names\nIn general, if a feature or product isn’t unique to Shopify, don’t capitalize it\n(such as blogs, navigation, pages). If it’s unique to Shopify and marketable as its\nown product, capitalize it (such as Shopify Payments, or Frenzy).\nFor all terms and definitions, check our full\nvocabulary list.\n\n\nDo\n\nblogs\nnavigation\nShopify Payments\n\n\n\nDon’t\n\nBlogs\nNavigation\nshopify payments\n\n\n\nTrademarks\nRespect the usage guidelines of any third-party intellectual property. For\nexample, in US communications, Apple Pay requires you to include the trademark\nsymbol (™) the first time Apple Pay appears in body copy.\nReview the third party’s brand usage guidelines to make sure you are using the\ncompany’s name and logo correctly.\nJob titles\nJob titles should be capitalized when they come before or after a person’s name. When\nreferring to a job title without referencing a name, don’t capitalize the job\ntitle.\n\n\nDo\n\nContent Strategist Jane Smith\nJane Smith, Content Strategist\nJane Smith is a content strategist.\nThe content strategist designed the information architecture.\n\n\n\nDon’t\n\ncontent strategist Jane Smith\nJane Smith, content strategist\nJane Smith is a Content Strategist\nThe Content Strategist redesigned the information architecture.\n\n\n\nLetters following slashes\nThe first letter following a slash shouldn’t be capitalized.\n\n\nDo\nZIP/postal code required\n\n\nDon’t\nZIP/Postal code required\n\n\n\nHeadings and subheadings\nSee the content guidelines for headings and subheadings in the actionable language section.\n\nLists\n\n\nBulleted\nUse a bulleted list when items are related but sequence or priority doesn’t\nmatter.\n\n\nDo\nUse Shopify Payments to:\n\nAvoid the hassle of setting up a third-party payment gateway\nTrack your payout schedule from the Shopify admin\nMinimize lost sales from chargebacks\n\n\n\nDon’t\nUse Shopify payments to\n\navoid the hassle of setting up a gateway,\ntrack pending payout schedule,\nminimize lost sales from chargebacks. And eliminate PCI fees\n\n\n\nNumbered\nUse a numbered list when item sequence or priority does matter, such as step-by-step instructions.\n\n\nDo\nTo set up Shopify Payments:\n\nGo to Settings from Shopify admin\nSelect Shopify Payments\nSelect Setup\n\n\n\nDon’t\nTo set up Shopify Payments:\n\nGo to Settings from Shopify admin Then select Shopify Payments\nSelect Setup\n\n\n\nDropdown menus\nActions in a menu\nMenu lists give users a horizontal set of actions when space is limited. The\norder of actions is often based on logic such as most popular actions.\nActions in a menu follow a {verb}+{noun} pattern. If there’s enough context,\nonly a verb might be required.\n\n\nDo\n\nRename\nEdit\nHTML\nDuplicate\n\n\n\nDon’t\n\nHTML\nediting options\nFile name changes\nDuplicate this order so that you can make edits, updates, or changes\n\n\n\nNouns in a menu\nMenu lists give users a horizontal set of nouns when space is limited. The order\nof nouns is often based on logic such as most recent orders.\nNouns in a menu should be concise but still give the user enough information so\nthey can easily find and accurately select the item they want.\n\n\nDo\nSelect filter\n\nToday\nYesterday\nThis week\nThis month\n\n\n\nDon’t\n\nFilter visibility\nFilter product type\nFilter product vendor\nFilter tagged with\n\n\n\nCapitalization\n\nList items always start with a capital letter.\nCapitalization and punctuation rules apply to both bulleted and numbered\nlists.\n\n\n\nDo\nCompany name\n\nHidden\nOptional\nRequired\n\n\n\nDon’t\nCompany name\n\nhidden\noptional\nrequired\n\n\n\nPunctuation\n\nIntroduce bulleted lists with a colon or a heading.\nDon’t use commas at the end of list items (for bulleted or numbered lists).\nIf any list item contains two or more sentences, punctuate all list items.\nIf all list items are one sentence or fragments, don’t punctuate.\nNever put a comma or semicolon at the end of a bulleted or numbered list item.\nTreat each list item as a self-contained piece of information.\n\n\nDates, numbers, and measurements\n\n\nThese guidelines are for American English, which is the language we use as a base before translating to other languages. However, dates, numbers, and measurements may be formatted differently in other languages. You can use helpers to ensure they are localized automatically.\nDate\nWhen possible, use the month’s full name, for example, October. If there are\nspace constraints, use 3-letter abbreviations, for example, Oct. Don’t write\ndates numerically, for example, 07-02-14.\n\n\nDo\n\nThursday, October 15, 2015\nOctober 15, 2015\nOct 15, 2015\n\n\n\nDon’t\n\nThur, October 15\nOctober 15, ’15\n10/15/15\n\n\n\nDon’t use ordinal indicators, which are words representing position or rank in a\nsequential order (1st, 2nd, 3rd, and so on).\n\n\nDo\nJanuary 23–April 1\n\n\nDon’t\nJanuary 23rd–April 1st\n\n\nTime:\n\nUse the 12-hour clock, followed by am or pm.\nInclude a space after the last number. For example, “Your package will\narrive at 12:35 pm.” Adding the space helps with formatting for English-speaking markets outside of North America, so we use it for North American usage as well.\nUse the browser time of the logged in user.\nTo show a time range, use an en dash and include the am/pm after both times,\nfor example, 3:00 pm–4:00 pm.\nIf indicating both the date and time, separate them with the word “at” instead of a comma.\n\nTime zones\n\nInclude a time zone only if it’s necessary, such as for an event listing.\nUse the time zone’s abbreviation following the am or pm, for example, 4:00 pm NZT.\nIf your audience is in a single time zone, then don’t include an S (for Standard) or D (for Daylight). For example, 3:00 pm PT.\nIf your audience is in a combination of time zones, then include the S (for Standard) or D (for Daylight) to avoid confusion. For example, 3:00 pm PDT.\n\nFor all translations, the time format is automatically localized by the Intl.DateTimeFormat JavaScript object.\n\n\nDo\nThursday, October 15, 2015 at 2:00 pm EDT\n\n\nDon’t\n2015-10-15, CDT 2:00P.M.\n\n\nUse consistent timestamp formats by following these examples:\n\n\nDo\n\nLess than 1 min: Just now\n1 min to 60 min: 13 minutes ago\nToday: 10:30 am\nYesterday: Yesterday at 10:30 am\nIn the last 7 days: Friday at 10:30 am\n7 days to 1 year: Aug 14 at 10:30 am\nMore than 1 year: Aug 14, 2016\n\n\n\nDon’t\n\nLess than 1 min: 10:30am\n1 min to 60 min: 10:30am\nToday: Today, 10:30am\nYesterday: Friday, 10:30am\nIn the last 7 days: Friday, 10:30am\n7 days to 1 year: 10:30am, Oct 15, 2015\nMore than 1 year: Last year\n\n\n\nCurrency\nWhen including currency with a price, the currency comes after the dollar\namount. Learn more about formatting localized currency.\n\n\nDo\n\n$10,000 USD\n\n\n\nDon’t\n\nUSD$10,000\n$10KUSD\n$10,000USD\n\n\n\nNumbers\nIn general, use numerals. If the number is below 10 and not integral to the sentence, spell it out in full.\n\n\nDo\n\n9\n100\n1\nHere are 2 marketing campaigns you can use.\nYou have 3 orders to fulfill.\nYou no longer need to track shipments in two places.\n\n\n\nDon’t\n\nnine\none hundred\none\nHere are two marketing campaigns you can use.\nYou have three orders to fulfill.\n\n\n\nUse commas for numbers with four or more digits. Whenever possible, don’t\ntruncate numbers:\n\n\nDo\n\n12,000\n9,344\n1,800,887\n\n\n\nDon’t\n\n12 k\n9344\n1.8 m\n\n\n\nUse hyphens when writing phone numbers. Don’t use brackets, spaces, periods, or\nplus signs:\n\n\nDo\n\n613-555-1234\n1-514-555-1234\n33-55-416-123\n\n\n\nDon’t\n\n613.555.1234\n1-(514)-555-1234\n+33 55 416 123\n\n\n\nUse an en dash without a space on either side for number ranges:\n\n\nDo\n\n5–10 products\nOctober 15–31\n2005–2015\n25–100 lbs\n$0.00–$49.99\n2:00 pm–3:00 pm\n\n\n\nDon’t\n\n5 – 10 products\nOctober 15 – 31\n2005 – 2015\n25 – 100lbs\n$0.00 – $49.99\n2:00 pm – 3:00 pm\n\n\n\nUse “to” instead of an en dash if a number range is preceded by “from” in a\nphrase. Use “and” if a range is preceded by “between.”\n\n\nDo\n\nYou have a delivery scheduled from 10:00 am to 2:00 pm on Monday, July 18.\nActive from August 15 to August 30\nFree shipping for products between $10.00 and $40.00\n\n\n\nDon’t\n\nYou have a delivery scheduled from 10:00 am–2:00 pm on Monday, July 18.\nActive from August 15–August 30\nFree shipping for products between $10.00–$40.00\n\n\n\nFor undefined upward ranges, use “and up” or “or more.”\n\n\nDo\n\n$50.00 and up\n100 or more\n\n\n\nDon’t\n\n$50.00+\n&gt;100\n\n\n\nFor downward ranges, be specific.\n\n\nDo\n$0.00–$49.99\n\n\nDon’t\n$50.00 or less\n\n\nUnits of measurement\nIn all cases, include a space between the number and the unit.\n\n\nDo\n\n3.4 lb\n2 kg\n1 cm\n11.875 × 3.375 × 13.625 cm\n\n\n\nDon’t\n\n3.4lb\n2kg\n1.875 × 3.375 × 13.625cm\n\n\n\nNever pluralize unit of measurement abbreviations.\n\n\nDo\n\n4 lb\n11 ml\n\n\n\nDon’t\n\n4 lbs\n11 mls\n\n\n\nWhen listing out multiple measurements in a row, put the unit of measurement at the end\ninstead of after each number (and include a space).\n\n\nDo\n\n11.875 × 3.375 × 13.625 cm\n\n\n\nDon’t\n\n1.875 cm × 3.375 cm × 13.625 cm\n\n\n\nFor pricing by measurement, don’t add a space before or after a slash.\n\n\nDo\n\n$100/m\n$5/100 g\n\n\n\nDon’t\n\n$100/ m\n$5/100g\n\n\n\nFor units of measurement, use decimals instead of fractions:\n\n\nDo\n\n2.375 lb\n11.875 × 3.375 × 13.625 cm\n\n\n\nDon’t\n\n2-3/8 lb\n11-7/8 × 3-3/8 × 13-5/8 cm\n\n\n\nUnit of measurement abbreviations\nThis table shows the standard abbreviations for commonly-used units of measurement.\nUse the imperial system for the United States, Liberia, and Myanmar, and use the metric system for all other countries.\n\n  \n    \n      Measurement\n      System\n      Unit\n      Abbreviation\n    \n  \n  \n    \n      \n        Area\n      \n      Metric\n      square meters\n      m²\n    \n    \n      Imperial\n      square feet\n      sq ft\n    \n    \n      \n        Distance\n      \n      Metric\n      kilometers\n      km\n    \n    \n      Imperial\n      miles\n      mi\n    \n    \n      \n        Image resolution\n      \n      Universal\n      pixels\n      px\n    \n    \n      megapixels\n      MP\n    \n    \n      pixels per inch\n      ppi\n    \n    \n      dots per inch\n      dpi\n    \n    \n      \n        Length\n      \n      Metric\n      centimeters\n      cm\n    \n    \n      meters\n      m\n    \n    \n      Imperial\n      inches\n      in\n    \n    \n      feet\n      ft\n    \n    \n      yards\n      yd\n    \n    \n      \n        Storage size\n      \n      Universal\n      kilobytes\n      KB\n    \n    \n      gigabytes\n      GB\n    \n    \n      terabytes\n      TB\n    \n    \n      \n        Volume\n      \n      Metric\n      centimeters\n      ml\n    \n    \n      litres\n      L\n    \n    \n      Imperial\n      fluid ounces\n      fl oz\n    \n    \n      gallons\n      gal\n    \n    \n      \n        Weight\n      \n      Metric\n      grams\n      g\n    \n    \n      kilograms\n      kg\n    \n    \n      Imperial\n      ounces\n      oz\n    \n    \n      pounds\n      lb\n    \n  \n\n\n\nAddresses and places\n\n\nAddress\nLay out address forms in the following format:\nFirst name             Last name\nAddress\nApartment, suite, etc. (optional)\nCity\nCountry            Province           Postal code\n\nPlease note, “optional” in Apartment, suite, etc. (optional) means that the\nfield is optional for customers to complete, but we should always include it in\nthe form.\n\n\nDo\n\nUse locale-specific alternatives for province and postal code, for example,\nthe US uses State and ZIP code\n\n\n\nDon’t\n\nAdd extra fields\nChange the placeholder text\n\n\n\nCountry, province, and state names\nUse a nation’s proper name when referring to it as a noun.\n\n\nDo\nYour store must be located in the United States.\n\n\nDon’t\nYour store must be located in the US.\n\n\nWhen using a country as an adjective (such as when referring to currency), use the abbreviated form without punctuation.\n\n\nDo\nPinterest requires your store to use US currency.\n\n\nDon’t\nU.S. currency\n\n\nThings to watch out for:\n\nDon’t use colloquial forms of a nation or state name, for example, America instead of the\nUnited States\nSearch online to see whether nations commonly use “the” before their name, for example, the\nPhilippines or the Falkland Islands\n\n\nPunctuation\n\n\nAmpersands\nDon’t use ampersands (&amp;). They attract attention to the least important part of\nthe sentence. Spell out the word “and.”\n\n\nDo\nZones and rates\n\n\nDon’t\nZones &amp; rates\n\n\nApostrophes\nUse apostrophes to represent omitted letters or numbers:\n\nOmitted numbers (’40s)\nOmitted letters (don’t, can’t, won’t)\nVerb contractions (it’s, you’re, we’re)\n\nUse apostrophes to form possessives:\n\nSingular nouns: add ’s, even if they end in s (merchant’s,\nbus’s)\nPlural nouns that don’t end in s: add ’s (women’s, men’s)\nPlural nouns that end in s: add an apostrophe (boxes’, customers’)\n\nDon’t use apostrophes to form possessive pronouns such as hers or his.\n\n\nDo\n\nMerchant’s store\nWomen’s clothing\nCustomers’ credit cards\n\n\n\nDon’t\n\nMerchants store\nWomens clothing\nCustomers credit cards\n\n\n\nAlways use apostrophes, not vertical (straight) quotes.\n\n\nDo\n\n’\noption + shift + ]\n\n\n\nDon’t\n\n&#39;\n\n\n\nColons\nAvoid using colons in sentences. If you need to use one, don’t capitalize the\nfirst word after the colon unless it’s a proper noun.\n\n\nDo\nYour store accepts payments with GoCoin and Shopify Payments.\n\n\nDon’t\nYour store accepts payments with: GoCoin and Shopify Payments. Merchants store,\nwomens clothing, customers credit cards\n\n\nDon’t use colons to introduce radio buttons or checkboxes.\n\n\nDo\nIf the customer abandons their checkout, send them an email reminder to complete\ntheir order\n\n   Never\n   6 hours later\n   24 hours later\n\n\n\n\nDon’t\nIf the customer abandons their checkout, send them an email reminder to complete\ntheir order:\n\n   Never\n   6 hours later\n   24 hours later\n\n\n\nIntroduce bulleted lists with a colon.\n\n\nDo\nCorrect the following payment information to continue:\n\nThe credit card verification value (CVV) doesn’t match the credit card\nThe billing address street doesn’t match the street for the credit card\nThe billing address ZIP or postal code doesn’t match the credit card address\n\n\n\nDon’t\nCorrect the following payment information to continue.\n\nThe credit card verification value (CVV) doesn’t match the credit card\nThe billing address street doesn’t match the street for the credit card\nThe billing address ZIP or postal code doesn’t match the credit card address\n\n\n\nCommas\nUse the oxford comma (also known as the serial comma) in sentences. There should\nbe a comma after every list of 3 or more items (unless you’re using a bulleted or numbered\nlist).\n\n\nDo\nKit is an app that handles your online advertising, email marketing, and social\nmedia.\n\n\nDon’t\nKit is an app that handles your online advertising, email marketing and social\nmedia.\n\n\nDon’t use commas to separate bulleted or numbered list items.\n\n\nDo\n\nThe credit card verification value (CVV) doesn’t match the credit card\nThe billing address street doesn’t match the street for the credit card\nThe billing address ZIP or postal code doesn’t match the credit card address\n\n\n\nDon’t\n\nThe credit card verification value (CVV) doesn’t match the credit card,\nThe billing address street doesn’t match the street for the credit card,\nThe billing address ZIP or postal code doesn’t match the credit card address.\n\n\n\nEllipses\nThe ellipses (…) can be used in place of a missing piece of text (most commonly\nto show the deletion of words from a direct quotation). Avoid using ellipses in\ntext.\nUse ellipses for:\n\nTruncation in the center of a title bar\n\nDon’t use ellipses for:\n\nPlaceholder copy\nTrailing off a sentence\n\n\n\nDo\nSearch files\n\n\nDon’t\nStart typing to search for files…\n\n\nAlways use the ellipsis character, not three periods.\n\n\nDo\n… option + ;\n\n\nDon’t\n...\n\n\nTruncation\nConsider constraints of the space in the interface when deciding to use\ntruncation. Think about what part of the string merchants needs most. It’s\nusually the beginning or end, which means you might have to truncate the middle\nof the string.\nEllipses button component\nA button with an ellipsis icon (not the same as text) is used to expand more\nactions. It’s typically used in cards, or for horizontal sets of actions when\nspace is limited. Android uses a vertical version (vertically stacked dots).\nEn-dashes and em-dashes\nUse an en dash with no spaces in between (–) for a fixed range of numbers\n\n\nDo\n2006–2013\n\n\nDon’t\n2006 – 2013\n\n\nUse an em dash only if you can’t make your message clearer by splitting it into\ntwo sentences. Use an em dash without a space on either side (—).\n\n\nDo\nChoose your theme’s colors, typography, and pictures—all in one place.\n\n\nDon’t\nChoose your theme’s design—colors, typography, and pictures—all in one place.\n\n\nDepending on the font or appearance, you may want to include a hair space on\neither side of the en or em dash. HTML entity code for hair space is &amp;hairsp;\nor &amp;#8202;.\nTip: On Mac the keyboard shortcuts are option - for en dash and shift option -\nfor em dash.\nExclamation marks\nAvoid exclamation marks—only use them for really really exciting things. If you\nabsolutely have to, limit yourself to one exclamation mark per page.\n\n\nDo\nYou’ve launched your first online store!\n\n\nDon’t\nYou’ve updated your product title!\n\n\nHyphens\nUse hyphens to:\n\nForm compound modifiers: two words that combine to modify or describe the noun\nthat follows\n\n\n\nDo\n\nStart your free, no-risk, 14-day trial.\nThis is a high-risk order.\nThis order is high risk.\nAdd weight-based shipping rates.\nAdd rates based on the weight of an order.\n\n\n\nDon’t\n\nStart your free, no risk, 14 day trial.\nThis is a high risk order.\nThis order is high-risk.\nAdd weight based shipping rates.\n\n\n\n\nJoin prefixes and suffixes only if there are two vowels beside each other.\nNever use hyphens in the words ecommerce and email.\n\n\n\nDo\n\nRe-order\nResend\n\n\n\nDon’t\n\nReorder\nReenable\nRe-send\n\n\n\nPeriods\nPeriods often end up in places they shouldn’t, and are omitted at strange times.\nIn general, don’t use periods in interface copy unless it’s a full sentence\ndescription.\nWhen to use periods:\n\n\nDo\n\nComplete sentences\nBody text, descriptions, and subtitles\nHelp text under text boxes (form fields)\nTimeline events\n\n\n\nDon’t\n\nSentence fragments\nTop-level headings and titles\nButtons\nNotifications\nToast messages\nPlaceholder copy\nNavigation menu items\nHover/tooltip text\nFooter help box text\nRadio button and checkbox text\n\n\n\n\n\nDo\n\nDescription example: Add this product to a collection so it’s easy to find in\nyour store.\nPlaceholder example: Search products\nTimeline example: $50.41 USD was authorized.\nFooter help box example: Learn more about\nproducts\n\n\n\nDon’t\n\nButton example: Add product.\nPlaceholder example: Search…\nHeading example: I’m Kit, your virtual employee.\nNotification example: 6 orders have payments that need to be captured.\n\n\n\nPeriods for bulleted, numbered, and lists of links\n\n\nDo\n\nUse when a list item has two or more full sentences, then also add periods to\nthe whole list\nUse for the description or helper text below a bulleted or numbered list item\n\n\n\nDon’t\n\nDon’t use periods when a list has only single sentences or fragments\nDon’t use periods for lists of links\n\n\n\nQuestion marks\nAvoid question marks wherever possible. Reword into affirmative statements\nwherever you can, but there are exceptions:\nIt’s okay to use question marks if you don’t know the result of the question:\n\n“Did you forget your password?”\n“Do you need to add a shipping rate?”\n\nDon’t use question marks if:\n\nIt’s the only option available: “Reset password”\nIt’s an on/off option: “Show quantity box”\n\n\n\nDo\n\nForgot?\n\n\n\nDon’t\n\nReset password?\n\n\n\nQuotation marks\nUse quotation marks to:\n\nDefine words (“growth-hacking”)\nQuote text\n\nWhen it’s helpful to the merchant, use quotation marks to indicate input that the merchant has provided, such as a product title or file name. Use this indication only when the input appears in running text.\n\n\nDo\n\nAre you sure you want to delete “cat shirt”?\n“Nike Air Max 90.png” failed to upload\n\n\n\nDon’t\n\nAre you sure you want to delete cat shirt?\nNike Air Max 90.png failed to upload\n\n\n\nIn general, place commas and periods inside quotation marks. When working with literal strings like typed commands or merchant inputs, place punctuation outside the quotation marks.\n\n\nDo\n\n“I see this all the time,” said Mary.\nAvoid general words like “all,” “every,” or “most.”\nTo remove this item, type “DELETE”.\n\n\n\nDon’t\n\n“I don’t understand why”, said Mitch.\nWe call it a “store”, not a “shop”.\nThere was an error with the file “cat_shirt.png.”\n\n\n\nAlways use smart (curly) quotes, not vertical (straight) quotes.\n\n\nDo\n\n‘\noption + ]\n’\noption + shift + ]\n“\noption + [\n”\noption + shift + [\n\n\n\nDon’t\n\n&quot;\nor\n&#39;\n\n\n\nSemicolons\nAvoid semicolons if possible. If you really need them, use semicolons to:\n\nConnect two closely related ideas, as long as they are both independent\nclauses (full sentences that could stand on their own).\nReplace a comma or the word “and” between two closely related ideas.\n\n\n\nDo\nMy friends made me banana pancakes on my birthday; I’ve never been happier.\n\n\nDon’t\nThe unicorn was hungry; the grass was brown.\n\n\n\nSpelling and formatting\n\n\nAmerican spelling\nUse American spelling for all external-facing Shopify content. When in doubt,\ncheck the Merriam-Webster dictionary for the\npreferred spelling of specific terms.\n\n\nDo\n\nColor\nCenter\nCanceled\n\n\n\nDon’t\n\nColour\nCentre\nCancelled\n\n\n\nTip: it’s easy to miss Canadian spelling. Switch your laptop language settings\nto American English and turn spell check on. It will highlight any Canadianisms\nyou might have missed.\nBold\nWhen in doubt, don’t bold.\nUse bold sparingly and only where strong emphasis is required.\nDon’t use bold to create a heading or emphasize:\n\nProper nouns\nMerchant input\nCheckbox titles\n\n\n\nDo\nAfter your first sale, PayPal will email you at merchant&#64;email.com with\ninstructions.\n\n\nDon’t\nAre you sure you want to delete Sunset T-shirt?\n\n\n\nYou, we, and other personal pronouns\n\n\nAddressing merchants\nAlways refer to merchants as “you.” Don’t speak for merchants\nwith phrases that use “I” or “my.”\n\n\nDo\nChange your email address in your Profile.\n\n\nDon’t\nChange your email address in My Profile.\n\n\nIn some cases (such as getting merchant consent or granting permissions) you\nshould refer to merchants as “I.”\n\n\nDo\n I agree to the terms and conditions\n\n\n\nDon’t\n You agree the terms and conditions\n \n\nReferring to Shopify\nAlways refer to Shopify as “we,” but avoid inserting Shopify into the content as\nmuch as possible (except when a human is taking action, such as reviewing a\nrequest).\n\n\nDo\nPinterest Buyable Pins will be available in the coming weeks.\n\n\nDon’t\nWe’re making Pinterest Buyable Pins available in the coming weeks.\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Help documentation",
      "keywords": [
        "writing instructions",
        "writing guides",
        "writing tutorials",
        "writing how-to's",
        "writing how to's",
        "writing how to",
        "writing step-by-steps",
        "writing step by steps",
        "writing technical documentation",
        "technical documentation",
        "linking to help documentation",
        "linking to technical documentation",
        "educating",
        "teaching",
        "explain apps",
        "describe apps",
        "educate about apps",
        "merchant education",
        "educational opportunity",
        "educational opportunities",
        "explain features",
        "describe feature",
        "educate about features",
        "merchant education",
        "educational opportunity",
        "educational opportunities"
      ]
    },
    "intro": "After you build an app or other integration, writing help documentation will\nshow merchants how to use it.",
    "content": "Help documentation\nAfter you build an app or other integration, writing help documentation will\nshow merchants how to use it.\nThese guidelines are based on our experience writing help documentation for the\nShopify Help Center. They’re all intended to serve\nthe same goal: to educate and empower Shopify merchants.\nTo include a link to help documentation in your app or channel, use the\nFooter help component.\n\nPlan for your audience\n\n\nThe way you write your help documentation should change depending on the type of\naudience and their expectations. Take some time to plan for your audience.\nAudience types\nWrite help documentation for its intended audience. For any given document, we\ncan expect a wide spectrum of Shopify users as an audience:\nProspective users\n\nNot signed up yet, possibly on a free trial\n\nNovice users\n\nSigned up but might not have sold online before\nPossibly not very computer-literate\nNew to Shopify concepts and workflows\n\nExperienced, confident users\n\nHave been using Shopify for some time\nFamiliar with the basic concepts and workflows\nConfident with computers\nAble to try some customizations with guidance\n\nHighly technical users\n\nExperienced and confident\nExtensive computing experience\nHappy to experiment and take risks\nExperienced problem-solvers\nSelf serve through forums and help documentation\n\nAudience expectations\nEach of these different users will likely have different expectations for the\nsame document. Let’s take a look at how that might play out:\nProspective users\n\nA quick-start guide\nConceptual overviews\n\nNovice users\n\nLots of hand-holding\nClear step-by-step instructions\nConceptual overviews\nDefinitions of terms\nTutorials\nContext-sensitive help\n\nExperienced, confident users\n\nClear step-by-step instructions\nConceptual overviews\nDefinitions of terms\nMore challenging tutorials\nContext-sensitive help\n\nHighly technical users\n\nProcedural instructions (can be to-the-point)\nCode fragments\nPointers to information sources\n\nThis is just one way to imagine the variety of users that fit into our audience.\nHowever we imagine their skill level, our aim for documentation remains the\nsame: to accommodate a wide range of users and their objectives. We can do this\nby presenting information in a way that’s inclusive of different skill levels,\ndifferent learning styles, and different workflows.\n\nUse headings to organize your document\n\n\nReaders come to help documentation with different expectations and in different\nusage settings. For example:\n\nOne might be working through a long, multi-stage setup process to connect a\nthird-party app into her admin\nAnother might be using her tablet to check out the details of Shopify POS and\nsee if it could be used at her cafe\nAnother might be trying to make a quick edit to his storefront in the half\nhour he has left before going to pick up his kids from school\n\nIn all these different cases, the reader needs documentation that’s findable,\nusable, and relevant—in short, organized.\nEffective headings\nEffective headings make it clear to readers which sections of a document are\nmost relevant to their current tasks (findability). Headings also provide them\nwith a good sense of progress while they move from one task to the next\n(usability).\nLow-level headings\nAs a general rule, the lower a heading is in the doc’s hierarchy, the more\nflexible you can be with its tone. For example, low-level headings can be longer\nand more specific, or less formal.\nHeading hierarchy\nMaintain the heading hierarchy throughout the doc, and don’t skip heading\nlevels. For example, go directly from H1 to H2, then to H3, and so on. This\nhelps the readers know where they are in the document, whether they’re going\nthrough a specific workflow or just scanning.\nTips\nFor page or topic-level headings, use short, gerund (ing-word) based statements.\n\n\nDo\n\nCreating products from your admin\n\n\n\nDon’t\n\nCreate products from your admin\n\n\n\nFor task-based headings within the document, use verb stems / imperatives.\n\n\nDo\n\nAdd a customer\n\n\n\nDon’t\n\nAdding a customer\n\n\n\nAvoid pronouns and articles in headings to keep them short.\n\n\nDo\n\nConnecting Facebook accounts\n\n\n\nDon’t\n\nConnecting a Facebook account\nConnecting your Facebook account\n\n\n\nAvoid long strings of nouns in a heading.\n\n\nDo\n\nPosting products\nCreating posts\n\n\n\nDon’t\n\nCreating product posts\nCreating product post pages\n\n\n\nKeep the key descriptors close to the front of a heading so it’s easier to scan quickly. For example, avoid starting the heading with “How to” or “To.”\n\n\nDo\n\nAdd a product\n\n\n\nDon’t\n\nHow to add a product\n\n\n\nTry to keep parallel grammatical structure between headings of the same level.\n\n\nDo\n\nBoost a post, Choose an audience, Fulfill an order\n\n\n\nDon’t\n\nBoost a post, Choosing your audience, How to fulfill your orders\n\n\n\nIn most cases, headings should be statements rather than questions. Save\nquestion-style headings for FAQs or low-level headings that address specific\nfunctions.\n\n\nDo\n\nAdd a product\n\n\n\nDon’t\n\nHow do I add a product?\n\n\n\nUse sentence case for all headings, but no periods at the end. Format and\ncapitalize interface elements or buttons in the way they appear in the Shopify\nadmin.\n\n\nDo\n\nAdding products to your store\n\n\n\nDon’t\n\nAdding Products To Your Store.\n\n\n\nUse parallel structure in lists, headings, and pretty much everywhere else to\nencourage comprehension and recall.\n\n\nDo\n\nAdding products to your store, Deleting products from your store, Editing\nproducts in your store\n\n\n\nDon’t\n\nAdd products to your store, How to delete products from your store, Edit a\nproduct in your store\n\n\n\n\nDocument tasks\n\n\nBe task-oriented\nMost help documentation is task-oriented: it’s designed to guide readers through\nthe steps they need to follow to complete a task. The best documentation will\nsave readers time by helping them complete their tasks quickly. The way that you\npresent information has a big impact on how useful it will be to your readers.\nUse introductions\nIn most cases, a document shouldn’t start with a set of instructions. Instead,\noffer context with an introductory comment or define a key concept about the\ntopic. Decide what information readers need before they scan the instructions.\nThis is also true for the document’s subsections.\nUse numbered steps\nDivide up the instructions in a way that reflects how the reader might think of\nthe task. Use numbered steps for each part of the task. This helps to hold your\nreader’s attention, and makes it easier for them to switch between a help\ndocument and Shopify to complete the task.\nStart at the beginning of a workflow\nMake sure that the instructions for major tasks in a longer document can stand\nalone. If the instructions for a task pick up abruptly where an earlier task\nleft off, then the readers who begin at that point might struggle to figure out\nthe workflow. Start documenting each task at the beginning of the workflow\nrequired to complete it.\nUse short lists\nIn general, use short lists (either numbered steps or bullets), which are easier\nto read than long lists. If you have a task or a list that needs more than ten\nitems, then break it up into two or more lists, each with their own subheading.\nMake tasks actionable\nTell the user what they can do with your product, not what it can do. This means\nstructuring documentation around user actions rather than product features.\nReaders aren’t there to read a spec: they want to keep their businesses up and\nrunning.\n\n\nDo\n\nUse this feature to keep track of key updates and promotions.\n\n\n\nDon’t\n\nThis feature notifies you about key updates and promotions.\n\n\n\nIn general, avoid grouping multiple actions together in a single numbered step.\nEach step should include only one or two user actions.\n\n\nDo\n\nFrom your Shopify admin, click Products.\nClick Add a product.\n\n\n\nDon’t\n\nFrom your Shopify admin, click Products, click Add a product, and\nthen enter your product information.\n\n\n\nAvoid telling the user to “find” or “locate” something in a task.\n\n\nDo\n\nIn the Pinterest section, click Remove channel.\n\n\n\nDon’t\n\nFind the Pinterest section, then click Remove channel.\n\n\n\nUse the action word “select” when you’re telling the reader to pick something\nfrom a set number of choices (like from a list or dropdown menu), and use\n“choose” when you’re telling the reader to make a choice that’s more open-ended\n(like “Choose what kind of store you want to open”).\n\n\nDo\n\nFrom the Products drop-down menu, select the one you want to discount.\n\n\n\nDon’t\n\nFrom the Products drop-down menu, choose the one you want to discount.\n\n\n\nUse consistent phrasing when referring to the reader’s choice. Use the most\ndirect “If you want to” instead of more formal options such as “If you would\nlike to” or “If you wish to.”\n\n\nDo\n\nIf you want to add a product, click Add product.\n\n\n\nDon’t\n\nIf you’d like to add a product, click Add product.\n\n\n\nAvoid using “desired” in place of the more direct “want.”\n\n\nDo\n\nSelect the item you want to add to the order.\n\n\n\nDon’t\n\nSelect the desired item to add to the order.\n\n\n\n\nStructure conditional statements\n\n\nFor conditional cases, start the step with “if” so the reader doesn’t have to\nread the whole sentence only to find out that the condition does not apply to\nthem. It often helps to add a “then” to help the reader identify the condition\nand the outcome.\n\n\nDo\n\nIf you need Z, then click A, B, and C.\n\n\n\nDon’t\n\nClick A, B, and C if you need Z.\n\n\n\n\nClarify results of actions\n\n\nShow results of actions in the same step as the task and be clear about where in\nthe flow the reader is.\nPut actions and results in the same step\nIf you need to mention the results of a user action, then do it in the same\nnumbered step that describes that action (don’t use a separate numbered step).\nIn general, omit results statements unless the result is surprising or\nunexpected.\nMention earlier steps to reinforce order of tasks\nYou can refer to an earlier step to reinforce the order of the steps.\nFor progress within a series of steps, use the phrase “When you’ve” or “After\nyou’ve.” Avoid using “Once you’ve.”\nFor progress between tasks, begin a section with “Now that you’ve” or “After\nyou’ve” (referring back to the previous action or step).\nUse “make sure” and “confirm” for important tasks\nWhen asking the reader to confirm something, use:\n\n“Make sure” in cases where there’s still a related important task (instead of\n“check that” or “verify that”).\n“Confirm” in cases where the reader has already been told to do something, and\nyou’re now reminding them.\n\nTips\nFor instructions, use the command form of the verb.\n\n\nDo\n\nClick Refresh to show your new orders.\n\n\n\nDon’t\n\nClicking Refresh will show your new orders.\n\n\n\nLimit the future tense to cases that actually refer to the future.\n\n\nDo\n\nChoose an end date. After this date, the boosted post will revert to a regular\npost.\n\n\n\nDon’t\n\nClick Save. The price will change when the discount is applied.\n\n\n\n\nUse screenshots for clarity\n\n\nScreenshots help visual learners understand complex tasks and add context to the\ntasks you’re documenting. Use them wisely.\nUse screenshots for complex tasks\nIn general, don’t use a screenshot to illustrate every step in a task. Instead,\nsave screenshots for places where the interface is complicated.\nMake screenshots with equal margins\nWhen highlighting an area of a screenshot, try to show an equal amount of space\naround the area that you want the reader to focus on.\nUse consistent images in a workflow\nTell a story by being consistent with details in screenshots within a document.\nFor example, you could follow a single order and keep the details the same from\none screenshot to the next.\n\nTeach through documentation\n\n\nDocumentation is an opportunity for education. Building context, making\ninstructions clear, and encouraging learning are key.\nLink to next steps\nOffer links to the next steps. Choose the next steps based on reader profiles\nand feedback.\nEncourage learning\nEncourage the reader to learn more. Explain the benefits of the feature in the\nintroduction of your document.\nMake the first tasks easier\nWhere you can, give the readers “early wins.” Make the first step or two of the\ntask short and easy.\nBuild context\nConnect the current task to readers’ wider knowledge: other parts of Shopify,\nthe store-building process, and even the business-building process.\nTry not to repeat information on the same page\nIn most cases, avoid repeating information on a page. You might need to repeat\nimportant points to make sure the reader notices them. For example, you might\nrepeat a warning from the document’s introduction within a set of instructions.\n\nUse the right tone\n\n\nThink of the context that the reader is in and what they might be feeling and\nthinking while they’re reading your documentation. This perspective will help\nyou pick what type of tone to apply.\nInstructional tone\nMost people don’t want to spend time reading documentation. They want to learn\nwhat they need to know, and then move on. The language in documentation needs to\nbe short, to the point, and task-oriented. That doesn’t mean your writing needs\nto be terse or dry.\nLighter tone\nIn general, you can begin a document using a lighter tone.\nInformal tone\nWhen you introduce a task, an informal tone can help draw the reader in, offer\ncontext, and encourage the reader to keep going. You can also use a more\ninformal tone when introducing sub-tasks, to give the reader a break from the\ninstructions.\nDirect tone\nFor actions and tasks, aim for a much more direct tone. Keep your tone\napproachable by using contractions (for example can’t, it’s) to link\ndirections and results.\nTips\nUse contractions.\n\n\nDo\n\nAfter you’ve set up your product, click Save.\n\n\n\nDon’t\n\nAfter you have set up your product, click Save.\n\n\n\nAddress the reader or user as “you.”\n\n\nDo\n\nYou can add products from the Products page in your Shopify admin.\n\n\n\nDon’t\n\nProducts can be added from the Products page in your Shopify admin.\n\n\n\nKeep tone in check by avoiding the following:\n\nSounding patronizing, chummy, cheery, childish, or otherwise inappropriate in\nan attempt to seem informal and relatable.\nColloquialisms, jokes, sarcasm, jargon, and slang. Avoid anything that’s too\nculturally specific.\nAnything that causes the user to pause or hesitate, unless you explicitly want\nthem to.\n\n\nUse the active voice\n\n\nUse the active voice as much as possible, which generally sounds less formal\nthan the passive voice. This means writing what merchants do, instead of\nwhat is being done by merchants. But in cases where the passive voice\nsounds more natural than the active voice, use passive voice (like\nwith verbs such as “publish” or “assign” and with nouns like “discount”).\n\n\nDo\n\nAfter you’ve added a product, click Save.\n\n\n\nDon’t\n\nAfter the product has been added, Save must be clicked.\n\n\n\n\nImprove readability\n\n\nIt’s important that the sentences you put together flow. Changing things up and\nknowing when things should be combined or separated will improve prose. Reading\nsentences that flow helps reader comprehension.\nAvoid choppy writing\nUse linking adverbs, conjunctions, and prepositions liberally to avoid choppy\nwriting.\n\n\nDo\n\nClick the button to open the window.\n\n\n\nDon’t\n\nClick the button. The window opens.\n\n\n\nChange up sentence structures\nVary your sentence structure, especially in longer paragraphs. Try not to use\nmore than two phrases with a “To x, do y” structure in a row—this gets\nrepetitive and can cause the reader to lose interest. To break it up, add a\nshort declarative sentence, if possible.\nBreak up complicated chunks\nUse conjunctions (a word that joins words or groups of words) to break up\ncomplicated passages.\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Merchant-to-customer content",
      "keywords": [
        "merchant to buyer",
        "buyer",
        "shopper",
        "buyer voice and tone",
        "customer voice and tone",
        "writing for checkout",
        "checkout",
        "check out"
      ]
    },
    "intro": "Shopify creates content for different audiences. One of those audiences is merchants’ customers. A customer is a person or organization who interacts with a Shopify merchant or a merchant’s [sale channel](https://polaris.shopify.com/content/vocabulary#definition-s-sales-channel).",
    "content": "Merchant-to-customer content\nShopify creates content for different audiences. One of those audiences is merchants’ customers. A customer is a person or organization who interacts with a Shopify merchant or a merchant’s sale channel.\nMerchant-to-customer content represents the merchant, not Shopify, and should optimize the customers’ online or retail store experience.\nEvery UX discipline is encouraged to create content at Shopify. Use this guide when you’re writing content that a customer will see on a Shopify store or receive from a merchant.\nYou’ll find merchant-to-customer content in places such as:\n\nOnline store checkout pages\nShipping update emails\nReturn labels and emails\nPoint of Sale (POS) screens, such as digital receipts and payment errors\n\n\nWhat it isn’t\nIf you write for multiple audiences, it’s important to note that merchant-to-customer content isn’t:\n\nShopify-to-buyer (see definition for buyer content, such as Shopify Pay or Arrive)\nShopify-to-merchant content, such as the Shopify admin\nShopify-to-world content, such as shopify.com or blog posts\n\n\nExperience values for customers\nShopify has a set of experience values. The ones to focus on when creating merchant-to-customer content are:\nConsiderate\nWherever and however a customer uses a Shopify experience (even if they don’t know it’s Shopify), we want it to work for them. The best Shopify experiences work on every screen, on every platform, in every language, and in every country.\nEfficient\nShopify experiences help customers achieve goals faster, more accurately, and with less effort. We break complex tasks down into simple steps, use friction to highlight important decisions, and always set expectations about what will happen next.\nTrustworthy\nShopify experiences are genuine, always honest, and transparent. We show customers that merchants act in the customer’s best interest. We create communication that strengthens the trust customers have in merchants.\n\nMerchant voice and tone\nMerchant voice and tone is customer-focused.\nShopify merchants sell everything from physical products, such as eco-sneakers, to digital products, like music downloads. The language they use is very different from store to store. This means that when writing from a merchant perspective, we use a voice that’s appropriate on any store, and for any type of customer. Merchant-to-customer content shouldn’t sound out of place coming from any merchant.\nHuman, but not individual\nToo much personality is inappropriate for some stores. Customers aren’t going through the purchase experience to admire the witty content. Research shows that the majority of people want content that’s easy to understand and communicates concepts efficiently. Not robotic. Not full of personality. Just clear and straightforward to help them complete their task.\nKeep in mind that some content, such as emails, can be personalized by merchants. You’re providing a default for them to work from.\n\n\nDo\n\nYour payment details couldn’t be verified. Check your card details and try again.\n\nAll transactions are secure and encrypted.\n\nSelect the address that matches your card or payment method.\n\nThanks!\nThis example is when the customer finishes checkout in person (all other examples are from online checkout).\n\n\n\n\nDon’t\n\nA fatal error occurred.\n\nWhoops! Houston, we have a problem!\n\nDon’t worry, your details are safe with us!\nAddress must correspond with that held by your payment provider.\nThanks for stopping by! or See you again soon!\n\n\n\nShopping, not ecommerce: use shopper terms\nAvoid technical or ecommerce terms. Customers are interested in their order and their delivery, not in inventory and fulfillment. They might want to sign up for news and exclusive offers, but not marketing emails.\n\n\nDo\n\nEnter your name exactly as it’s written on your card.\nYou’ll get shipping and delivery updates by email.\n\n\n\nDon’t\n\nThere was a server verification error with your payment provider.\nWe’ll inform you when we’ve fulfilled your order.\n\n\n\nConcise, but not short\nIt’s important that any purchase flow is efficient. Use short, easy-to-understand words and phrases. For example:\n\n\nDo\n\nUse “to”\nUse “go to”\nThere was a problem with our payments\n\n\n\nDon’t\n\nDon’t use “in order to”\nDon’t use “proceed to”\nNo payment gateway is currently configured\n\n\n\nBut remember that clear beats short. Don’t use content that can be interpreted in different ways. For example, does “bi-weekly” mean twice a week or every two weeks? It’s clearer to say “Every 2 weeks.” Using more words is okay if it provides clarity.\n\n\nDo\n\nEvery two weeks\nGetting available shipping rates\n\n\n\nDon’t\n\nBi-weekly\nLoading\n\n\n\nNo matter who the audience is, all Shopify content follows the same grammar and mechanics and product content guidelines.\nRead our general voice and tone guidelines to compare how Shopify talks to merchants.\n\nVocabulary considerations\n“Buyer” and “customer” are similar so it’s easy to confuse the use of these terms.\nA “buyer” interacts with multiple Shopify stores or has a direct relationship with Shopify, such as through Shopify Pay.\nIn contrast, a “customer” is a person or organization who interacts with a Shopify merchant or a merchant’s sale channel.\nIn the Shopify admin and Point-of-Sale (POS), a customer appears on the Customers page when they engage with a merchant in an identifiable way. This could be because they:\n\nwere added or imported by the merchant\nstarted a purchase but abandoned it at checkout\nmade a purchase\ncreate a customer account\nsubscribed to the merchant&#39;s mailing list\n\nWord usage to use/avoid:\n\n\nDo\n\nUse the store name in place of “merchant”\nBe direct and use “you”\nFocus on the merchant-to-customer relationship\nUse “text message” or “message” when writing for North American audiences\nUse noun + verb phrases for success messages, for example, ”payment sent”\nThere was a problem with our payments\n\n\n\nDon’t\n\nMerchant (in place of store name)\nCustomer or customer (in place of “you”)\nShopify (keep Shopify out of the conversation)\nSMS\nOh happy day! (don’t be over-congratulatory)\nWrong, fail, failure, error (avoid sounding robotic or negative)\n\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Naming",
      "keywords": [
        "names",
        "caps",
        "capitalizations",
        "capitalizing",
        "how to name",
        "naming at Shopify",
        "naming guidelines",
        "picking a name",
        "product naming",
        "feature naming",
        "website naming",
        "event naming",
        "trademarked names",
        "trademarks",
        "branded names",
        "capitalized names"
      ]
    },
    "intro": "The names we give our products and features teach merchants how to use Shopify\nand how to find the things they need to run their business.",
    "content": "Naming\nThe names we give our products and features teach merchants how to use Shopify\nand how to find the things they need to run their business.\n\nThoughtful naming\nNames influence how merchants and other audiences perceive and understand\nShopify. A well-chosen name will:\n\nPut clarity above creativity\nHelp establish a mental model for our audiences\nEnhance people’s perception of our brand\nIncrease adoption of the product or feature\nDifferentiate Shopify from other products\nClarify where a product or feature fits into our brand system\n\nThe naming process involves collaboration. Include different disciplines and\npeople with different subject matter expertise in the creation of a name.\n\nDoes it need a branded name?\nMost features don’t need an official, branded name. For example, order entry is\na feature that’s referred to descriptively and so doesn’t need to be\ncapitalized. When choosing what to call a feature, pick words that describe what\nthe feature does or represents. If there’s room, add extra context for merchants\nby describing the feature instead of using only the feature name.\nAvoid capitalizing descriptive feature names.\n\n\nDo\n\nOrder entry\n\n\n\nDon’t\n\nOrder Entry\n\n\n\nIf there‘s room, describe the feature instead of defaulting to only using the\nname.\n\n\nDo\n\nDisplay carrier calculated shipping rates to your customers at checkout.\n\n\n\nDon’t\n\nDisplay carrier calculated shipping rates.\n\n\n\nUsing “Shopify”\nOnly Shopify can use the word “Shopify” in a name. The word “Shopify” can’t be\nused to name third-party products.\nIt’s important we use the word “Shopify” consistently, and sparingly. Don’t use\n“Shopify” in a name unless there’s a lack of surrounding context and we want its\ntarget audience to know it’s associated with Shopify.\nAdding “Shopify” doesn’t add clarity in the context of other Shopify products\nand features. For example, merchants often confuse Shopify Shipping with the\nother shipping features, like shipping settings, carrier calculated shipping\nrates, shipping labels, and shipping zones. Our support staff have to refer to\nthe Shopify Plan by its cost because the general name doesn’t distinguish it\nfrom the other plans.\nUse “Shopify” in front of a name when a product:\n\nIs or will become a separate product or platform and we need to associate it\nwith Shopify\nShould be differentiated from other, similar products in the industry\nDoesn’t justify an\nevocative name, but\nstill needs to associated with Shopify\n\nDon’t use “Shopify” in a name for built in functionality features, like fraud\nanalysis or importing products.\n\n\nDo\n\nShopify Pay\nShopify App Store\nShopify Theme Store\n\n\n\nDon’t\n\nShopify Analytics\nShopify Discounts\nShopify Account\n\n\n\nShopify makes apps that merchants can add to their Shopify admin. It’s okay to\nsay “Built by Shopify” or “Made by Shopify” after the app name. Once you’ve\npicked the format that works for the design, use it consistently.\n\n\nDo\n\nShopifyProduct Reviews\nShopifyOrder Printer\nShopifyShopcodes\n\n\n\nDon’t\n\nProduct Reviews\nOrder Printer\nShopcodes\n\n\n\nApps that aren’t built by Shopify should not use the word “Shopify” in their\nname or say “for Shopify” after the name.\n\n\nDo\n\nAdSpace\nEmail Marketing\n\n\n\nDon’t\n\nAdSpace for Shopify\nEmail Marketing for Shopify\n\n\n\n\nDescriptive vs evocative names\nThere are two types of approaches to naming, the descriptive approach, or the\nevocative approach. Descriptive names are concrete, while evocative can be more\nabstract. Descriptive names are merchant friendly, and the most common. Features\nshould always have descriptive names. Standalone products that require\nindependent branding can use evocative names. Third-party apps and channels\nshould have their own branded names and should never use the word “Shopify” in\nthe name.\nIf you’re a Shopify employee and are looking to trademark an evocative name, ask\nthe legal department for help.\nDescriptive names\nFeatures and products connected to Shopify’s main product offering should have\nnames that reveal something about their purpose. Avoid jargon and make sure the\nname you pick won’t get confused with similar names or terms.\nReserve evocative naming conventions for standalone products like Kit, and\nFrenzy.\nDescriptive names should:\n\nDescribe the experiences they represent\nFit into the information architecture of the product\nUse merchant-friendly terms, not industry standard terms\nMake sense in marketing materials\nAlign with brand\n\nIf it’s a default feature (merchants don’t have to sign up or opt in to use it),\ndon’t capitalize it.\n\n\nDo\n\nShopify Capital\nfraud analysis\nUse analytics to review your store’s transactions\n\n\n\nDon’t\n\nShopify capital\nFraud Analysis\nUse Analytics to review your store’s transactions\n\n\n\nAvoid jargon and give merchants a hint about the actions they’ll be able to take\nwhen they interact with the product or feature.\n\n\nDo\n\nShopify Help Center\nShopify Theme Store\ndiscounts\nLogo maker\n\n\n\nDon’t\n\nShopify Help Documentation\nConfiguration app\nShipity-do-dah\n\n\n\nEvocative names\nStandalone products use evocative names to position us in the industry. These\nunique and bold naming conventions can help with branding or recall, but don’t\nalways help people understand the experience. They’re better for standalone\nproducts, and not for experiences that are part of Shopify’s main product\noffering.\nSometimes Shopify acquires a product or service that already has a unique,\nbranded name. Even though it may become more tied to Shopify, it can keep its\nname to maintain its brand identity. This also helps maintain the context\naudiences already have about the product, like in the case of Kit.\nCertain standalone names use the word “Shopify” because it differentiates the\nproduct from similar ones in the industry, like Shopify Pay in comparison to\nApple Pay, or Android Pay. For more details, see the\nguidelines for using “Shopify” in a name.\nEvocative names should:\n\nHave a strong, independent brand identity\nHelp with branding or recall\nReflect the concept it represents\nMake sense when used in marketing materials\n\nIf you work at Shopify and want to trademark a name, talk to the legal\ndepartment. It’s easier to trademark unique or made-up name. These names have\nstronger identities, but it’s not always clear what they do.\n\n\nDo\n\nFrenzy\nKit\nOberlo\n\n\n\nDon’t\n\nFlash sales app\nThe Marketing Bot\nDrop Shipping app\n\n\n\nSome evocative names can be more descriptive, although they’re harder to\ntrademark if they use common terminology. Not all evocative names need to be\ntrademarked.\n\n\nDo\n\nBurst\nShop Class\n\n\n\nDon’t\n\nFree Stock Photography\nLearn about Shopify event\n\n\n\nIf you’re creating a website or product for an existing brand, maintain its\nbrand identity and keep “Shopify” out of the name.\n\n\nDo\n\nKylie Jenner Pop-up Shop\nKyliePowered by Shopify\n\n\n\nDon’t\n\nShopify Pop-up, featuring Kylie Jenner\n\n\n\n\nShopify products and features\nAn off-brand and unclear name can confuse your audience. It can also feel\ndisconnected from the rest of Shopify.\nA good product or feature name should:\n\nHelp merchants understand what the experience represents\nFit into the information architecture of the product or website in which it\nbelongs\nMake sense when compared to other products, features, websites, or events in\nthe same market\nAvoid any negative or weird connotations\n\nThere are two types of approaches to naming, the\ndescriptive approach, or the evocative approach.\nReferring to Shopify and areas in the admin\nUse consistent and easy to understand descriptions when referring to locations\nin product, especially in\nhelp documentation. Descriptive\nfeature names aren’t capitalized,\nbut when providing steps in a workflow, it’s okay to capitalize the page name,\nfor example, “Go to the Products page”. Note that the page name is capitalized,\nbut “page” isn’t.\nWhen referring to Shopify’s main product offering, use “Shopify”. The only\nexception is when you need to differentiate it from another product, like the\nmobile app, or explain a task specific to the admin. In these cases, you can use\n“Shopify admin”.\nA good description can:\n\nIncrease adoption of the product area\nHelp establish a mental model for merchants\nClarify where the area fits into the product system\nHelp support staff and merchants understand each other when communicating\n\nA good description should:\n\nAvoid jargon\nBe used consistently\nDescribe the area it represents\nPrioritize terminology used by merchants over industry standards\n\nUse consistent descriptions when referring to areas in the Shopify admin.\n\n\nDo\n\nThe customer list is found on the Customers page.\nWhen a new customer places an order with your store, their name and\ninformation are automatically added to your customer list.\n\n\n\nDon’t\n\nManage customers in Customers.\nCustomer information is automatically added to Customers in the Shopify admin.\n\n\n\nMerchants call our main product offering “Shopify”, so we use that same\nterminology.\n\n\nDo\n\nUse “Shopify” when talking about our main product offering\nUse “Shopify admin” if you need to differentiate it from the mobile app\n\n\n\nDon’t\n\nDon’t use “admin” or “Shopify admin” if “Shopify” will do\n\n\n\nTop-level marketing content is created for audiences who have little context\nabout Shopify. Since they may not know about specific Shopify products, we use\n“Shopify” here too.\n\n\nDo\n\nRun your business using Shopify\nPrint shipping labels directly through Shopify\n\n\n\nDon’t\n\nUse our ecommerce platform\nPrint shipping labels directly through Shopify’s admin\n\n\n\nUsing “app” and “channel”\nFor app names in areas with surrounding context, like in the app store or on the\nApps page in the Shopify admin, don’t add the word “app” to the end of the name.\n\n\nDo\n\nOberlo\nScript Editor\n\n\n\nDon’t\n\nOberlo app\nScript Editor app\n\n\n\nFor app names without surrounding context, like in search in the Shopify admin,\nor on a home card, add “app” so merchants know what it is.\n\n\nDo\n\nBulk Account Order app\n\n\n\nDon’t\n\nBulk Account Order\n\n\n\nWhen writing about channels, make it clear to merchants that they are interacting with\na channel through Shopify, and not through the other company.\n\n\nDo\n\nThe Amazon channel now supports electronics listings\n\n\n\nDon’t\n\nAmazon now supports electronics listings\n\n\n\nIf “channel” is used somewhere in surrounding content, it’s okay to drop it for\ntitles and button copy.\n\n\nDo\n\nAdd Amazon\n\n\n\nDon’t\n\nAdd Amazon channel\n\n\n\nNot every channel is a sales channel. For example, BuzzFeed is a marketing\noutreach channel and Facebook is a sales and marketing channel. Clarify channel\ntypes when you have room, otherwise default to channel. If there’s surrounding\ncontext, you can drop channel altogether.\nIf there’s surrounding context, drop the word channel from the name.\n\n\nDo\n\nGoogle Shopping\n\n\n\nDon’t\n\nGoogle Shopping channel\n\n\n\nIf there’s room for a description, explain the channel type.\n\n\nDo\n\nUse BuzzFeed’s marketing outreach channel to get more customers.\n\n\n\nDon’t\n\nUse the BuzzFeed channel to get more customers.\n\n\n\n\nGeneral guidelines\nIn general, capitalize evocative names and don’t capitalize feature names. Avoid\nacronyms, and think about how your audience will interpret a name.\nCapitalization\nDon’t capitalize default features. Default features are built into Shopify and\nmerchants don’t have to sign up, add, or opt in to use them. Analytics and\ndiscounts are examples of default features.\nCapitalizing names should only happen:\n\nFor independently branded,\nevocative names\nWhen we want to try and claim specific words (think Tweet or Pin)\nFor names listed in top level navigation, like Products\n\n\n\nDo\n\nShopify Hardware Store\nShopify Theme Store\nBlack Friday Cyber Monday (BFCM)\nRetail Package\nBuy Button\n\n\n\nDon’t\n\nShopify hardware store\nShopify theme store\nBlack friday cyber monday (bfcm)\nRetail package\nBuy button\n\n\n\nNames shouldn’t be capitalized if they:\n\nAre descriptive\nInclude common, familiar words\nAre default features\n\n\n\nDo\n\nanalytics\nfraud analysis\nonline store\nthemes\n\n\n\nDon’t\n\nShopify Analytics\nFraud Analysis\nOnline Store\nThemes\n\n\n\nAcronyms and abbreviations\nAn acronym is a word formed from parts of an existing compound term. For\nexample, “rich text editor” could be written as “RTE”. An abbreviation is a\nshortened form of a written word or phrase used in place of the whole word or\nphrase. “Amt” is an abbreviation for “amount”.\nOur stance on acronyms:\n\nAvoid creating acronyms.\nAcronyms take longer to understand and might reduce adoption of a product,\nfeature, or concept.\nAcronyms are like inside jokes—people who understand the acronym feel included\nin the meaning, but people who don’t feel left out and confused.\nIf you have to use an acronym, spell it out the first time you use it and\nfollow with the acronym in brackets.\nInternationally understood acronyms and abbreviations are acceptable, like the\nword “app” or “SEO”.\n\n\n\nDo\n\nRich text editor\nMulti label printing\nMerchant Success Manager\nVirtual reality\nBuild a Bigger Business\n\n\n\nDon’t\n\nRTE\nMLP\nMSM\nVR\nBABB\n\n\n\nAvoid using Internet slang acronyms in Shopify products and when creating new,\nbranded names. These acronyms are exclusive to certain online communities and\nare not approachable for everyday merchants.\n\n\nDo\n\nShop Class\n\n\n\nDon’t\n\nShopify IRL\n\n\n\nInternationally understood acronyms and abbreviations are acceptable. Some of\nthese include time zone, tax, barcode, weight, and size abbreviations.\n\n\nDo\n\nSEO\nNZDT\nSMS\nQR codes\nHST\nCVV\nSKU\nISBN\nUPC\nGTIN\nUSD\n1 kg\n2 lbs\nApp\n\n\n\nDon’t\n\nSearch engine optimization\nNew Zealand Daylight Time\nShort messaging service\nQuick response codes\nHarmonized sales tax\nCard verification value\nStock keeping unit\nInternational standard book number\nUniversal product code\nGlobal trade item number\nUnited States Dollar\nKilogram\n2 pounds\nApplication\n\n\n\nWhen using a country as an adjective (such as when referring to currency), you\nmay use an abbreviated form without punctuation.\n\n\nDo\n\nPinterest requires your store to use US currency.\n\n\n\nDon’t\n\nPinterest requires your store to use United States currency.\n\n\n\nSimilar names\nBeing an ecommerce platform has its naming challenges. For example, a lot of\nfeature names could include the word “shipping” or “pay”. Think merchant-first\nand be descriptive to differentiate the name. Picture what it’s like to have\nconversations with merchants about similar names like Shopify Payments and\nShopify Pay, or around our pricing plans to identify names that might be\nconfusing.\nBefore naming a new product or feature:\n\nConduct an audit of our vocabulary list to\nnarrow down your naming choices\nAsk the support team to see if they think it’ll conflict with another name\nDraft a test conversation around similar sounding names\n\nLocalization and translation\nNames may not translate directly to other languages. Identify if you need to\ncreate a separate name, or if a direct translation will do.\nBefore confirming a name, check with people who work in translation and\nlocalization to find out if:\n\nThere are cultural considerations\nA different name for a different location would have a positive impact for\nbrand\n\nSome already existing names are different depending where you’re from. For\nexample, in North America, people say, “I’ll send you a text.” In India and\nNordic countries, people say, “I’ll SMS you.” Do your research and find out what\npeople call things in everyday conversations.\nUse “text message” when writing for North American audiences.\n\n\nDo\n\ntext message\n\n\n\nDon’t\n\nSMS\n\n\n\nUse SMS when writing for Indian and Nordic audiences.\n\n\nDo\n\nSMS\n\n\n\nDon’t\n\ntext message\n\n\n\nInitials\nIn languages that use logographic characters, like Japanese, name initials can\nhave different meanings. For example, in Japanese a name like Chikako (周子)\nIshikawa (石川) means “neighborhood stone” (周石) in initials. Check with the\nlocalization and translation team before writing something in short form in\nanother language.\nAvoiding negative connotations\nSome words or terms have unintended negative connotations for some audiences. Do\nsome research to avoid associating offensive words or phrases with your product\nor feature name.\nStart by:\n\nSaying it out loud\nGetting people outside of your team to look at the name with a new perspective\nDoing a Google search to see if it surfaces with another meaning\n\n\nComponents\nBe strategic and consistent when naming\ncomponents. It makes it easier to create\nand build products and features for Shopify when people can switch between\nimplementations and see the same names represented throughout. For example, we\nshould use the same name across Rails, React, and Figma. It’s okay if each\nimplementation has its own spelling convention. For example, “Account\nconnection” in documentation and in Figma layer names, but\n“ui_account_connection” in Rails, and “AccountConnection” in React.\nA good component name can:\n\nIncrease adoption of a component\nClarify where a component fits into our system\nHelp establish a mental model for people using the components\n\nComponent names in documentation should:\n\nDescribe the functionality they represent\nAvoid jargon so different disciplines understand its function\nBe written in singular, not plural, format\n\nIn documentation we write out the name without any punctuation and use sentence\ncase, meaning, the first word is capitalized and the rest is lowercase.\n\n\nDo\n\nType scale\nEmpty state\n\n\n\nDon’t\n\nTypeScale\nEmptyState\n\n\n\nIn code, we use the same name as the documentation, but can alter the spelling\nconvention to suit the implementation.\n\n\nDo\n\nTypeScale\nEmptyState\n\n\n\nDon’t\n\nType scale\nEmpty state\n\n\n\nFor subcomponents, the same rules apply. In documentation, write out the name\nwith a space between words, and use sentence case.\n\n\nDo\n\nLayout section\n\n\n\nDon’t\n\nLayout.Section\n\n\n\nFor subcomponents in the code, use a period in place of the space.\n\n\nDo\n\nLayout.Section\n\n\n\nDon’t\n\nLayout section\n\n\n\nFor all components, use American spelling:\n\n\nDo\n\nLayout.Center\nPalette.Color\n\n\n\nDon’t\n\nLayout.Centre\nPalette.Colour\n\n\n\nThere is an exception: the Labelled component uses the British spelling,\nfollowing the aria-labelledby attribute as per the ARIA specification itself.\n\nIcons\nIcons should be named consistently so they’re easy to find and implement across\nShopify.\nOverall, icon names should:\n\nRepresent the intended function of the icon\nAvoid jargon so different disciplines understand its function\n\nProduct area icons should:\n\nOnly be used to symbolize their specific product area or function\n\n\n\nDo\n\nHome\nOrders\nProducts\n\n\n\nDon’t\n\nHouse\nInvoice\nPrice tag\n\n\n\nFunctional icons not tied to product areas should represent a clear action.\n\n\nDo\n\nAdd image\n\n\n\nDon’t\n\nImage\n\n\n\nIcons with more than one function should be named to:\n\nRepresent their purpose\nDescribe how they look\n\n\n\nDo\n\nCircle alert\nCamera\nClock\n\n\n\nDon’t\n\nAlert\nPhotography\nTime\n\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Product content",
      "keywords": [
        "content standards",
        "content guidelines",
        "content strategy practices",
        "interface content",
        "strategic language",
        "edit content",
        "editing content",
        "reading level",
        "writes",
        "writing",
        "writing tips",
        "language tips",
        "content tips",
        "designing",
        "strategic designing",
        "action",
        "consistency",
        "consistent",
        "writing public-facing text",
        "public-facing text",
        "writing public-facing copy",
        "public-facing copy",
        "writing public-facing content",
        "public-facing content"
      ]
    },
    "intro": "Thoughtful, consistent interface content is a core element of a well-designed\nuser experience.",
    "content": "Product content\nThoughtful, consistent interface content is a core element of a well-designed\nuser experience.\nOur content standards will help you understand how to think strategically about\nthe language in your products and apps. They’ll also give you clear, tactical\nsuggestions designed to help you use language to craft better experiences.\nEach component also includes content guidelines about\nhow to write for specific interface elements.\n\nRespond to merchant needs\n\n\nNot everyone is a confident writer, but everyone can improve their content by\nmaking sure it responds to the needs of their audience. Keep in mind that real people\nrely on Shopify every day to run their businesses. The product, feature, or app\nyou’re building can make a big difference to the people using it. Take some time\nto learn about who they are, what they need, and the language they use.\n\nUse plain language\n\n\nShopify merchants are busy people who may be running their online business in\naddition to having a full-time job, managing their family life, and doing a\nmillion other things. They’re also located all over the world, have varying\nlevels of literacy, and some may not speak English as their first language. Some content can be translated poorly and can be misinterpreted.\nWriting using plain language doesn’t mean dumbing content down. It’s\nabout making sure language is straightforward and communicates concepts as\nefficiently as possible. As a benchmark, we consider plain language to be a United States grade 7 reading level. Grade reading level can be checked using apps like http://www.hemingwayapp.com/ or https://readable.com/.\nIf you create content for Shopify’s other audiences, such as merchant’s customers, the same plain language guidelines apply. Some reading level exceptions can be made for audiences with a high level of subject matter expertise in an area, like partner developers. Keep in mind that we still aim to keep technical content readable by other UX disciplines who want to learn about technical subjects, or for those who speak English as a second language.\nTips\n\nWrite short sentences (no more than 15–20 words).\nUse headings and bullets to make your content easier to scan.\nAvoid jargon and always choose a short, simple word over a long and\ncomplicated one.\nAvoid idioms and phrases with indirect or ironic meanings.\nOnly use industry-standard terminology when you have reason to believe it will\nimprove understanding. Spend time researching what words people use,\nrather than defaulting to what corporations call things.\nEdit unnecessary or repeated words.\nWrite for small screens first. Constraints can help you focus on the most\nimportant message.\nRead your content out loud. If you get tripped up or it doesn’t sound like\nsomething a human would say, your content needs to be edited.\n\n\nEncourage action\n\n\nPeople use Shopify to get things done, whether they’re managing a store, or making a purchase. Content should be written and structured\nto help the reader understand and take the most important actions.\nTips\n\nCalls to action on buttons and links should start with a strong verb that\ndescribes the action a person will take when they click.\nAlways prioritize the most important information and task — don’t make people\ndig to find what they care about.\nBreak down complicated tasks into steps that help people focus on one thing\nat a time.\nUse the active voice to clarify the\nsubject and the action.\n\n\nBe consistent\n\n\nTo help your audience understand key concepts and actions they can take, use\nconsistent nouns (words used to identify people, places, or things) and verbs\n(action words) wherever possible.\nTips\n\nGet in the habit of making a list of all the most important verbs and nouns in\nthe experience you’re building.\nLook at your word list. Does each word clearly describe the object or action\nit represents in the simplest way possible?\nDoes your language reflect how people think and the words they use?\nIdentify synonyms (a word or phrase that means exactly or nearly the same as\nanother word or phrase in the same language), and eliminate them. Each\nimportant object and action should have a single word to represent it.\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "App release notes",
      "keywords": [
        "release",
        "notes",
        "app",
        "updates",
        "fixes"
      ]
    },
    "intro": "Merchants need to quickly understand what’s changed in our apps and why, so they can get back to running their business.",
    "content": "App release notes\nMerchants need to quickly understand what’s changed in our apps and why, so they can get back to running their business.\nTo “get out of the way” of our merchants, write notes that are functional, reliable, and usable.\n\nOverview\nApp release notes should:\n\nBe helpful and informative. Focus on important information that merchants need to know, without being overly technical or promotional.\nUse straightforward and plain language. Explain what changed and what the benefit is as efficiently and clearly as possible.\nReflect the scale of the release—if it’s truly significant, tell people.\nBe specific. Never use generic descriptions like “Bug fixes and improvements.” If we fixed a problem or updated something, tell merchants what we fixed or updated.\nBe accessible to all. Merchants come from different backgrounds, locations, and levels of experience. We want everyone to understand us.\nAvoid being clever or congratulatory. We build products that affect people’s livelihoods: even if we played a role in their success, this isn’t about us.\nAvoid witticisms or humour; always consider the audience’s perspective first. Shopify’s brand is not humorous and jokes can be read as an obstacle to getting back to work.\n\n\nRecognizably Shopify\nEach product has its own personality: our Android and iOS apps are different from POS or Shop. However, they should each be recognizably Shopify, and should follow our principles and rules.\nHierarchy\n\nPrioritize notes in terms of importance—most important first\nStart with updates unless the bug fix is critical\nGroup related fixes or updates together when possible—less is more\nReleases are capped at 500 characters on Android and 4000 on iOS—aim to keep them under 500 characters\n\nWriting style\n\nUse the active voice and the past tense (“We fixed” or “We updated”) to explain that action we took\nUse complete sentences\nExplain when changes are “based on merchant feedback” or when “we received reports of…” something that needed to be fixed\nWhen there’s feature parity across platforms (iOS, Android), use the same language\n\nPunctuation\n\nUse bullet points\nEnd sentences with periods\nUse commas (,) but don’t use semicolons (;) colons (:), exclamation marks (!), ellipses (...), or question marks (?)\nUse em-dashes (—) to help with readability while remaining conversational\nDon’t use any text formatting, including bold and italics\n\n\nSentence patterns\nThere are many ways to describe an update or change. Try to choose the pattern that explains what’s changed and why it matters in the simplest way possible. When in doubt, boring is best.\nA product update or new feature\nBe specific about what can be achieved and where it can be achieved with the new feature:\n\n{x} is now available.\nYou can now {x}.\nYou can now manage your local deliveries from the orders screen.\n\n\nWe made it {x} so that {y}.\nWe made it quicker to do common actions across Shopify. You can now use context menus on iOS 13 or later.\n\n\nWe updated {x}.\nWe updated the Support screen so it loads faster.\n\n\nYou asked for {x}, so we added {y}.\nWe heard your feedback and made {x} change based on it.\n\nA resolved crash or bug\nBe specific about what was broken and what is now fixed.\n\nWe fixed an issue with {x}.\nWe fixed a crash that affected unlocking the app with Face ID or Touch ID.\n\n\nYou couldn’t {x}. We fixed that.\nSometimes you couldn’t share, edit, or duplicate discounts. We fixed this. (Use this pattern sparingly, and not for major fixes)\n\n\nWe received reports of {x} and made {y} changes.\n\nStandalone updates\nIf a release is large and affects a majority of merchants, introduce the update and then use bullet points to break down each smaller part:\nThe Shopify mobile app now uses {x} to do {y}.\n\nBenefit 1\nBenefit 2\nBenefit 3\n\nGeneric updates\nReleases should always be specific enough to avoid general or generic messaging.\n\n\nDo\n\nWe fixed an issue with archiving draft orders.\n\n\n\nDon’t\n\nVarious bug fixes and updates.\n\n\n\n\nNotes structure\nAlways start releases with updates unless the bug fix is urgent.\nMultiple updates\nUse in-line headers to indicate what’s an update and what’s a bug fix, for example:\nUpdate: View and fulfill local delivery orders from the smart grid or Orders page.\nBug fix: Logging out from one store and into another no longer causes the app to crash.\nSingle updates\nIf we’re announcing just one type of release (update or bug fix), use one header. For example:\nBug fix: Logging out from one store and into another no longer causes the app to crash.\nMixed updates\nUse in-line headers and indentation to indicate what&#39;s a standalone update, a regular update, and a bug fix. For example:\nUpdate: The Shopify mobile app now uses Shopify ID, so you can access multiple Shopify accounts with a single login and password.\n\nQuickly switch between your Shopify stores in the mobile app.\nAccess Academy, Exchange Marketplace, Shopify Community, and our Partner Program without logging in again.\n\nUpdate: When editing an order, you can now add the same product more than once.\nBug fix: Swapping from one store and into another no longer causes the app to crash\n\nExample release notes\nFor everyday fixes and updates, specify what was changed in a simple way.\n\n\nDo\n\nWe fixed an issue with archiving draft orders.\n\n\n\nDon’t\n\nVarious bug fixes and updates.\n\n\n\nFor infrastructure updates, explain the merchant benefit.\n\n\nDo\n\nYou told us the app was hard to use on slower connections—it now runs 4x faster.\n\n\n\nDon’t\n\nWe put the app on a diet: it’s fast and hot, just like you.\n\n\n\nFor technical updates, be specific but keep the language simple.\n\n\nDo\n\nWe fixed a crash that sometimes affected iPhone 5 and 4th generation iPads.\n\n\n\nDon’t\n\nWe fixed a crash that occurred on some 32 bit older devices.\n\n\n\nAvoid humour.\n\n\nDo\n\nWe improved the speed of the app by reducing its size.\n\n\n\nDon’t\n\nAccording to our engineers, the glass was bigger than it needed to be; we made the glass smaller.\n\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Vocabulary",
      "keywords": [
        "spelling",
        "vocabulary list",
        "dictionary",
        "shopify dictionary",
        "shopify vocabulary",
        "shopify terms",
        "caps",
        "capitalizations",
        "definitions",
        "define",
        "spelling",
        "terms"
      ]
    },
    "intro": "It’s important to use the same words, spelling, and capitalization consistently,\notherwise things start looking messy and confusing for merchants.",
    "content": "Vocabulary\nIt’s important to use the same words, spelling, and capitalization consistently,\notherwise things start looking messy and confusing for merchants.\nIn general, if a feature or product isn’t unique to Shopify, such as a blog, then don’t capitalize it. If it’s unique to Shopify and marketable as\nits own product, such as Shopify Shipping, then capitalize it. Edge cases are\nassessed individually and documented here.\nUse American English spelling for all merchant-facing content. When in doubt,\ncheck the Merriam-Webster dictionary for the\npreferred spelling of specific terms not found in this list.\n\nA: account, admin…\naccount\nThe relationship between a user and Shopify.\nA user has one account, which allows them to access their stores,\nthe Shopify Partner Program, Shopify Academy, and Shopify Community.\nTip: “store” and “account” are not interchangeable.\n\n\nDo\n\nYour account has access to 5 stores.\nLog in to your account.\n\n\n\nDon’t\n\nYou have 5 accounts.\nLog in to your store.\nYour profile has access to 5 stores.\n\n\n\nadmin, Shopify admin\nThis is the Shopify product merchants use to manage their store.\nExample: Log in to your Shopify admin.\napp\nAn abbreviation for application. A software program designed to perform a\nspecific function directly for the user or another app.\nApps can be integrated with Shopify to enhance functions and features. The\nShopify App Store has both paid and free apps built by Shopify and partners.\nExample: List your app in the Shopify App Store.\n\nB: Black Friday Cyber Monday…\nBlack Friday Cyber Monday\nA major shopping weekend in North America that marks the start of the holiday\nshopping season. Since customers are already hunting for deals, Black Friday\nCyber Monday is a good opportunity for merchants to boost their sales.\nExample: Create a Black Friday Cyber Monday discount to boost sales\nTip: In the admin, we should always default to using Black Friday Cyber Monday.\nYou can use the acronym BFCM only if you’ve introduced the full name first.\n\n\nDo\n\nBlack Friday Cyber Monday\nBFCM\n\n\n\nDon’t\n\nBlack Friday and Cyber Monday\nBlack Friday, Cyber Monday\nBlack Friday &amp; Cyber Monday\nBlack Friday/Cyber Monday\nbfcm\n\n\n\nblog\nA regularly updated website or web page written in an informal or conversational\nstyle, run by companies, individuals, or groups.\nShopify has several blogs including an Ecommerce blog, Web Design and\nDevelopment blog, and Shopify UX blog.\nMerchants can add a blog to their online store to boost search engine\noptimization (SEO), promote their products, and build a community around their\nbrand.\nExample: A blog can help you build a community around your products and your\nbrand.\nblog page\nA web page that displays blog posts.\nMerchants can add multiple blog pages to their online store.\nExample: You can add a blog page to your online store for content that you’ll be\nupdating regularly, or if you want to encourage feedback.\nblog posts\nA piece of writing or other type of content published to a blog. Often written\nin an informal or conversational style.\nMerchants can write, add, publish, and unpublish blog posts to blog pages on\ntheir online store.\nExample: After you’ve created a blog, you can get started on your first blog\npost.\nBuy Button, Shopify Buy Button\nShopify’s sales channel that lets merchants add ecommerce functionality to their\nwebsite, blog, or email campaign. Shopify Buy Buttons connect customers to the\nShopify checkout.\nExample: Match any web page’s theme by customizing the style and format of your\nBuy Buttons and embedded cart.\n\nC: cart page, check out…\ncart page, shopping cart, shopping cart page\nThe page a customer sees before they proceed to checkout with a summary of their\norder.\nExample: A shipping rates calculator on your cart page helps customers estimate\ntheir shipping costs before completing checkout.\n\n\nDo\n\ncart page\nshopping cart\nshopping cart page\n\n\n\nDon’t\n\ncheckout page\nbasket page\nbag\n\n\n\ncheck out (verb)\n\nTo pay for items and complete an order.\nLook at, read, or review something to determine its value or usefulness.\n\nExamples:\n\nCustomers want to see a summary of the items in their cart before they check\nout.\nCheck out these tips to improve your email marketing strategy.\n\n\n\nDo\n\ncheck out\n\n\n\nDon’t\n\ncheckout\ncheck-out\n\n\n\ncheckout (noun)\nThe place where customers pay for their items.\nThe part of a store that accepts orders and takes payments. Wherever merchants\nsell online, they use Shopify’s secure checkout to accept orders and take\npayments.\nExample: Use your secure Shopify checkout to accept orders and take payments.\n\n\nDo\n\ncheckout\n\n\n\nDon’t\n\ncheck out\ncheck-out\n\n\n\ncollections\nProducts grouped together into categories. Used to make products easier to\nmanage or easier for customers to discover.\nExample: Add a title and description to see how this collection might appear in\na search engine listing.\ncountry/region\nAn attribute of a domain, product, or any physical address. A country/region can take different forms, which is why this term includes country and region:\n\nCountry: Italy\nCountry made up of other countries: United Kingdom\nAutonomous region: Taiwan\n\nExample: Manage country/region pricing\n\n\nDo\n\ncountry/region\ncountries/regions\n\n\n\nDon’t\n\ncountry\n\n\n\ncustomers\nA person or organization who interacts with a Shopify merchant or their sales channel.\nFor example: Customers will get a discount if they enter a code at checkout.\nIn the Shopify admin and POS, a customer appears on the Customers page when they engage with a merchant in an identifiable way. This could be because they:\n\nwere added or imported by the merchant\nstarted a purchase but abandoned it at checkout\nmade a purchase\ncreate a customer account\nsubscribed to the merchant&#39;s mailing list\n\nTip: Avoid using “returning customer” (or other adjectives that imply a customer made a purchase) in contexts where merchants need a precise understanding of how their business is operating, such as analytics.\n\n\nDo\n\ncustomer\ncustomers\n\n\n\nDon’t\n\nreturning customers\n\n\n\n\nD: dev store, digital…\ndevelopment store, dev store\nA store where Partners can build and test freely.\nShopify Partners have the ability to create an unlimited number of development\nstores to use for demo or portfolio purposes, or as the first step in signing up\nclients for Shopify. When dev stores are handed off to the merchant/client, they\nbecome managed stores.\nExample: Dev stores have the full range of features included with the Advanced\nShopify plan.\ndigital wallet\nA service that allows a customer to pay through a payment provider without\nentering their credit card information.\nApple Pay is an example of a digital wallet that works with many different\npayment providers. Some digital wallet services, like Amazon Pay, come with\ntheir own payment provider.\nExample: Understand the digital wallet your customer used during a transaction.\ndropshipping\nA third-party fulfillment service or warehouse that prepares and ships\nmerchants’ orders for them.\nExample: Choose from available fulfillment and dropshipping services that will\nship your orders for you.\n\nE: ecommerce, email…\necommerce\nBuying or selling online.\nExample: Shopify’s ecommerce university guides are a rich resource for budding\nentrepreneurs.\nemail template\nThe place where merchants customize the emails that get sent to them, their\nstaff, or their customers. They can adjust preformatted and prewritten emails\ntemplates with their own content and formatting.\nExample: These emails are automatically sent out to either you or the customer.\nClick on the email templates below to edit.\n\nF: fulfill, fulfillment…\nfulfill (verb)\nBring an order or package to completion. When we say that an order has been\ncompletely fulfilled, we mean all the items in that order have been sent to the\ncustomer.\nExample: Fulfill all items for an order and send the shipping confirmation\nemail.\nfulfillment\nThe steps involved in receiving, processing, and delivering orders to customers.\nExample: Save time and money on order fulfillment by using Shopify Shipping to\nbuy and print USPS or Canada Post shipping labels.\n\nH: home card…\nhome card\nA special component of Shopify Home. Home cards give merchants insights about\ntheir business, suggestions on how to improve, and important communications from\nShopify. Unlike referring to Shopify Home, the term home card should only be\ncapitalized when it comes at the beginning of a sentence.\nExample: Shopify Home contains timely alerts, news, and guidance in one\nactionable feed. The content is presented through home cards.\n\n\nDo\n\nhome card\n\n\n\nDon’t\n\ncard\nin-app advertisements\nnotifications\n\n\n\n\nI: inventory, item…\ninventory\nA store’s complete list of variants. Includes SKU, barcode, tracking information, quantity, and locations each variant is stocked.\nExample: Manage inventory and orders across all your locations.\nitem\nOne unit of a product. If a product has variants, an item is one unit of a\nvariant.\nExamples:\n\nThe customer has 5 items in their cart.\nAutomatically fulfill items in an order.\n\n\n\nDo\n\nitem\n\n\n\nDon’t\n\nline item\n\n\n\n\nL: log in, login…\nlog in (verb)\nThe act of entering a username and password to securely use Shopify and\nauthenticate yourself.\nExample: Install and log in to the Shopify app.\nlogin (noun)\nUser credentials, such as a username, Shopify store name, and password.\nExample: As the account owner or a user with full access, you can see the login\nhistory of any staff member.\n\nM: merchant…\nmerchant\nSomeone who sells items or services.\nMerchants use Shopify or have a Shopify account to run their business. There are\nmany different types of Shopify merchants.\nExample: Merchants often operate a retail business and some offer services.\n\nO: online store…\nonline store\nA merchant’s ecommerce website. It’s one of many sales channels that a merchant\ncan use to sell products and services through the Shopify platform. Other sales\nchannels include Facebook, Pinterest, Shopify POS, and Buy Button.\nExample: Add products to your online store.\n\nP: password page, payment…\npassword page\nThe landing page for an online store that’s been hidden from the public and\naccessible only by a password that’s set by the merchant.\nExample: You can add a password page to your theme.\n\n\nDo\n\npassword page\n\n\n\nDon’t\n\nstorefront password\n\n\n\npayment method\nUsed to describe a specific way a customer can pay such as Visa, MasterCard, or\nApple Pay.\nExample: Select alternative payment method.\nTip: It’s fine to use this term informally.\nExample: You’re paying with MasterCard vs. Your payment method is MasterCard.\npayment provider\nThe gateway a merchant chooses to accept payments for their store.\nExample: Your current payment providers are Shopify Payments and Paypal.\n\n\nDo\n\npayment provider\n\n\n\nDon’t\n\ngateway\npayment gateway\n\n\n\npick up (verb)\nTo collect something that has been left elsewhere.\nShopify merchants may have customers who pick up their orders directly from\nthem.\nExample: Waiting for the customer to pick up their order.\n\n\nDo\n\npick up\n\n\n\nDon’t\n\npickup\npick-up\nPick Up\n\n\n\npickup (noun)\nThe act of collecting something.\nMerchants may make products available for pickup to their customers.\nExample: In-store pickup.\n\n\nDo\n\npickup\n\n\n\nDon’t\n\npick up\npick-up\nPickup\n\n\n\npop-up shop\nA short-term, temporary retail event hosted at a physical location.\nExample: Pop-up shops can create lasting impressions with potential customers\nbecause of their unique, time-limited, and engaging retail environment.\n\n\nDo\n\npop-up shop\n\n\n\nDon’t\n\npop up shop\npopup shop\n\n\n\nproduct\nPhysical goods, digital downloads, services, and gift cards that merchants sell\non their Shopify store. If products come in more than one option, like size or\ncolor, merchants can add variants for each combination of options.\nExample: You can duplicate products you’ve created on the product page.\n\nS: sales channel, Shopify…\nsales channel\nPlaces where merchants sell items, such as an online store, Pinterest, or\nFacebook. Merchants connect sales channels to their Shopify store where they can\nkeep track of their orders, products, and customers in one place, no matter what\nthey’re selling.\nExample: Merchants are always interested in adding sales channels that will put\ntheir products in front of a new group of customers.\nShopify Payments\nShopify’s payment processing service. Shopify Payments lets merchants accept\ncredit cards and Apple Pay through their checkout, Shopify POS, and other sales\nchannels.\nExample: Add Shopify Payments to accept credit cards and Apple Pay through your\nonline store and other sales channels.\nShopify POS, Shopify Point of Sale\nShopify’s Point of Sale app that’s used on tablets and smartphones to sell\nin person and accept payments.\nExample: With Shopify POS you can sell your products and accept payment on any\ndevice.\nShopify Support\nThe Shopify team that merchants can contact by phone, email, or chat for support with using Shopify products.\nExample: Contact Shopify Support for help with setting up your custom domain.\nstore\nA retail establishment for selling items to customers.\nExample: Turn any website into an online store. Embed your product in WordPress,\nSquarespace, Tumblr, and others using Shopify’s Buy Button.\nTip: Use “store” instead of “shop” to prevent sentences like, “your Shopify\nshop.”\nTip: “Store” and “account” are not interchangeable. A user has one account, which allows them to access all of their stores and services on Shopify.\n\n\nDo\n\nstore\nAdd products to your store\n\n\n\nDon’t\n\nshop\nAdd products to your account\n\n\n\n\nT: template, theme…\ntemplate\nA preformatted and/or prewritten document or file users can customize with their\nown content.\nShopify stores have email notification and website templates (see “themes”),\namong others.\nExample: The software includes templates for common marketing documents like\nemails.\ntheme\nA website template.\nMerchants can upload and customize their theme to change the look and feel of\ntheir online store.\nExample: Use a theme to create a beautiful online store customized to your\nbrand.\nTip: Use “Theme” as the primary term, but use “website template” in descriptions\nto add context for merchants who don’t know what a theme is yet.\nthird party (noun)\nA person or group who is indirectly involved but is not a principal party to an\narrangement, contract, deal, lawsuit, or transaction.\nExample: The transaction involved a third party.\nthird-party (adjective)\nMerchants can use a third-party credit card provider. Dropshippers are a\nthird-party order fulfillment service. Shopify Partners are third-party\ndesigners, developers, and creatives.\nExample: Complete the verification steps on the third-party site.\nTimeline\nA detailed chronological history for orders, draft orders, customers, and\ntransfers. Merchants can write internal notes or comments and mention other\nstaff accounts on Timeline.\nExample: If you use the Shopify app, you can receive notifications whenever\nyou’re mentioned in a Timeline comment.\n\n\nDo\n\nTimeline\n\n\n\nDon’t\n\ntimeline\nfeed\n\n\n\n\nV: variant...\nvariant\nMerchants can add variants to a product that comes in more than one option, like\nsize or color. Each combination of options is a variant.\nExample: You can show different product images for each variant.\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Voice and tone",
      "keywords": [
        "sound like Shopify",
        "personality of Shopify",
        "brand personality",
        "empathy",
        "merchant feelings",
        "merchant emotions",
        "merchant context",
        "content voice",
        "content tone"
      ]
    },
    "intro": "Learn how to apply Shopify’s voice and choose the right tone, no matter what\nproduct, feature, or app you’re building.",
    "content": "Voice and tone\nLearn how to apply Shopify’s voice and choose the right tone, no matter what\nproduct, feature, or app you’re building.\n\nWhat are voice and tone?\n\n\nShopify’s voice is a reflection of who we are. We should always sound like\nShopify.\nAt the same time, some aspects of our personality might be more or less apparent, depending on the audience and their context. That’s tone.\n\nShopify’s voice\nOur voice is a reflection of who we are. So who are we?\nSimply put, we’re a company, built by real people who understand this business and care about helping others succeed.\nThat should be clear every time someone uses our products or services.\nMost often, we show this through well-crafted tools that help people get their jobs done efficiently. But there are times when our personalities and perspectives should be more apparent. In those times, we should adapt our tone to respond to people in an appropriate and meaningful way.\nYou&#39;ll find more specific guidelines on how to adapt your tone to different situations in this guide.\n\nVoice guidelines\n\n\nAs Shopify’s voice, we should always:\n\n\n\n\nBe real, but not too tough or overly familiar\n\nUse business casual language—be plain-spoken, not pretentious or overly playful\nBe upfront and honest with merchants, even if we make a mistake\nCommunicate with clarity and empathy—be direct, not insensitive\n\n\n\n\n\nBe proactive, but not needy or pushy\n\nOffer merchants sincere encouragement and practical advice\nClearly explain how merchants are impacted when something goes wrong, but don’t overexplain with redundant content\n\n\n\n\n\n\n\n\nBe dynamic, but not scattered or impulsive\n\nCommunicate in a way that respects merchant emotion and context\nAvoid words that generalize success like “every,” “all,” and “most”\nUse language that supports action, movement, and progress\n\n\n\n\n\nGuide, but don’t handhold or prescribe\n\nUse expertise to help merchants succeed; don’t talk down to them\nBe specific when explaining benefits without making things sound better than they are\nTeach people the “why” and “how” behind actions—don’t just tell them to do something\n\n\n\n\n\nAdapting tone by situation\n\n\nOur tone adapts to the context. We’ll use certain voice attributes more or less based on the situation.\nOften people frame tone guidance around adapting to the emotional state of the audience. The reality is we never know a person’s emotional state. Even when things seem the most positive, we can’t be sure.\nWhile it’s helpful to consider how your audience is likely to feel, don’t assume or tell them how to feel. Instead, focus on the specifics of the situation and less on the emotions. Here are some of the most common situations to consider.\nEveryday tasks and activities\nWhen everything is working as it should, our goal is to give people what they need to get work done, without getting in the way or drawing attention to ourselves. We want the audience to know what something is or that something has happened as expected.\n\n\nDo\nLook for the simplest way to communicate information—words aren’t always necessary.\n\n\n\nDon’t\nUse overly complicated or intimidating language.\n\n\n\n\n\nDo\nBe consistent for identical actions or destinations when possible.\n\nDelete product\nDelete collection\n\n\n\nDon’t\nAdd extra text just to fill space.\n\n\n\nLearning and education\nSometimes it helps to give more explanation or education. In these situations, we want to make sure people feel confident in their actions and in our capabilities.\nSome people will want to be guided step-by-step through the process, while others may just want to try it out and learn on their own. Look for ways to give them both options.\nRemember, they may have sought this out specifically or we may have recommended it to them, so don’t assume that they want or need to use it.\n\n\nDo\nHelp people understand why they should do something, not just how.\n\n\n\nDon’t\nOversell or overpromise.\nCreate a new campaign and you could double your sales this holiday season.\n\n\n\n\nDo\nBreak down complicated tasks into steps that help people focus on one thing at a time.\n\n\n\nDon’t\nBe overly prescriptive about how someone should use a feature.\nYou need to add at least 10 products before opening your store.\n\n\nSimple errors\nWhile we do our best to be proactive and protect against unexpected events, they still happen. These are often simple mistakes or roadblocks to action that can easily be fixed. Although they aren’t necessarily errors or problems, they can feel that way at first.\nIn this case, our job is to help people understand what happened so that they can get back to work as quickly as possible\nRead the error message guidelines for more detailed guidance.\n\n\nDo\nClearly explain the situation and how it can be resolved.\nProduct weight needs to be positive. Change the product weight to be greater than or equal to 0 and try again.\n\n\nDon’t\nUse overly dramatic or scary words for simple errors.\nBad request, forbidden, fatal, expectation failed, unresolved, invalid\n\n\n\n\nDo\nLook for ways to help people resolve problems automatically.\n\n\n\nDon’t\nUse error numbers or code unless they’re easily recognizable by people and help them solve the problem.\n\n\n\nAcknowledging effort, progress, or completion\nThere are situations where we want to acknowledge that someone completed a complex activity or difficult task.\nWhile we don’t need to celebrate the accomplishment, we should recognize that they put in the time and effort. Depending on the level of effort, these may be simple confirmations or more active recognition that they completed something difficult.\n\n\nDo\nIf this is a task people do regularly, make it clear that the step is complete in a simple and non-intrusive way, like a toast. Consider ways to confirm completion without words or messaging.\nProduct saved\n\n\nDon’t\nAssume people are excited or celebrating. They may be annoyed if it was a particularly long process or if the immediate benefits aren’t clear.\nCongrats! You set up your single login for Shopify.\n\n\n\n\nDo\nIf the task was something we initiated or required, thank them for their time.\nThanks for taking the time to share your feedback.\n\n\nDon’t\nRefer to simple actions or completed steps as “successes.”\nYou successfully added a product.\n\n\nMotivate or encourage action\nThese are situations when we want to keep people moving along a desired path. In most cases, we do that with direct information and clear steps to encourage action.\nWe don’t want to be too overzealous or action-driven here—it’s more about helping people understand the next step and giving them the context they need to take it.\n\n\nDo\nHelp people understand what the next steps are and why they should take them.\nYour email address is connected to 8 accounts. Set up a single login to switch between stores faster and log in less often.\n\n\nDon’t\nAssume the next step or outcome is guaranteed.\nYou’re just a few steps away from receiving your first order.\n\n\n\n\nDo\nProvide guidance to help people understand if the decision is right for them.\nBased on your type of business, this is the POS hardware we recommend:.\n\n\nSerious problems or errors\nThere are times when we need to share bad news. This might be an outage or an error, or it may be a product that we’re no longer supporting. These are hopefully rare situations, but they will happen.\nIn this case, there’s a serious risk of damaging trust and hurting our relationship with the audience, so we should be very careful about how we communicate.\nRead the error message guidelines for more detailed guidance.\n\n\nDo\nExplain the impact on their business clearly, without using confusing or scary language.\nSome of today’s sales data hasn’t been updated yet. This will be fixed shortly. Your data is safe, and your sales are not affected.\n\n\nDon’t\nAsk merchants to trust us without providing data or context.\nToday’s sales data might not be accurate, but don’t worry—it’s just temporary.\n\n\n\n\nDo\nApologize and empathize when we’re at fault, but within reason.\nAll systems are now fully operational. We recognize and apologize for the stress, concern, and impact this outage had on your business. In the coming days we will be working to fully understand how this widespread internet infrastructure failure affected our platform.\n\n\n\n\nDo\nProvide clear steps to resolve issues. If there’s no solution, be direct about what that means for the merchant and what we’re doing about it.\nYour Shopify Payments account is on hold. Please attach your State Tax Exemption Certificate for review.\n\n\n\nAnnouncing new features and updates\nIt’s exciting to launch a new feature or update, but always consider the audience’s perspective first. While we may be excited about the benefits and capabilities, change can be intimidating or annoying for users.\nWhen you’re announcing something new, focus on educating and explaining what it is, what it’s used for, and what the user can expect.\n\n\nDo\nPitch our product by explaining the specific merchant benefits.\nIntroducing the new Buy Button \nMake it your own with custom fonts, colors, and styles. It also loads 50% faster so your visitors won’t miss it.\n\n\nDon’t\nJust talk about ourselves and assume the experience for merchants will be easy.\nGet Shopify’s new Buy Button \nIt’s never been easier to customize the fonts, colors, and styles of Buy Buttons. It’s also twice as fast.\n\n\n\n\nDo\nIf possible, let users dismiss announcements or postpone changes until they’re ready.\n\n\n\nCelebrations and congratulations\nThere are occasionally times when we want to celebrate an event or milestone, or to congratulate someone for an important accomplishment. In reality, this should be one of the least common situations we encounter.\nLet audiences know that we understand that it’s an important moment and we’re excited for them, but be careful not to take credit for it. Even if we played a role in their success, this isn’t about us.\nRemember, this is about celebrating their accomplishments, not ours. Launching something new? You probably don’t need to celebrate with them. Read our guidance around announcing new features and updates.\n\n\nDo\nOnly celebrate truly important or monumental situations when the audience likely feels proud, excited, or satisfied.\nYour store is 1 year old today! Here’s to many more.\n\n\nDon’t\nCelebrate completing tasks or processes that people don’t actually want to celebrate. Did they finish something difficult or do something for us? You may want to acknowledge their effort instead.\nYou set up your payment providers, congrats!\n\n\n\n\nDo\nExpress genuine happiness for merchants. Recognize their accomplishment and congratulate them on a job well done.\nYou launched your store! Nice work.\n\n\nDon’t\nTake credit for merchants’ successes or presume to know what they need.\nWe did it! Congrats on your first sale.\n\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Colors",
      "keywords": [
        "visual patterns",
        "color strategy",
        "color use"
      ]
    },
    "intro": "Our color system builds on the recognition of the Shopify brand colors to make the admin interface more usable.",
    "content": "Colors\nOur color system builds on the recognition of the Shopify brand colors to make the admin interface more usable.\n\n\n\n\n\n\nPrinciples\n\n\nCommunication is key\nAlthough we value an aesthetically pleasing use of color, we place a higher value on clear communication. Color supports the purpose of the content, communicating things like hierarchy of information, interactive states, and the difference between distinct elements.\nColors have meaning\nColors have assigned roles, which hold a specific meaning based on how they function within the interface. Defined color roles make things easy to modify and customize later. They also extend the color system so it works across any touchpoint at Shopify.\nColors follow accessibility guidelines\nThe color system is designed within the HSLuv color space to generate themes that meet WCAG 2.1 compliant contrast ratios. This makes things easier to find, identify, and interact with. It also makes the whole experience more accessible for merchants who are color blind or who have low vision. However you should never convey information using color alone.\n\nColor roles\n\n\n\n\n\nWe define colors based on the role they play in the interface. There are 10 color roles, which we use to generate the values of all the color variants in the palette.\n\n\n\n\n\nColor variants\nColor variants are variables that apply color to the UI, and their values are generated from the color roles. Color variants are available as tokens.\n\n\n\n\n\nVariants share a naming pattern that references their color role, the interaction state they define, and any UI elements they’re linked to.\n\n\n\nThe color system in action\nHow the color roles relate to the variants, and how they’re applied across the interface.\n\n\n\nSurface\nSurface colors affect surfaces of components, such as page, card, sheet, and popover.\n\n\n\n\n\nOn surface\nApply on-surface colors to elements that appear on neutral surfaces, usually borders, secondary icons, and text elements.\n\n\n\n\n\nPrimary\nUse primary colors for primary actions like buttons, icons and text on navigation and tabs, and for the background in navigation and tab interactive states.\n\n\n\n\n\nSecondary\nUse secondary colors for secondary and tertiary buttons and the background of form elements.\n\n\n\n\n\nInteractive\nUse interactive colors for things like links, focus indicators, and selected interactive states.\n\n\n\n\n\nSuccess\nSuccess colors indicate something positive, like the success of a merchant action or to illustrate growth.\n\n\n\n\n\nWarning\nWarning colors let the merchant know they need to take action, and are applied to badges, banners, and exception lists.\n\n\n\n\n\nCritical\nCritical colors are for destructive interactive elements, errors, and critical events that require immediate action.\n\n\n\n\n\nHighlight\nHighlight colors indicate important elements that don’t require immediate action. They’re used with informational banners and badges, indicators that draw attention to new information, loading or progress bars, and data visualization.\n\n\n\n\n\nDecorative\nDecorative colors are for expressive communications that assert the Shopify brand presence.\n\n\n\nNext\nTypography\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Data visualizations",
      "keywords": [
        "data viz"
      ]
    },
    "intro": "Visualizations surface patterns in data, and provide immediate answers to a\nsingle, specific question.",
    "content": "Data visualizations\nVisualizations surface patterns in data, and provide immediate answers to a\nsingle, specific question.\nThis section outlines data visualization practices at Shopify and how to\nleverage them.\n\nNote\nWe’re working on updates to the data visualization principles and rules. Stay tuned!\n\n\n\nData visualizations at Shopify\n\n\nThe data visualization process always begins with a set of data, a question, and\nanalysis of the data to find the answer. Each visualization should focus on\nanswering a single question about the dataset. For example, “What are my sales\nover time?”\nBy maintaining consistent styles and formats for our data visualizations, we\nensure that data is presented in a truthful and accurate manner to maintain\nintegrity with merchants.\n\nGuidelines\n\n\nData visualization should be approached by:\nSolving a problem\nHave a clear question that needs to be answered. If multiple answers to multiple\nquestions are illustrated in a visualization, it will become over complicated\nand hard to understand.\nTesting with real data\nTesting with real data will reveal the effectiveness of the visualization. Also\ntest when there are a few data points (one or two) or many data points (100 or more).\nScaling by number of datapoints\nThink about how the visualization will scale with more or fewer data points. Look\nout for cases where data is sparse (mostly zero) or spiky (some values are much\nlarger than others).\n\nFive core traits\n\n\nAn effective data visualization strikes the right balance between the five core traits: accuracy, intuitiveness, engagement, focus, and data granularity. It’s important to be intentional about which of these you focus on, and which are less important, in order to answer your specific question in the best way for your target audience. Understanding these traits help you choose between the many ways to visualize data by giving you a language for evaluating a visualization&#39;s effectiveness.\nAccuracy\nAccuracy is about how faithfully the visualization matches the original data set. How much accuracy is needed to send your message across? A high level of accuracy may not always be needed to convey a trend or a pattern.\nIntuitiveness\nIntuitiveness is about the ease of interpreting the visualization. Will merchants immediately understand what’s being represented, or will they need instructions? More intuitive is usually better, but sometimes it comes at the cost of flexibility.\nEngagement\nEngagement is about how much attention the visualization attracts at a glance. Is it the star of the show, or does it sit in the background? More engagement is not always better—sometimes the best visualization is one that plays a supporting role.\nFocus\nFocus is about how merchants’ attention is directed. Is one pattern or trend surfaced more prominently than others, or are there several trends that are given equal weight? Highly focused visualizations decrease cognitive overload, but restrict the breadth of the message you are able to convey.\nData Granularity\nData granularity is about the level of detail of the data set presented in the visualization. More granular means more data points, and possibly more cognitive processing, but less granular is less detailed. The right level of data granularity depends entirely on the specific question you’re trying to answer and the audience you’re communicating to.\n\nAxis and labelling conventions\n\n\nAll standard charts that show quantitative data have 2 axes that should be\nlabeled for clarity.\n\nLabelling should be outside and separate from the data area. This ensures the\nuser understands the range of the data without taking focus away from the\ndata.\nEnsure that all labels are clear and accurate in what they represent. Use\nsimple and short language.\n\n\nGranular guidelines\n\n\nAxis lines\nAxis lines should be used as a guideline to show quantitative data, yet be unobtrusive.\n\n\nDo\nEnsure axis lines only appear where the data appears.\n\n\n\nDon’t\nUse bleeding axis lines to the edge of the screen.\n\n\n\nSkipping labels\nLabelling the tick marks on both the y-axis and x-axis helps the visualization\nbecome more clear in what it represents.\n\n\nDo\nSkip labels in regular intervals.\n\n\n\nDon’t\nTry to squeeze all labels together.\n\n\n\nX-axis Abbreviations\nShopify uses standard abbreviations for months and weekdays in order to reduce\nclutter in visualizations.\n\nUse 12 hour format for time, with lowercase letters (12am, 6pm)\nUse the first three letters for days of the week (Sun, Mon)\nUse the first three letters for months (Feb, Mar)\nFor specific days, use the format ‘day + month’ (10 Apr, 11 Apr)\nFor specific months, use the format month + year (Apr 2011, May 2017)\n\n\n\nDo\nUse standard abbreviations for labeling.\n\n\n\nDon’t\nSlant labels to make them fit.\n\n\n\nY-Axis Abbreviations\nShopify uses standard monetary abbreviations for the y-axis to reduce clutter.\n\n\nDo\nAbbreviate using ‘k’ for thousand, ‘b’ for billion.\n\n\n\nDon’t\nGo over 3 numeric characters, 1 decimal, or 1 letter.\n\n\n\nX-axis Labelling conventions\nLabels should be clear and concise.\n\n\nDo\nCenter all labels on the bar and the tick mark.\n\n\n\nDon’t\nUse decimals on the x-axis labels.\n\n\n\nY-axis Labelling conventions\nLabels should be clear and concise.\n\n\nDo\nLeft align labels and keep them above y-axis lines.\n\n\n\n\nColor palettes\n\n\nColor in data visualization has a very specific meaning. The data visualization\ncolor palette provides specific colors that can be used alone or in a group,\ndepending on the intent.\n\n\nSingle data series\nUse when there is a single data series. For example, a bar chart, column chart,\nor a single line chart.\n\n\n\n\n\n\nSingle comparison to past\nThis is used when the data set is being compared to to its past values. For\nexample, total sales by month, this year, compared to last year. In this case,\nthe current value will be purple and the past value will be grey.\n\n\n\n\nMultiseries data\nUsed when there are multiple data sets to compare. For example, a multiseries\nline chart. Go down the list as the number of datasets increase.\n\n\n\n\n\n\nBiased\nUsed when certain data need is displayed in a negative or positive light. For\nexample, showing positive or negative change relative to a reference value.\n\n\n\nHorizontal bar charts\n\n\nBar charts are used for comparing discrete categories. Use a bar chart when\nthere is a constraint to the number of data points that can appear on the\nvisualization, otherwise it becomes hard to scale.\nBest used for\nShowing discrete categories of data, like {products} vs {sales}.\nDon’t use\nWhen the number of data points can exceed 6. In this case, use a table.\nBar chart labels\nLabel each bar with what it’s displaying, as well as the value. For more best\npractices, visit axis and label conventions.\n\n\nDo\nInclude a label on each bar. If the bar is too small, include it outside of the\nbar.\n\n\n\nDo\nInclude a label on top of each bar to display what data it’s showing.\n\n\n\nColor\nUse one color for all bars.\n\n\nDo\nGive negative bars 60% opacity.\n\n\n\nDon’t\nUse multiple colors for the bars.\n\n\n\nBar positioning\nMake sure the bars are proportional in width, roughly twice the size of the\nspace between the bars.\n\n\nDo\nMake the width of each bar about twice as wide as the space between them.\n\n\n\n\nDon’t\nMake the bars too skinny.\n\n\n\n\n\nVertical column charts\n\n\nColumn charts are used to show change over time, trends, and individual data\npoints. Use column charts for when the number of data points is fewer than 30, or\nelse use a line chart.\nBest used for\n\nShowing continuous data like sales per hour, or orders per month\nShowing smaller granularities of time (hourly, daily, weekly, and monthly)\n\nDon’t use\nWhen the number of data points can exceed 31. In this case, use a\nline chart.\nColor\nAll bars should be the same color.\n\n\nDo\nUse one color for all bars.\n\n\n\nDon’t\nUse multiple colors for the bars.\n\n\n\nBar positioning\nMake sure the bars are proportional in width, roughly twice the size of the\nspace between the bars.\n\n\nDo\nMake the width of each bar about twice as wide as the space between them.\n\n\n\nDon’t\nMake the bars too skinny.\n\n\n\nInteractivity\nInclude some interactivity on the bars upon hover since users will be looking at\nindividual data points. The top line of the tooltip should follow x-axis\nabbreviation and labelling guidelines, while the bottom line tooltip should\nfollow y-axis abbreviation and labelling guidelines.\n\n\nDo\nInclude tooltips for x-axis and y-axis values.\n\n\n\n\nLine charts\n\n\nA line chart is created by connecting a series of data points together with a\nline. Line charts are good to show change over time, comparisons, and trends.\nUse line charts when the number of data points is more than 30.\nBest used for\n\nShowing continuous data like sales or orders over time\nShowing larger granularities of time (yearly, or quarterly)\nSpotting overall trends and shapes of data\n\nAxis and labelling\nSet up the chart area using the\naxis and labelling guidelines\n\nMultiline charts\n\n\nLine graphs work well when multiple datasets need to be compared. Use the\ncolor palette to select colors.\n\n\nDo\nUse contrasting color and include a legend.\n\n\n\nDon’t\n\n\nUse more than 4 lines.\n\n\n\n\nDisplay metrics\n\n\nA display metric is a quantifiable measure that is used to track and display the\nstatus of a specific process. Examples include a sum, an average, or a movement\nin a positive or negative direction.\nBest used for\nShowing a single value with a base unit.\nUnits\nMetrics should be paired with their base unit in close proximity to the number.\nUse concise and clear language for metrics.\nScope\nMetrics should be scoped to indicate the timeline of the data.\n\n\nDo\nInclude a dimension of time to scope the value.\n\n\n\nMovement\nIf needed, consider including a comparison indicator, such as comparison to the\nprevious time or average.\n\n\nDo\nUse green for positive movement.\n\nUse red for negative movement.\n\n\n\n\nTables\n\n\nA table is a good way to showcase a large amount of information which has a\nvariety of columns and data to show for each entity. A table should be used when\nmultiple metrics and categories need to be presented together, and accurate\nlookup of the data values is more important that showing patterns in the data.\nBest used for\n\nShowing large amounts of discrete data with many variables\nShowing values across multiple categories and measures\nAllowing for filtering and ordering when comparison is not a priority\n\nAlignment\nConsistent vertical alignment is essential for fast visual comparison between\nvalues in a table.\n\n\nDo\nLeft align non-numeric values and right align numeric values.\n\n\n\nDon’t\nCenter column headers.\n\n\n\nSeparation\nIn order to reduce clutter and non-data ink, we prefer to subtly separate each\nrow.\n\n\nDo\nUse light lines to indicate separation between rows.\n\n\n\nDon’t\nHighlight every other row to indicate separation.\n\n\n\nTotals\nTotals allow merchants to understand the data holistically and should be easy to\nfind.\n\n\nDo\nPlace totals as the first row beneath the headers, and bold the text.\n\n\n\n\nAccessibility\nAn important part of designing clear visualizations is making data accessible to everyone.\nProvide options\nMerchants with vision issues might have trouble understanding visual presentations of data, even with assistive software.\nMerchants with dexterity or motor issues might have trouble using interactive visualizations that depend on fine motor control.\nOthers might simply have trouble understanding data presented in a chart or graph.\nTo support the needs of different merchants, always provide multiple formats for data visualizations.\n\n\nDo\nLet merchants access their data in multiple formats. For charts and graphs, it’s often helpful to offer the same content in a data table that’s either on the same page or on a related page that’s easy to discover.\n\n\nDon’t\nProvide data visualizations in only one format.\n\n\nUse of color\nColor is critical for visualization, but can cause issues for merchants with color blindness and low vision. Color should be used in a way that supports the interpretation of visual information for all merchants, including those with visual issues.\n\n\nDo\nEnsure that text, line, bar, and other colors have sufficient contrast against their background.\n\n\nDo\nUse colors that can be distinguished from each other to support merchants with different forms of color blindness.\n\n\nDon’t\nRequire that merchants are able to see color to understand the information provided in the chart or graph.\n\n\nTo learn more, see guidance about accessible colors in Polaris.\nScalable vector graphics (SVGs)\n&lt;svg&gt; and &lt;canvas&gt; elements are excellent tools for creating engaging, dynamic visualizations in HTML. However, they are frequently difficult to access using assistive technologies. Assistive technology users may not be able to access content in the correct order, find text equivalents for visual information, or access interactions with the keyboard.\nIn general, hide &lt;svg&gt; elements from screen readers using aria-hidden=&quot;true&quot; and provide a separate text equivalent for the graph or chart. Although different visualizations may benefit from different treatments, try to prioritize creating a consistent experience.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Design",
      "keywords": [
        "visual design",
        "design language",
        "design"
      ]
    },
    "intro": "These are the principles that shape how we design all the experiences across the Shopify admin.",
    "content": "Design\n\n\nThese are the principles that shape how we design all the experiences across the Shopify admin.\n\n\n\nFresh visual style\nA clean, simple style makes things feel approachable and&nbsp;efficient.\nFaster performance\nElegant code and lightweight assets means pages load&nbsp;more&nbsp;quickly.\nFuture-friendliness\nBuilt for flexibility, design tokens and new infrastructure let us iterate easily across&nbsp;experiences.\nPurposeful brand presence\nBeing intentional about when the Shopify brand comes forward, and when it takes a backseat, directs the focus to where it&nbsp;matters&nbsp;most.\nFamiliarity across experiences\nDefined patterns and guidelines help us design a wide variety of experiences that still always feel&nbsp;like&nbsp;Shopify.\n\n\n\nNext\nColors\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Icons",
      "keywords": [
        "shopify icons",
        "icon sets",
        "icon designs",
        "icon guidelines",
        "icon standards",
        "iconography",
        "visual helpers",
        "minor icons",
        "major icons",
        "inline icons",
        "in-line icons",
        "main navigation icons",
        "main nav icons",
        "icons in nav",
        "icons in main nav",
        "icon colors"
      ]
    },
    "intro": "Icons in the Shopify admin act as visual aids to help merchants complete tasks. They’re simple, informative, and build on the visual language of the design system.",
    "content": "Icons\nIcons in the Shopify admin act as visual aids to help merchants complete tasks. They’re simple, informative, and build on the visual language of the design system.\n\n\n\n\n\n\nPrinciples\n\n\nSimple over detailed\nDetailed icons increase cognitive load. Focus on simplicity to help merchants understand the concept the icon represents and recognize icons on smaller screens.\nLiterally literal\nLiteral symbols are easier to understand than abstract symbols. When possible, use symbols that represent the most basic idea or concept instead of a metaphorical one. If the concept can’t be conveyed literally (an activity like gardening, a profession like doctor), pick a logically related symbol (shovel, stethoscope).\nStay professional\nThe design of an icon communicates tone, much like the content it’s paired with. Focus on the effectiveness of the message instead of its ability to delight. In other words, prioritize representing the function, rather than how nice it looks.\n\nCreating icons\n\n\n\nUse established icons\nIcons that have been used for a long time worldwide have a higher chance of being recognized and understood quickly. Don’t reinvent an icon that’s already been accepted as the convention. There are global, established conventions for concepts like “delete,” “settings,” and “search.” These symbols are effective, and don’t need to be redefined.\n\n\n\n\n\nLimit variations\nUse a single icon to represent variations of the same concept. Shipping settings, store settings, account settings, and any new settings should use the cog icon. Don’t create a custom icon for each of these concepts—it bloats the icon library and makes it difficult for merchants to create strong connections around a concept.\n\n\n\n\nPair icons with text\nThe purpose of an icon is to clarify the content by providing a visual cue and improve legibility and scannability of the user interface. In general, icons should be placed near a label or title. Never use an icon to replace a name of a product or feature—the rare exception being an icon that’s a universally understood action, like the trash can icon that represents deletions.\n\n\n\n\nKeep internationalization in mind\nWhenever possible, use a universally recognized icon. However, there will be times where only a locally understood icon will work to communicate a concept. When deciding what symbol should be used, check that it will be understood at a glance by people from different cultures and&nbsp;backgrounds.\n\n\n\nWhen to use icons\n\n\nIcons are powerful visual helpers and should be used with care. Overuse quickly results in user interfaces that are visually overwhelming or distracting.\nIcons are commonly used:\n\nIn primary navigation\nIn page headers and section titles\nIn banners to bring attention to a specific theme, such as an announcement or an error\nInline with text to add clarity\nTo direct attention to something the merchant can take action on\n\nTo browse a list of all available icons, visit the polaris-icons site.\n\nSystem icons\n\n\nSystem icons help merchants find their way around and shouldn’t be ornamental. They’re smaller than spot icons because they’re always applied in product experiences where it’s important that they complement the user experience and not overpower it. They should represent a specific action, object, or concept.\n\n\n\nMajor icons—20×20\nMajor system icons are:\n\nPrimarily used in navigation to support wayfinding\nUsed to help promote, reinforce, or draw special attention to a specific area or metaphor\n20×20 in size\nWithin a 20×20 bounding box\n\n\n\n\n\n\nMinor icons—16×16\nMinor system icons are:\n\nUsed inline to add clarity to an action\nUsed in form elements (&lt;input&gt;, &lt;button&gt;, etc.)\n16×16 in size\nWithin a 20×20 bounding box\n\n\n\n\nSpot icons\n\n\n\n\n\nSpot icons reinforce messaging in product experiences that are seen more than once. Spot&nbsp;icons&nbsp;are:\n\nBigger than system icons and have a stronger stroke weight to add visual balance to the layout\n60×60 in size\nWithin a 60×60 bounding box\n\n\n\n\nNext\nInteraction states\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Illustrations",
      "keywords": [
        "drawings",
        "pictures"
      ]
    },
    "intro": "The Shopify admin uses a precise illustration style to help merchants quickly and clearly understand how things work across every experience.",
    "content": "Illustrations\nThe Shopify admin uses a precise illustration style to help merchants quickly and clearly understand how things work across every experience.\n\n\n\n\n\n\nPrinciples\n\n\nAlways be useful\nIllustration adds information. It provides context, adds clarity, or leads to the next step. It gives merchants a deeper understanding of what they’re working on.\nKeep it in the family\nIllustrations are all part of the same visual family. Inconsistencies lower the overall quality of the experience, and can distract merchants or make them feel like they’re in the wrong place.\nBe considerate\nIllustration should understand and support the merchant’s experience. Each illustration needs to feel appropriate for whatever situation it shows up in.\nStay focused\nEach illustration conveys one thing. The story is easy to understand, so merchants intuitively know how to accomplish whatever they came here to do.\n\nElements of style\n\n\n\n\n\nColor\nIllustrations use a special set of colors designed to work well in the places where they show up. The palette is limited: individual illustrations use whites, grays, and two or three colors each. Colors are also less saturated than the surrounding UI, so they don’t distract from core interactions.\n\n\n\n\n\nShape\nObjects have realistic proportions so they’re easy to recognize. Simple geometric shapes with rounded corners build images that are clear and approachable. Representations of people use more organic shapes.\n\n\n\n\n\nSpace\nThe perspective is flat and two-dimensional so the entire area of the illustration is of equal importance. Drop shadows give things subtle depth when necessary. An additional side of an object can be added if things aren’t easily recognizable from a single side.\nEach illustration has negative space around it so it feels balanced in the place it lives, and so its visual weight is the same as other illustrations that live in the same places.\n\n\n\n\n\nLine\nLine makes and arranges shapes in the space. All illustrations have smooth lines without texture. Smaller objects have straighter lines, while larger objects can have more detailed, curved lines.\nIntersecting and continuous lines are a key element of the admin illustration style, but they aren’t forced. They make a simple illustration feel elegant and visually interesting without being distracting.\n\n\n\n\n\nDetail\nIllustrations need some detail to make sense, but too much can be noisy. They have the minimum amount of detail necessary to make them feel realistic but still simple. Fine details are rarely smaller than 4px in height or width.\n\n\n\nWhere illustrations live\n\n\nThere are places where illustrations always appear, and places where they’re used only sometimes.\n\n\n\nEmpty states\nMerchants see an empty state illustration the first time they access a new part of the experience, before they’ve had the chance to do anything there yet. It introduces what they can do here, and sets expectations for what’s ahead.\n\n\n\n\nOnboarding\nOnboarding tasks help new merchants set up their store. Illustrations frame what each task is for. And by changing in appearance, they reinforce when a task is complete.\n\n\n\n\n\nAnnouncements\nAnnouncements let merchants know about something that might help their business. When the announcement celebrates a major merchant milestone or introduces an important product, illustration helps make it special or noticeable.\n\n\n\n\nSpot illustrations\nIn some rare instances, unique spot illustrations can be used to achieve a specific goal, like to draw attention to something important on a busy page, or to explain a technical concept.\n\n\n\nNext\nSounds\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Interaction states",
      "keywords": [
        "visual patterns",
        "color strategy",
        "interaction states",
        "hover",
        "focus",
        "active",
        "selected",
        "disabled",
        "subdued",
        "state"
      ]
    },
    "intro": "Interaction states communicate the status of an element in the interface, establish confidence once an action is taken, and suggest the ability (or inability) to interact with the element.",
    "content": "Interaction states\nInteraction states communicate the status of an element in the interface, establish confidence once an action is taken, and suggest the ability (or inability) to interact with the element.\n\n\n\n\n\n\nPrinciples\n\n\nBe subtle, but clear\nSuccessful interaction feedback is informative, not decorative. Avoid elaborate transitions that create visual noise or intense color changes. Distracting animation can create disturbance and make an interface unpleasant to use.\nKeep things consistent\nConsistent treatments for interaction feedback create recognizable patterns. If an interaction produces different feedback across the Shopify admin, it deteriorates the integrity of the pattern and risks confusing merchants.\n\nDesigning interaction states\n\n\nKeep in mind that merchants interact with interfaces differently depending which input device they’re using. Devices they may be using include:\nInput devices to consider\n\nMouse\nTouch screen\nKeyboard\nVoice\nGame controller\nRefreshable braille display\n\nTo learn more, check out the accessibility guidelines.\nUse signifiers\nProvide merchants with cues as to what the interface will do if they interact with it. By using signifiers we set expectations about what components can do, which creates a more intuitive interface that’s easier to use. The types of signifiers include:\n\n\n\nExplicit, where content directs merchants to do the intended action, such as “Sort” or “Save.”\n\n\n\n\n\nHidden, where the clue isn’t revealed until the merchant interacts with it, such as hovering or using tab navigation to see if a button is clickable.\n\n\n\n\n\nNegative, where the action appears inactive (like the button is grayed out and doesn’t respond to hover) because it isn’t available for the merchant to use.\n\n\n\n\n\nBehavior\nUse feedback indicators like the progress bar component or the spinner component to let them know that the interface received their request. If appropriate, you can also provide added information about what or how long it will take to complete.\nFor non-disruptive feedback on the outcome of an action, use the toast component.\nFor an unsuccessful completion that requires the merchant to take action, provide information about what prevented the action from completing successfully and what the merchant can do to fix the problem. For example, use the validation error state of the text field component.\n\n\n\nNext\nSpacing\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Sounds",
      "keywords": [
        "audio",
        "sonic",
        "noise"
      ]
    },
    "intro": "We use sound to communicate information and to enhance how merchants experience the Shopify admin. Sound patterns make interactions easier and more predictable.",
    "content": "Sounds\nWe use sound to communicate information and to enhance how merchants experience the Shopify admin. Sound patterns make interactions easier and more predictable.\n\n\n\n\n\n\nPrinciples\nSelectively urgent\n\n\nThe duration, volume, and character of a sound should all be dictated by the level of urgency of an event. For example, an alert indicating that a customer is struggling to complete checkout requires more urgent attention and immediate action. An alert indicating that a customer has arrived at a storefront is informative, but doesn’t require immediate action. The sounds used during these events should be customized to reflect the differences in urgency.\nAvoid annoying repetition\n\n\nSome sounds occur many times per day. While appealing on first listen, a sound may become irritating after ten, and unbearable after a hundred. Merchants that hear a sound repeatedly may quickly grow tired of it. Our sounds should be informative and not annoying. When possible, use data to determine how often a sound is triggered.\nDistinct and succinct\n\n\nMerchants are likely to hear our sounds in a variety of contexts. Clean, focused, and succinct sounds convey information better than muffled or distorted sounds.\nTest across devices\n\n\nWhile you may be testing your designs using headphones or loudspeakers that reveal the audible frequency spectrum clearly, a smartphone speaker will affect the quality of the sound. Smaller speakers are more susceptible to distortion. Sounds on mobile devices should be played at lower levels than on a desktop computer or laptop. Test sounds on a variety of devices and volume&nbsp;levels.\nThink beyond sound\n\n\nSome people can’t rely on sound to receive cues or notifications. Merchants may have a disability that affects hearing or auditory processing. Depending on the merchant’s preferences and technologies, they may receive sound cues through haptic or visual feedback, but don’t assume that they’ll be able to perceive sound. Always include an alternative method to convey information, like text-based notifications or visual changes in the interface.\n\nWhen to use sound\n\n\nSounds in our product help convey information. There’s an important balance between having too many sounds and not enough. Useful and well-planned sounds will help with merchant understanding. Unnecessary sounds will reduce the perceived quality of our product.\nEven though merchants might miss important information if they turn off their sound, we should always provide the option for them to do so.\nCommon sound events\n\n\n\nFor an event that requires a merchant’s immediate attention, use an alert to encourage them to pause their workflow and take care of things.\nFor something that’s useful for a merchant to do, but not necessarily immediately, use a notification.\nTo confirm success, use feedback for a successful action.\nFor statement of failure, use feedback for unsuccessful action.\n\n\nHow to approach sound design\nBe creative and intentional with your sound design. And remember:\n\nShort sounds should be no longer than 250ms, long sounds no longer than 1 second.\nSounds should be in the same “family.” If you introduce a new note, key, or timbre, make sure there’s a good reason.\nCreate two versions of every sound:\nA louder version for desktop applications.\nA quieter version for mobile applications where the speakers are smaller and may distort more easily.\n\n\n\nDesign sounds with as much intentionality as other design aspects of Shopify’s products.\n\nNext\nIcons\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Spacing",
      "keywords": [
        "spacing",
        "space",
        "layout",
        "grid",
        "position",
        "margin",
        "padding"
      ]
    },
    "intro": "Consistent spacing creates visual balance that makes the user interface (UI) easier for merchants to scan. Apply consistent spacing to improve the quality of the UI.",
    "content": "Spacing\nConsistent spacing creates visual balance that makes the user interface (UI) easier for merchants to scan. Apply consistent spacing to improve the quality of the UI.\n\nPrinciples\nCreate visual rhythm\nWe use incrementally measured spacing to create harmonious arrangements of components and text. This gives the elements a predictable rhythm, which makes the experience as a whole feel intentional and well designed.\nPrecise but flexible\nBeyond mathematical precision, spacing also reacts to the objects it surrounds, giving more space to larger objects, less to small. Optical adjustments can also be made if an element looks off and the spacing needs a nudge to make things feel right.\n\nThe spacing system\nAll spacing for components and typography is done in increments of 4 pixels. This forms the basic unit of measurement for spacing.\n\n\n\n4px grid\nTypography doesn’t use a traditional baseline grid. Instead, line heights are set in increments of 4px and spacing is measured from the edges of the text boxes.\n\n\n\n\n\nMany components are sized in increments of 20px to match the line height of body text. This makes it easy to create harmonious arrangements of components and&nbsp;text.\n\n\n\nSpacing in code\nYou can apply spacing in code in two ways:\n\nUsing stylesheets\nUsing utility components provided by Polaris React\n\nApplying spacing with stylesheets\nWhen applying spacing in CSS, use these spacing tokens.\nApplying spacing with components\nVarious components within Polaris enable automatic spacing between elements:\n\n\n\nUse the text container component to wrap and automatically add the correct spacing between a set of paragraphs, lists, or other textual components.\n\n\n\n\n\nThe stack component can be used to arrange arbitrary components in a horizontal row or vertical stack with space in between. It accepts the same values as the Sass spacing function to control spacing between the items.\n\n\n\nHow to choose spacing\n\n\nUse less space between small components, or components that share a close functional&nbsp;relationship.\n\n\n\n\n\nUse less space between small components, or components that share a close functional&nbsp;relationship.\n\n\n\nCoordinate small and large values, along with structural components (like Home cards), to create visual groupings of related things. This helps merchants understand the interface and more easily find what they’re looking for.\nFor screens with specialized layouts, adjust overall spacing based on the density of the content. For example, a simple login screen on desktop display has more room to breathe, so more space can be used.\n\nCommon values\nThe most common spacing sizes are used throughout Polaris for admin as follows:\n\n\n\n4px (extra-tight) between icon and text.\nThe button component has this spacing built in.\n\n\n\n\n\n8px (tight) between icon and text.\nThe button group component has this spacing built in.\n\n\n\n\n\n16 or 20px between form fields.\n16px (base) vertically, 20px (loose) horizontally.\nThe form layout component has this spacing built in.\n\n\n\n\n\n20px (loose) padding in cards.\n\n\n\n\n\n16px (base) side padding on small screen.\nThe card component has this built in.\n\n\n\n\n\n20px (loose) between cards\nThe The card component automatically adds vertical space between it and any preceding card.\nFor horizontal spacing, use the layout component to create multi-column layouts.\n\n\n\nAdjustments and exceptions\nIn cases where minute alignment adjustments are necessary, some exceptions apply:\n\n\n\nWhen text is vertically centered inside a component, the top and bottom padding can be any size.\n\n\n\n\n\nAllow the length of text to determine the width of components and where they fall horizontally when placed in a row.\n\n\n\n\n\nOptical adjustment\nSometimes an element is larger than it appears. Spacing based on the invisible edges of the element will feel wrong. Correct for these optical effects by adjusting the space in 4px increments until it looks more balanced.\nWithout optical adjustment, the disclosure icon appears too far from the right edge of the button. After optical correction, the perceived spacing is more balanced.\n\n\n\nTouch targets\nMerchants can more easily perform a task on mobile when interactive elements follow the recommended touch target sizes and spacing guidelines. Make sure that there’s enough space between links, buttons, and inputs prevents accidental actions. Note: touch target sizes differ across iOS (44px) and Android (48dpi).\n\n\nDo\n\nAssess the content in the surrounding area and position the UI elements accordingly\nIf you work at Shopify, use the components provided in the iOS and Android UI kits\n\n\n\nDon’t\n\nDon’t use adjacent actions (if possible). It will reduce the risk of error.\n\n\n\n\nNext\nData visualizations\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Typography",
      "keywords": [
        "type styles",
        "font sizes",
        "fonts"
      ]
    },
    "intro": "Shopify admin provides a constrained, purposeful set of typographic styles. These styles map to functional roles so you know when to use what.",
    "content": "Typography\nShopify admin provides a constrained, purposeful set of typographic styles. These styles map to functional roles so you know when to use what.\nBy tying typographic styles to specific functions in the interface, we create a clear visual pattern for merchants to follow while they interact with our product.\n\nPrinciples\nStyle with purpose\nA disciplined consistency with how you size and style type makes the whole admin more intuitive to use. Merchants who learn how to navigate one experience can apply that same knowledge to each new experience they come across.\nStay flexible\nTo make things accessible to audiences with different eyesight constraints, across different browsers, and different mobile devices, make sure to design in a way that works no matter what font size the merchant opts to use.\n\nFont sizes\n\n\nWe use the typographic scale to communicate visual hierarchy in text.\n\n\n\n\n\nFormatting\n\n\nAlong with the typographic scale, sometimes additional formatting is necessary to illuminate the distinction between smaller-scale relationships. Different formatting styles can be implemented using the text style component.\n\n\n\nLeft aligned\nBy default, text is left aligned. Exceptions to this rule include text in tables, and the centered text we use in empty states.\n\n\n\n\n\nStrong\nUse this style sparingly and only where strong emphasis is required. In interfaces, strong should be seldom used to enhance visual hierarchy.\n\n\n\n\n\nUnderline\nUnderline styles are exclusively for text links. Don’t use underline for things like adding emphasis to text within body copy.\n\n\n\n\n\nSubdued\nThe subdued style lets you de-emphasize content, and you can use it across all font sizes. Mostly it should be used in contrast to other un-subdued text, vs. on its own. However you can use Subdued with standalone text that’s non-actionable or less important.\n\n\n\nDisplay styles\n\n\nPageHeading\nPageHeading is reserved for the title of a screen.\n\n\n\n\n\nDisplay\nDisplay is for titling various interface elements, such as empty states and modals.\n\n\n\n\n\nHeading\nHeading should always be used for titles of top-level sections of a screen. If the sections of a screen are represented by cards, each card’s title should use the Heading style.\n\n\n\n\n\nSubheading\nIf a top-level section of a screen has subsections, use the Subheading style for titling those subsections. Subheading should never appear as the first element in a card. Only use with titles (vs. sections of content).\n\n\n\n\n\nCaption\nCaption is for providing details in places where content is compact and space is tight, like when it comes to data visualization.\n\n\n\n\nFont stack\n\n\nWe use a font stack that adapts to the operating system it runs on, like macOS, iOS, Windows, Android or Linux distributions.\n\n\n\n\n\n\nApple devices will display San Francisco\nAndroid devices will display\nRoboto\nDevices running Windows will display\nSegoe UI\nMachines running Linux will display the default sans-serif font for any\nrunning distribution\n\nThis font-stack makes sure all browsers can load platform-specific fonts:\n-apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif\n\nAdd this to your CSS to preload system fonts and set up browsers for legibility:\nhtml {\n  /* Load system fonts */\n  font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI,\n    Roboto, Helvetica Neue, sans-serif;\n\n  /* Make type rendering look crisper */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Deactivate auto-enlargement of small text in Safari */\n  text-size-adjust: 100%;\n\n  /* Enable kerning and optional ligatures */\n  text-rendering: optimizeLegibility;\n}\n\n/**\n * Form elements render using OS defaults,\n * so font-family inheritance must be specifically declared\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n}\n\n\nMobile considerations\n\n\n\n\nDo\n\nRefer to the platform’s native font scales when designing experiences for native apps\nRefer to the small-screen scale when designing experiences for mobile browsers\nUse the platform-specific component library\n\n\n\nDo\n\nUse the native font scale\nKeep in mind that all UI elements containing text will be affected\nExplore additional content height, width, truncation, and line wraps\n\n\n\n\nNext\nIllustrations\n\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Accessibility",
      "keywords": [
        "a11y",
        "universal design",
        "inclusive",
        "inclusivity",
        "disability",
        "disabilities",
        "people with disabilities",
        "persons with disabilities",
        "accessible markup",
        "accessible mark up",
        "accessible code",
        "accessible",
        "diversity",
        "diverse"
      ]
    },
    "intro": "Making commerce better for everyone means caring deeply about making quality products. A quality product should have a fantastic user experience (UX), including:",
    "content": "Accessibility\nMaking commerce better for everyone means caring deeply about making quality products. A quality product should have a fantastic user experience (UX), including:\n\nA beautiful and functional design\nConsistent and useful copy\nPrinciples of\nuniversal design and\ninclusivity\n\n\nUsable for everyone\n\n\nIt’s important that Shopify products—and Partner products—are usable and useful to everyone.\nEveryone is a pretty big group. It includes our merchants, their customers, our developer partners, our employees, and the greater tech community at large. That also includes all members of our community who have disabilities.\nDisabilities may affect how people move, see, hear, communicate, learn, understand, and process information.\nAs a result, it’s important to consider how to design and develop your product to support a wide range of needs and experiences.\nIn the United States, as many as 1 in 4 adults has at least 1 disability [Source: CDC]. In Canada, the estimate is 22%, and elsewhere in the world the estimate is closer to 1 in 7 [Source: Statistics Canada, World Bank].\n\nBuilding inclusive experiences\n\n\nUsing our components is a way to improve\naccessibility and consistency when building products for Shopify.\n\nThe component library in this style guide includes code we can use across applications\nThis component code includes accessible markup\nSince the code exists in a single component that gets reused, it’s easier to update and fix any bugs\n\nThe build-it-once, use-it-everywhere model means the accessibility knowledge of the designers and developers who build these components is available to all of Shopify and our partners. Because of this, merchants get a consistent experience that can be leveraged into accessible products.\nMany accessibility features come free in the components. But, it’s important to make sure that components are integrated in a way that doesn&#39;t create unforeseen accessibility barriers. Depending how components are used, there may be more design and implementation considerations. Be sure to test user task flows post integration.\nManaging focus to support merchant workflows\nDon’t programmatically move focus to new content without merchant input. Polaris components that use controls to display overlays, such as modals and popovers, manage focus automatically.\n\n\nDo\n\nWhen a merchant activates a link that goes elsewhere in the page, move focus to that content\nWhen a merchant must access an overlay, move focus to it\nWhen a merchant submits a form that results in an error, move focus to the error message\n\n\n\nDon’t\n\nMove focus when content updates in the background\nMove focus when the user is actively working elsewhere on the page\n\n\n\nThe only case where focus should be managed without the merchant’s okay is when the merchant needs to be interrupted because they cannot continue their current workflow.\nLimiting non-standard interactions\nMerchants will expect to interact with controls and content in ways that follow the defaults for their browser, platform, and assistive technologies. Introducing non-standard features can give merchants better ways of accomplishing tasks, but they can also create barriers.\nFor example, merchants who rely on the keyboard will expect that buttons can be activated with the enter/return key or the space key. If buttons are programmed to be used with different keys, merchants will need to be instructed on how to use them.\nBefore designing or building custom features that use non-standard controls or interactions, first consider whether the goal can be met using native features.\nIf non-standard interactions are required:\n\nCarefully follow guidelines and best practices for designing, building, and testing custom features on your platform\nGive merchants clear instructions for using the custom feature\nProvide an additional, standard way to accomplish the task\n\nAssistive technology support\nOur components are tested for accessibility with automated and manual techniques. Merchants should expect to be able to access features built with our components using modern assistive technologies. These include native and third-party tools like:\n\nScreen readers\nSpeech recognition programs\nSupports for low vision and color blindness\nAlternative keyboards\nSwitch devices\nTools for readability\n\nCoding standards\nPolaris components start with web standards for HTML, CSS, and JavaScript. Features from the Accessible Rich Internet Applications (WAI-ARIA or ARIA) specification are used to build functionality that is not available in native HTML.\nAlternative text\nTo help people who rely on assistive technologies, such as a screen reader or other text to speech programs, our components use alternative text for icons and images used to convey information and actions (like buttons and links).\nMeeting the Web Content Accessibility Guidelines (WCAG)\nPolaris targets WCAG 2.1 Level A and Level AA success criteria, and seeks to provide a highly usable experience for everyone.\nFor more information, see the following resources:\n\nWCAG 2.1\nARIA 1.1\nShopify&#39;s statement of commitment to accessibility\n\nFeedback\nSometimes, building accessible and inclusive experiences can be difficult. If we’ve made any mistakes in this style guide, please\nreach out by creating a GitHub issue\nand help us make it better.\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Designing onboarding flows",
      "keywords": [
        "adoption",
        "funnel",
        "benefit",
        "sequence",
        "sequencing",
        "tooltips",
        "trust",
        "onboarding education",
        "education",
        "offboarding"
      ]
    },
    "intro": "Well-designed onboarding flows increase engagement with a product or feature. They’re efficient and they gradually\nintroduce merchants to tasks that have a clearly defined goal and benefit.",
    "content": "Designing onboarding flows\nWell-designed onboarding flows increase engagement with a product or feature. They’re efficient and they gradually\nintroduce merchants to tasks that have a clearly defined goal and benefit.\nThis guide will help you create better onboarding flows.\n\nMake a good first impression\n\n\nMaking a good first impression means:\n\ndelivering on the promises of your motivational prompts and value propositions\nfollowing through on what the empty state says the product or feature will do\ngetting out of the way as soon as possible\n\n\n(HolidayMail is a fictional app created for these guidelines.)\n\nCreate an efficient sequence\nSequence tasks in a logical way to increase onboarding success.\nClearly define when merchants have started and successfully completed your onboarding flow.\nAim to onboard merchants in as few steps as possible. Start by writing out a list of all the steps and define\nsuccess for each task. If appropriate, treat onboarding as a story or journey, with a:\n\nbeginning (merchants discover the product or feature)\nmiddle (merchants learn about and complete tasks in the flow)\nend (merchants are able to use the product or feature successfully)\n\nFor the HolidayMail app, we wrote out the steps for the app setup portion of onboarding.\nAt this stage of their journey, merchants need to connect their email account and import\nexisting customer lists and billing information.\nSuccess in this setup flow occurs when merchants:\n\nconnect their email account\nimport their customer list and code snippet\nenter their billing information\n\nCombine or eliminate steps when possible\nOnce you’ve mapped out the different paths in an onboarding flow, find ways to combine or eliminate steps or tasks\nacross the flow.\nWhen combining or eliminating steps, ask yourself: will this step help merchants be more successful right now?\nIf so, it’s okay to include it. Remember that onboarding is also about teaching foundational knowledge.\nFind out if any tasks can be automated. For example, form fields can be auto-filled so merchants don’t have to\nmanually enter existing information. Reducing the friction of onboarding through automation will increase the chances that merchants\ncomplete a longer flow.\nFor the HolidayMail app, we listed the automated, partially automated, and fully manual paths.\nAutomated path (2 steps):\n\nMerchant connects existing email account with HolidayMail\nHolidayMail automatically detects and imports existing billing account, customer list, and code snippet\n\nPartially automated path (4 steps):\n\nMerchant connects existing email account\nHolidayMail automatically inserts code snippet and imports existing billing account\nMerchant uploads customer list manually\nHolidayMail sends test email to confirm customer list import\n\nManual onboarding path (7 steps):\n\nMerchant creates new email account to use with HolidayMail\nMerchant connects email account to HolidayMail\nMerchant manually inserts code snippet\nMerchant sets up new billing account with HolidayMail\nMerchant uploads customer list manually\nMerchant fixes errors in email customer list\nHolidayMail sends test email to confirm customer list import\n\nBe clear about external tasks\nTiming is more difficult to control if merchants need to leave Shopify to complete an onboarding flow. For example,\nin the HolidayMail app, merchants might have to leave the app to retrieve their customer list file.\nMake it clear to merchants when they’re leaving Shopify. Provide clear instructions and encourage merchants to\nreturn as soon as possible to minimize drop-off. Consider reinforcing or repeating key messages when merchants\nreturn to the flow, especially when onboarding is unlikely to be completed in one continuous session.\n\nOnboarding is a trust exercise\nMerchants’ time is valuable. They’re choosing to invest their time into something unknown. Make merchants feel\nsupported during their onboarding journey so they feel guided and confident.\nBuild trust by being transparent\nExplain why we’re collecting personal information.\n\n\nBuild trust by communicating value\nFocus on the core benefit of the product or feature throughout the flow. Don’t overwhelm merchants with information that isn’t relevant to their immediate task. Provide encouragement across the entire flow by restating or focusing on the benefits that onboarding will unlock.\nIn this example from HolidayMail app onboarding, key messages are restated clearly and simplified during every step of the flow.\nStart by introducing the information in more detail but avoid overwhelming merchants:\n\n\nDo\n“Send emails throughout the year to customers who celebrate different holidays with the HolidayMail app.”\n\n\nDon’t\n“Use the HolidayMail app to reach customers who celebrate different holidays throughout the year, no matter where they live around the world.”\n\n\nOffer a short, gentle reminder:\n\n\nDo\n“Reach a more diverse customer base with automated HolidayMail campaigns.”\n\n\nDon’t\n“HolidayMail campaigns make it easier to reach customers who celebrate different holidays around the world.”\n\n\nProvide a concise, final reinforcement of the core benefit:\n\n\nDo\n“Promote your products to every corner of the globe with HolidayMail.”\n\n\nDon’t\n“Use the HolidayMail app to find new holidays so you can promote your products to customers around the world.”\n\n\nMaintain trust through contextual education\nMerchants are in beginner mode when presented with a new experience. Onboarding flows should support first-hand\nlearning and provide lessons in-context. Aim for a gradual build of knowledge and skills. Be as approachable as possible to inspire confidence and prevent merchants from giving up.\nEducational content should:\n\ninform, but not overwhelm.\nincorporate feedback at every step, whether successful or not, so merchants know the effect of their actions.\nuse plain language.\nuse consistent terms about the core benefit across the flow. Clarify confusing or unfamiliar terms with tooltips.\nalways offer a next step. Use step terminology such as “next, first, then.”\nexplain why new tasks need to be completed.\nreinforce and repeat key concepts. Start with detailed explanations and steadily simplify for subsequent steps in the flow.\n\nWhen guiding a merchant through an onboarding flow, always offer a next step.\n\nExplain why new tasks need to be completed.\n\n\nDo\n\nBy connecting your email account with HolidayMail, your customer lists will be automatically imported,\nand you’ll be able to launch campaigns right from the app.\nHolidayMail will import your customer lists automatically.\n\n\n\nDon’t\nDon’t offer a call to action without explaining what will happen.\n\nConnect account\n\n\n\n\nUse tooltips for definitions\nUse tooltips to educate merchants about new, technical, or industry-specific terminology that they wouldn&#39;t\nhave come across before interacting with the product or feature. Pro tip: At Shopify, we don’t default to using\nindustry-specific terminology if the term isn’t globally understood and a more plain language option is available.\n\n\nDo\n\n\n\nDon’t\nDon’t use tooltips for:\n\nmerchant actions\ninstructional content\ndetailed explanations\nexplanation for personal information requirements\n\n\n\n\nPlan for final impressions\nSome products or features (especially apps) get deprecated or sunsetted by developers. Merchants might also decide\nto uninstall an app or stop using a product of feature. Create a positive final impression by building off-boarding\ninto your experience.\n\nGood offboarding experiences:\n\nput the cancel subscription call to action in a logical, easy to find location, like on an account or billing page\nclearly confirm cancelation\ngive alternatives to canceling, like the option to downgrade a plan or pause the subscription\nlet merchants know what information they might lose if they cancel or downgrade\nmake feedback requests quick and frictionless (only request feedback if relevant)\n\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Shopify experience values",
      "keywords": [
        "mission",
        "approaches",
        "design principles",
        "design values",
        "ux principles",
        "ux values",
        "user experience principles",
        "user experience values",
        "shopify mission",
        "shopify approaches",
        "shopify design principles",
        "shopify ux principles",
        "shopify principles",
        "merchant first",
        "merchant-first",
        "empower",
        "considerate",
        "empowering",
        "crafted",
        "efficient",
        "trustworthy",
        "familiar",
        "don’t overwhelm",
        "cohesive experiences",
        "polished"
      ]
    },
    "intro": "At Shopify, we empower commerce at a global scale. We build products, tools, and services for people to start, manage, and scale their businesses. We manage enormous complexity for commerce giants, and give new entrepreneurs the best chance to succeed.",
    "content": "Shopify experience values\nAt Shopify, we empower commerce at a global scale. We build products, tools, and services for people to start, manage, and scale their businesses. We manage enormous complexity for commerce giants, and give new entrepreneurs the best chance to succeed.\nThese values are at the heart of how we build experiences at Shopify. They’re important whether you work at Shopify or you’re developing third-party apps or themes.\n\nOur approach \nThe best part of this shared set of values is the conversations they enable. They are fantastic lenses through which to view, critique, and improve our work.\nWe always aspire for Shopify experiences to feel:\n\n\n\n\nConsiderate\nAbove all else, we show care for the people who use our tools and products. We’re here to make their day-to-day and long-term work better — no matter who they are, where they are, or what platform they’re using.\n\nBuild experiences that work on every screen, on every platform, in every language, and in every country.\nTake time to understand where we can build for a general audience, and where we should offer different paths for different needs.\nRespect the reality of this work – don’t assume the perfect situation, preparation, or usage.\n\n\n\nEmpowering\nWe want people to feel like they can accomplish whatever they’re trying to do. Our experiences should give people confidence that they’re capable of achieving their goals, no matter their level of experience.\n\nHelp users complete their tasks, without taking away decisions or independence.\nOptimize for the most important tasks without blocking people from doing the rest.\nHide complexity where you can, but give people access to more sophistication if they need it.\n\n\n\n\n\n\n\n\nCrafted\nShopify experiences should feel like they were created with the highest level of craftsmanship. Through thoughtful details and small touches, we combine the power of professional tools with the simplicity of consumer products.\n\nWork to understand the complex problems users face, then find clear and approachable solutions to those problems.\nDelight people with how powerful and effective an experience is, not with extra decoration or flair.\nLook for meaningful ways to make experiences more natural, friendly, and thoughtful.\n\n\n\n\n\nEfficient\nShopify experiences should help people achieve their goals quickly, accurately, and with less effort. We value speed and simplicity, but we value productivity even more.\n\nBreak complex tasks down into simple steps, and remove repetitive tasks whenever you can.\nUse friction to highlight important decisions, then let users get back to work.\nGive users the ability to reduce and optimize their workloads through automation and bulk actions.\n\n\n\n\n\n\n\n\nTrustworthy\nWe constantly work to recharge our users’ trust batteries. We sweat the details. We’re genuine and transparent to show users that we’re always acting in their best interest.\n\nFix the small mistakes and inconsistencies that erode trust.\nBe transparent about what a feature or tool can do and what it can’t.\nMake safe and positive actions frictionless. If they’re risky, give clear instructions and greater control. Make it easy to recover from mistakes.\n\n\n\n\n\nFamiliar\nWe want people to feel comfortable using our products, whether it’s their first time using them or their hundredth. Our experiences should embody the same principles, act the same way, and fit together seamlessly.\n\nThink bigger than any individual task or product. Understand the context users are working in.\nUse familiar patterns to make experiences intuitive and recognizable.\nEvolve experiences seamlessly. They should keep getting better with time and information.\n\n\n\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Formatting localized currency",
      "keywords": [
        "internationalization",
        "localization",
        "currency",
        "currencies",
        "money",
        "euro",
        "dollar",
        "formatting",
        "short format",
        "explicit format",
        "internationalizing",
        "localizing",
        "locale",
        "overseas",
        "international",
        "global",
        "japan"
      ]
    },
    "intro": "Currencies are formatted differently in different countries and languages. There’s a currency formatting framework to:",
    "content": "Formatting localized currency\nCurrencies are formatted differently in different countries and languages. There’s a currency formatting framework to:\n\nHelp more merchants sell globally\nLocalize currency formatting for merchants and customers everywhere\nUnify the display of mixed currencies to help merchants manage multiple currency stores\nImplement the formatting through APIs\n\n\nDefinitions\nA store can have more than one type of currency and currency format.\n\nStore currency\nThe main currency of the store and the Shopify default. All sales and reports are shown in the store currency.\n\nNon-store currency\nAny other type of currency is called “non-store currency”. Types of non-store currency include:\n\nPresentment currency: The type of currency that is presented to buyers in a merchant’s store. For multi-currency stores, it can be different from store currency.\nPayout currency: The type of currency used to pay merchants for their sales. For multi-currency stores, it can be different from store currency.\nBilling currency: The type of currency used to bill merchants for themes, app purchases, and monthly subscriptions. Billing currency is in USD only, but might include local currencies for tax purposes.\n\n\nShort format\nIncludes the currency symbol and currency value. This format is used for currency that merchants are familiar with.\nExamples: $12.50; 12,50 €\n\nExplicit format\nIncludes the currency symbol, currency value, and ISO code (for example, “USD” and “CAD”). Best used for currency that merchants aren’t familiar with and don’t expect to see.\nExamples: $12.50 CAD; 12,50 € EUR\n\nAligning with global standards\nShopify uses Common Locale Database Repository (CLDR) for localization formatting for currency, date, time, and amount.\n\nIt’s the recognized international standard\nIt automatically formats numbers and currency based on the merchant’s locale\nThe repository is maintained by a third party\n\nCLDR determines:\n\nWhether the currency symbol appears before or after the amount (for example, $250, 250 USD, 250 $)\nWhether decimals are used (for example, there are no “cents” in Japanese yen)\nWhether the decimal sign is a period or a comma (for example, 37,50 or 37.50)\nHow to group numbers (for example, 10,000 or 1,0000, or using spaces)\n\nCLDR doesn’t determine the appropriate level of detail shown in different contexts. For example, it can’t determine when to show the currency symbol and value (short format), or the currency symbol, value, and ISO code (explicit format).\nThough short format is more efficient, it’s important to provide clarity for merchants who deal with unfamiliar currencies in multi-currency stores. In those cases, use explicit format.\n\nDesign guidelines\nBecause CLDR formatting is limited, these guidelines will help you choose the appropriate level of currency detail to display in a multi-currency context.\nMerchants\nStore currency\n\n\nDo\nDefault to short format.\n\n\n\nDon’t\nUse explicit format except when presenting store currency within in a mixed-currency context.\n\n\n\nNon-store currency\n\nUse explicit format when showing total amounts, an amount within a button, or in a paragraph\nUse short format when showing non-total amounts with total amounts\n\n\n\n\n\n\nThis example shows a scenario where the presentment currency is in USD, which is different than the store currency. The non-total amounts in the paid status card are in short format, and the total amounts are in explicit format.\n\n\n\n\n\n\n\n\n\n\nThis example shows a scenario refunding an order that’s in a non-store currency.\n\n\n\n\n\n\n\n\n\n\nThis example illustrates the use of short format for non-total amounts and explicit format for total amounts in a data table.\n\n\n\n\n\nNegative amount display\nAlways place the negative symbol before the currency and amount in either format.\n\n\nDo\n\n-$4.20\n-12,50 €\n\n\n\nDon’t\n\n$-4.20\n12,50 €-\n\n\n\nCustomers\n\nDefault to explicit format whenever prices are customer-facing. Use short format for unit prices, itemized prices, and installment prices.\nIf there are enough indicators to let customers know which currency they’re looking at, short format may be sufficient. When using short format, make sure to always use explicit format for cart total, checkout total, and notification totals.\n\n\n\n\n\n\nThis example shows the use of short format for installment prices.\n\n\n\n\n\n\n\n\n\n\nThis example shows the use of short format for unit prices.\n\n\n\n\n\n\n\n\n\n\nThis example shows the use of short format for itemized prices.\n\n\n\n\n\n\nGuiding questions when making design decisions\nUse the following questions to guide you when making decisions about currency formatting.\nDoes the merchant know which currency they’re looking at?\n\nWhich currency do they expect to see?\nDo they know which currency their orders are in if they have a multi-currency store?\n\nDoes the currency format support the merchant’s main task?\n\nIs the main task scanning, comparing and analyzing, or taking an action (for example, a refund)?\n\nAre there enough details to make an informed decision?\n\nFor example, do they know the currency of their non-store currency order refund?\nCan they distinguish between the sales report and payout summary if the store currency and payout currency are different?\n\nCan the UI be simplified without creating confusion?\nWe don’t want to show explicit format everywhere and for every task.\n\nHow can we make currency formatting both simple and accurate?\n\n\nDesign tips\nMock up a scenario where the store, presentment, payout, and billing currencies are different. This scenario is becoming more common as more merchants start selling globally.\nUse currencies that share the same symbol to test for clarity\nUSD, CAD, AUD, HKD, SGD are just a few of the many currencies that share the same symbol “$”.\nUse Japanese Yen (JPY) amount to test currency length and space constraints\n1 USD is approximately 100 JPY. If there is enough space for the JPY amount, it should work for most other major currencies.\nWhen in doubt, let the guiding questions help you make a decision\nThe guiding questions are meant to help make merchant-focused decisions about which format to use when the use case is unclear.\n\nMajor currencies in their local formats\nThis table shows commonly-used currencies in short and explicit formats.\n\n  \n    \n      Currency\n      Locale\n      Short format\n      Explicit format\n    \n  \n  \n    \n      US Dollar ($, USD)\n      en-US\n      $12.50\n      $12.50 USD\n    \n    \n      \n        Canadian Dollar ($, CAD)\n      \n      en-CA\n      $12.50\n      $12.50 CAD\n    \n    \n      fr-CA\n      12,50 $\n      12,50 $ CAD\n    \n    \n      \n        Australian Dollar ($, AUD)\n      \n      en-AU\n      $12.50\n      $12.50 AUD\n    \n    \n      \n        Euro (€, EUR)\n      \n      de-DE, fr-FR\n      12,50 €\n      12,50 € EUR\n    \n    \n      en-IE\n      €12.50\n      €12.50 EUR\n    \n    \n      nl-NL\n      €12,50\n      €12,50 EUR\n    \n    \n      British Pounds (£, GBP)\n      en-GB\n      £12.50\n      £12.50 GBP\n    \n    \n      Japanese Yen (¥, JPY)\n      ja-JP\n      ¥1250\n      ¥1250 JPY\n    \n    \n      \n        New Zealand Dollar ($, NZD)\n      \n      en-NZ\n      $12.50\n      $12.50 NZD\n    \n    \n      \n        Hong Kong Dollar ($, HKD)\n      \n      zh-HK\n      $12.50\n      $12.50 HKD\n    \n    \n      \n        Singapore Dollar ($, SGD)\n      \n      zh-SG\n      $12.50\n      $12.50 SGD\n    \n    \n      Danish Krone (Kr, DKK)\n      da-DK\n      12,50 kr.\n      12,50 kr. DKK\n    \n  \n\n\n\nImplementation\nTo format currency in a React component, use the Shopify/react-i18n library’s formatCurrency method. You can select either short or explicit formatting by setting the form option as shown in the code example below.\nimport { useI18n } from &quot;@shopify/react-i18n&quot;;\n\nconst [i18n] = useI18n();\n\ni18n.locale = &quot;de-AT&quot;;\n\nconst eurDeAt = i18n.formatCurrency(price, {\n  currency: &quot;EUR&quot;,\n  form: &quot;short&quot;,\n});\n\nconst eurDeAtExp = i18n.formatCurrency(price, {\n  currency: &quot;EUR&quot;,\n  form: &quot;explicit&quot;,\n});\n\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Information architecture",
      "keywords": [
        "IA principles",
        "info architecture",
        "wayfinding",
        "way finding",
        "navigation"
      ]
    },
    "intro": "Everything we create at Shopify has an underlying foundation of information architecture. If you’re a designer, a content strategist, or a UX developer, you’re already doing IA work.",
    "content": "Information architecture (IA)\nEverything we create at Shopify has an underlying foundation of information architecture. If you’re a designer, a content strategist, or a UX developer, you’re already doing IA work.\n\nDefining IA\nInformation architecture is the practice of organizing, structuring, and labeling content in an effective and sustainable way. Whether you’re creating an app, part of the Shopify admin, a new feature, or an editorial page, these IA principles are here to help you make content usable and findable.\n\nWhy we do IA\n\nSimplify complexity: Information should be structured and managed in the simplest way possible.\nSupport scalability: Good IA practices will help us avoid overhauling our previous work whenever the product grows or changes.\nCreate familiarity: Regardless of how our merchants access Shopify, it should feel like the same product. Creating a common experience goes beyond design and extends to how we structure Shopify’s content.\n\n\nOur IA principles\nThese principles will help you make good IA decisions no matter what you’re working on.\nShow your audience where they are\nSuccessful wayfinding happens when your audience can make navigation decisions that fulfill their goal. For navigation to enable wayfinding:\n\nEstablish multiple navigation schemes\nUse task-based navigation\nIntegrate secondary navigational support (like breadcrumbs)\n\nNavigation is a tool that serves a number of wayfinding purposes.\nGood navigation allows our merchants to explore a topic in depth, switch tasks easily, and filter information.\nIn the Shopify admin, merchants can find their way using multiple navigation schemes:\n\nStructural: main navigation, local navigation, breadcrumbs\nAssociative: contextual links to other features or help documentation\nUtility: linked avatars to access your account, search\n\nIn the Shopify admin, merchants can find their way to the blog posts page using the side navigation (nav) and search. They can use the breadcrumb to go up to the main level in the Online Store section of the nav. They can also access related help documentation through the contextual “learn more” footer at the bottom of the page.\n\nGive content one home and many doors\nAll people are unique and have different information-seeking behaviors. For example, one person might start their experience from various points in a product or shift their focus midway through a task. They might also begin a task on one device and finish it on another. To facilitate these behaviors, all screens should have meaningful navigation and bridge content to other parts of the product.\nThe content on the Shopify Help Center’s shipping page only lives in the Help Center—we don’t duplicate it in the Shopify admin or on our marketing pages. But even though it only lives in one place, we give merchants access to it when it’s likely that they’ll need more context on shipping (like through a link on our shipping settings page in the Shopify admin).\n\nAvoid information overload\nAlthough we want to give our merchants all the information they need to complete a task, we need to avoid overloading them with information. Don’t over-simplify, but don’t burden your user with choice. To do this in design, we use progressive disclosure, but this principle also applies to information architecture. To practice progressive disclosure in IA:\n\nGradually reveal information as it’s requested\nProvide multiple access points to information\nEliminate redundant content\n\nThe content on the Shopify Capital page on Shopify.com summarizes the benefits of receiving capital from Shopify at a high level. After scanning the summary, merchants have the option to access more information about the program with a link to the docs on the Shopify Help Center. By progressively disclosing information in this way, we help merchants reach decisions faster and avoid the frustration and disorientation of front-loading with too much detail.\n\n\nPlan for growth and change\nInformation architecture, like design, is not set in stone. It should change with your product. As such, the IA decisions you make need to leave room for growth while also continuing to promote consistency across the experience.\nThe Shopify.com homepage takes a scalable approach to page architecture—the structure was designed to adapt as Shopify expands to different locations. This was done by taking a modular approach.\nEach locale can customize the homepage to meet their needs. For example, for 2 stories, they can use 2 banners. For 3, they can use 1 banner and 2 tiles.\n\n\nTo make sure your IA decisions are scalable:\n\nCommunicate early and often, within and outside of your team.\nOpen the lines of communication when doing IA work and make sure your work aligns with the work of other areas of the product.\nThink about the future and how the work you’re doing will intersect with other projects.\nCreate content groups that are flexible enough to accommodate growth, while being meaningful to the user.\nConsider how your IA will adapt to multiple environments and their existing patterns (for instance, iOS, Android, desktop browsers, chat bots, retail products like Point of Sale).\n\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Internationalization",
      "keywords": [
        "internationalization",
        "localization",
        "translation",
        "internationalizing",
        "localizing",
        "translating",
        "locale",
        "overseas",
        "international",
        "global",
        "globalization",
        "japan",
        "germany",
        "france"
      ]
    },
    "intro": "Make commerce better for everyone by building interfaces that work everywhere. These guidelines will help you design, write, and build products that can be used in every part of the world.",
    "content": "Internationalization\nMake commerce better for everyone by building interfaces that work everywhere. These guidelines will help you design, write, and build products that can be used in every part of the world.\nWe want our merchants to experience Shopify in a way that’s appropriate and meaningful to them, no matter where they are in the world.\nWe aim to build one experience that works for all merchants in all of our markets. However, when a certain experience doesn’t fit a specific market, we should tailor it.\n\nDefinitions \nInternationalization\nBuilding your product and interface so they can be used in different locales. This includes creating flexible interfaces that allow for text expansion and changes to word order.\nLocalization\nAdapting your product and interface for different locales to make them a good cultural fit. This includes adapting features, changing visuals, and translating text.\nTranslation\nConverting text from one language to another. Not to be confused with localization, translation is just one part of localizing a product.\nLocale\nA linguistic region defined by both its language and country. Examples:\nFrench-France (fr-FR); French-Canada (fr-CA); Portuguese-Brazil (pt-BR). Note that languages and countries won’t always have a 1:1 mapping.\n\nPlan for text expansion\nWhen interfaces are localized, the content will often expand in length. In most languages, text is up to 50% longer on average than English. Some non-Latin languages, such as Japanese, take up more vertical space. For character-based languages, text wrapping and line breaking can’t always rely on spaces to separate words. Your interface needs to be flexible enough to accommodate language-specific formatting and text expansion without changing its context of use.\n\n\nDo\n\nLay out your elements in a way where text expansion doesn’t hinder your information hierarchy.\n\n\nDon’t\n\nDon’t rely on responsive stacking alone. It can often change the hierarchy of information of the layout. In this case, the text expansion causes the line break at the wrong spot, placing the button in the middle of the heading and content of this card.\n\n\n\n\nDo\n\nUse single columns to stack elements flexibly to accomodate for text expansion.\n\n\nDon’t\n\nAvoid using narrow columns in smaller components. Ensure the right amount of padding for a clean interface.\n\n\nTips\n\nAlways assume the worst-case scenario for text length, especially on mobile and in layouts such as tables and columns. Avoid using narrow columns.\nPay particular attention to content elements that only have a few words. In English, labels and buttons exclude words such as “a” or “the”, but many other languages need to include them. Overall these small pieces of text may expand up to 300%.\nOur components are designed to be expandable, but you should still test them in your designs and builds. Check the CSS layout to make sure text doesn’t overflow when the screen size is reduced.\nWork with linguistic experts to review line breaks and word wrapping for character-based languages, like Chinese or Japanese, to ensure they don’t break sentences.\n\n\nPlan for changes in word order\nWord order can change dramatically in translation. If the layout and functionality of your interface is dependent on a certain word order, it’s likely to break when localized.\n\n\nDo\n\nIf content elements need to stay in a certain position on the page, implement them as separate labels, outside of sentences.\n\n\nDon’t\n\nDon’t place elements with a fixed position inside a sentence. The order of this sentence would often need to change in translation, which is impossible to do if the interface is built this way.\n\n\n\n\nDo\n\nWhen including links in body text, only use a single and descriptive term or a small part of a phrase as the link. Find out more about links.\n\n\nDon’t\n\nDon’t use full phrases as links. Word order changes might break the link into several parts when translated.\n\n\nTips\n\nAssume the word order of every sentence in your interface will change when translated.\nAvoid using UI components to build sentences.\nAvoid splitting one sentence into several strings, known as concatenated strings. If you use concatenated strings, translators won’t be able to change the word order and their translations won’t make sense.\nAvoid using variables in your strings as it will translate differently.\n\n\nPlan for cultural differences\nMerchants in each locale have different cultural sensibilities. Use visuals, content, and interface formats that are useful and meaningful to merchants in all parts of the world.\n\n\n\nWhen possible, use universally known icons. Be mindful of when you use country-specific icons and where they are surfaced. Find out more about icons.\n\n\n\n\n\nBe mindful of using colors to represent meaning. Colors can hold discrete connotations in different cultures. For example, in North America, green is used to indicate success and red for failure, as opposed to China, where red symbolizes prosperity and good fortune.\n\n\nTips\n\nWhen using photos, illustrations, icons, or emojis, make sure the visuals you’re using are not offensive or culturally insensitive. If you’re unsure about a visual you’re using, research it or ask someone with local knowledge.\nWhen naming features, be mindful of connotations in other cultures, especially for evocative names and acronyms. Find out more about naming.\nAvoid colloquial words, idioms, and references to popular culture. It’s difficult to translate them in a meaningful way.\nIn some cultures, a person’s given name comes first, whereas in other cultures the family name comes first. Let merchants choose how they want to enter, read, and sort names, especially in text fields and lists.\nMany types of information, such as addresses, dates, numbers, and currencies, are shown in different formats in different locales. For example, some locales display currency symbols before the number, others display them after. Make sure these can be translated appropriately. Find out more about formatting localized currency.\nSome cultures expect more guidelines and instructions when filling in long or critical forms. Consider using asterisks to mark mandatory fields in a form to match that expectation.\nWork with people that have local knowledge if possible.\n\n\nInternationalize Polaris components\n\nWhen designing with a Polaris component, test the localized versions to make sure it still works with the rest of your interface.\nIf you need a certain component to adapt, but it hasn’t yet been internationalized in Polaris, you can open a feature request in GitHub.\n\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Error messages",
      "keywords": [
        "error states",
        "invalid",
        500,
        400,
        404,
        "error pages"
      ]
    },
    "intro": "Error messages can be scary. Make errors visible to merchants, easy to\nunderstand, and helpful.",
    "content": "Error messages\nError messages can be scary. Make errors visible to merchants, easy to\nunderstand, and helpful.\nError messages should:\n\nTell merchants what happened. If there’s a solution, explain it. If possible,\noffer a one-click fix with a button. If there’s\nno solution, give troubleshooting instructions.\nBe placed close to the source of the problem.\nCommunicate severity using the appropriate color and\ntone of voice.\nUse\nplain language.\nBe specific. For example, use precise\nnumbers and dates.\nBe brief.\n\nGood design can reduce the need for error messages by preventing them in the\nfirst place.\n\nError message types\nThink about the scope of the error when selecting a message type. Is something\nwrong with the entire application, with the entire current screen, or with a\nspecific element on the screen?\nIf the cause of the error is visible and the error just happened, show the error\nmessage immediately and as close to the source of the problem as possible.\nText field validation error\n\n  \n    Use when:\n    \n      \n        An error applies to a text field and feedback can\n        be provided while merchants are typing\n      \n    \n  \n\n\n\n\n\n\n\n\nSettings warning\n\n  \n    Use when:\n    \n      \n        The form input is valid, but you want to warn merchants\n        of a consequence they might not expect\n      \n    \n  \n\n\n\n\n\n\n\n\n\nPage-level banner: critical or warning\n\n  \n    Use when:\n    \n      An error applies to the entire page\n      The error is far down the page and it’s critical merchants see the message\n      Multiple validation errors on the page need to be summarized\n      The error was delayed and it’s okay to inform merchants of the problem when they return to the page\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\nBanner in a card or modal: critical or warning\n\n  \n    Use when:\n    \n      An error applies to a single card within the page, a single section within a card, or a modal\n      You need to direct merchants to a page with multiple sections and you want to visually call out the section with the error\n    \n  \n  \n\n\n\n  \n\n\nException list: critical or warning\n\n  \n    Use when:\n    \n      A message placed within or next to a component can help merchants make better decisions about routine tasks\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\nHome notification: critical or warning\n\n  \n    Note: Home notifications should rarely be used for errors. Always attempt to display an error close to the source of the problem.Use when:\n    \n      A high-priority task must be completed immediately to continue using Shopify or avoid losing money\n      A feature doesn’t have a dedicated details page\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\nAdmin unavailable\n\n  \n    Use when:\n    \n      A server error is preventing an entire page from being displayed, like with 400 or 500-series server errors\n      Account permissions are preventing someone from accessing Shopify\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError colors\nRed is the scariest error color. Only use red for critical messages that\nmerchants need to deal with immediately to avoid harm to their business. For\nexample, if merchants don’t act on the message right away, they might lose\nmoney or their store might be suspended.\nYellow error messages still demand attention, but are more appropriate for\nmessages that are part of a daily workflow.\n\nRed (critical)\nUse critical messages to:\n\nBring attention to urgent tasks. If not dealt with immediately, merchants&#39;\nbusinesses will be noticeably impacted, like an account being suspended or\nmoney being lost.\n\nExamples of critical message types:\n\nUpdate a payment method expiry date\nUnsuspend an account\nReview an order for fraud\nFix a problem that’s preventing payment from being processed\n\n\n\nDo\n\n\n\nDon’t\n\n\n\nThe one exception to using red is in form validation errors because this is a\nstandard convention merchants are used to seeing outside of Shopify.\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nYellow (warning)\nUse warning messages to:\n\nHelp merchants fix issues so they can complete a common workflow or continue\nto the next step\nNotify merchants about upcoming expirations or pending requests that, if not\ndealt with soon, could lead to problems in the future\n\nExamples of warning message types:\n\nFix a problem before proceeding to the next step.\nFix a problem at some point in a common workflow.\nThere’s a pending request.\nThere’s an upcoming expiration.\nChanging a setting might have unintended consequences. See\nsettings warning.\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\n\nAnti-patterns\nAvoid using toast for error messages\n\n  \n    \n      Although error toast is still available, we discourage its use. Toast messages are too short to adequately explain what went wrong and how to fix the problem. Because the toast component appears at the bottom of the screen and disappears after 3 seconds, it can easily be missed. Reserve toast for errors not caused by merchants, like a connection issue. Always try to use a banner to inform merchants about persistent errors.\n    \n  \n\n\n\nDon’t\n\n\n\n\n\n\n\n\n\n\n\n\nDon’t use modals for errors\n\n  \n    \n      Modal dialogs are a good way to ask merchants to confirm a\n      destructive action, but not to tell them an error has occurred.\n      Modals block merchants until a decision is made, which is\n      likely to make merchants feel pressured. Most errors don’t need\n      to block access to the rest of the feature.\n    \n  \n\n\n\nDon’t\n\n\n\n\n\n\n\n\n\n\n\n\nAvoid using home notifications for errors\n\n  \n    \n      Home notification errors are for high-priority tasks that merchants\n      must complete immediately to continue using Shopify or prevent\n      a negative impact to their business, like losing money.\n      One exception is errors for features that don‘t have a\n      dedicated details page.\n    \n  \n\n\n\nDon’t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm validation\n\nText field validation\nUse when:\n\nA text field has formatting requirements. Use this pattern to enhance\nvalidation on form submission.\n\nDon’t use when:\n\nIt takes\nmore than a full second\nto validate input and display a message. If there’s a lag before a validation\nmessage appears, merchants might shift their attention and miss the error.\nEither find a way to improve the validation speed, or rely on the\nvalidation after form submission.\nThe field is empty. Merchants might tab through a form before filling it out, and errors on empty fields can cause confusion and frustration.\n\nComponent:\n\n  \n    \n      \n        Text field\n      \n    \n    Content:\n    \n      \n        Use two or three words to explain what’s wrong or what’s\n        needed to fix the problem.\n      \n      \n        Avoid using the word \"invalid\" to define an error. When appropriate, use \"not valid\" instead.\n      \n      \n        Since the message is directly below the text field, the copy only\n        needs to explain why the error happened. Optionally, the message can\n        clarify what to do next or offer a one-click fix.\n      \n    \n  \n\n\n\n\n\n\n\n\n\nUsage\nDo an initial validation check as soon as merchants finish typing in the\nfield.\nMerchants can be considered to be finished typing only when keyboard focus\nmoves away from the field and there is at least one character in the field. This\nhelps avoid marking the field as not valid before merchants are really done typing.\n\n\n\n\n\nIf the validation check fails, show an error message below the field.\n\n\n\n\n\nOnce a field has an error, complete validation checks after each keystroke.\n\n\n\n\n\nRemove the error message as soon as the input becomes valid so merchants can\nimmediately tell they fixed the issue.\n\n\n\n\n\nIf the validation process is less than a second but not instant, show a spinner\non the field to indicate validation progress.\n\n\n\n\n\n\n\nValidate on submit\nValidate on submit is triggered when merchants press the form’s submit\nbutton. The submit button is often [Save], but can be another call to action.\nUse when:\n\nNot all fields can be validated while merchants are typing. When a form is used\nfor saving data, always validate on submit and validate text fields while\ntyping. For example, if merchants never interact with a required text field,\nthere’s no change to mark it as not valid until they press the submit button.\nThe same applies to form controls other than text fields, such as radio\nbuttons, and selects.\n\nDon’t use when:\n\nA form doesn’t have specific validation requirements, or the form doesn’t save\ndata. For example, a search form that returns no results should display an\nempty state, rather than a validation error.\n\nComponent:\n\n  \n    \n      \n        Banner\n      \n    \n    And one or more of the following:\n    \n      [Text field]\n      [Select]\n      [Choice list]\n      [Checkbox]\n      [Radio button]\n    \n    Content:\n    Banner heading:\n    \n      Use a colon to introduce the list.\n      \n        Make the heading instructional. Don’t just call out that there\n        are {x} number of errors.\n      \n    \n    Banner body text:\n    \n      \n        Use the list component to itemize the errors\n      \n      \n        Start each list item with the label of the field that isn't valid,\n        and describe the action needed to fix it\n      \n    \n    Individual field error messages:\n    \n      \n        See content guidelines for validation while typing\n      \n    \n\n  \n\n\n\n\n\n\n\n\nRather than pointing out that there are {x} number of errors, be more\ndescriptive. Explain that in order to save or continue, {x} number of fields\nneed to be changed. For the bullet point instructions, see if you can word them\nto be more actionable, for example, “Add a discount code,“ instead of “Discount\ncan’t be blank.“\n\n\nDo\n\n\n\nDon’t\n\n\n\nUsage\nAlways indicate submission progress. If the fields aren&#39;t valid, don’t clear or alter them on behalf of merchants during validation.\n\n\n\n\n\nIf the form submission has a single error:\n\nMove scroll position to the field that is not valid\nFocus the field\nShow an error message below the field\n\n\n\n\n\n\nIf the form submission has multiple errors:\n\nMove scroll position to the top of the screen\nUse a banner to display a summary of all the errors\nShow an error message below each field that is not valid so merchants can scroll through and make corrections\n\n\n\n\n\n\n\n\nSettings warning\nUse:\n\nTo help merchants prevent potential mistakes\nWhen form input is valid, but you want to warn merchants of a consequence\nthey might not be expecting\n\nDon’t use:\n\nFor actual error states\n\nTip: Explore ways to prevent the warning message from showing at all. Look for\nopportunities to add help text or other contextual information to surface or\nhighlight potential risks or consequences of taking, or not taking, the action.\nComponent:\n\n  \n    \n      \n        Banner\n        without title\n      \n    \n    Content:\n    \n      \n        Since the warning message is in close context to the action that\n        triggered the warning, it should be short\n      \n      \n        Explain the risks or consequences of an action that’s just been taken\n      \n      \n        These messages don’t have to start with actionable language, like,\n        “Change currency.” Here are some options:\n        \n          \n            Start with the word “This” and explain the consequence,\n            for example, “This will affect inventory prices”\n          \n          \n            Start by noting the action, then explain the consequence,\n            “Changing {x} will affect {y}”\n          \n        \n      \n      \n        If available, link to a resource where merchants can learn more\n      \n    \n\n  \n\n\n\n\n\n\n\n\n\n\nBanners\n\nPage-level banners\nUse when:\n\nAn error applies to the entire screen\nThe error is far down the page and it’s critical that they see the message\nA form was submitted with fields that are not valid\nIf the error was delayed, for example, an action was taken and the error\ndoesn’t immediately appear in context\n\nDon’t use when:\n\nIt’s possible to place the banner [in context] because the source of the error\nis in view and the event that triggered the action just happened\n\nFor multiple error guidelines, see validate on submit\nPage-level banner errors should explain:\n\nWhere the error happened\nWhat happened\nWhy it happened\nWhat to do next\n\n\n\nDo\n\n\n\nDon’t\n\nUnable to process payment for checkout with negative taxes.\n\n\n\nComponent:\n\n  \n    \n      \n        Banner\n      \n    \n    Content:\n    Headings should:\n    \n      Clearly state the problem\n      Not use punctuation\n    \n    Body content should:\n    \n      Explain how to solve the problem.\n      \n        Use actionable language like “do x.” Don‘t use permissive language,\n        like “you can x.” Be concise: no longer than 2 sentences.\n      \n      Use periods.\n    \n    Calls to action should:\n    \n      Be action-led (verb+noun format)\n      \n        Aim for a one-click fix. If the error can be fixed via a single\n        button or menu, offer that action directly in the error message.\n      \n      \n        Open a dedicated error-correction view for more complex problems\n        such as reviewing a risky order or editing an unverified\n        customer address.\n      \n      \n        Provide a link to documentation for information that may be\n        valuable but can’t fit in a brief error message.\n      \n    \n\n  \n\n\n\n\n\n\n\n\n\nBanners in cards and modals\nUse when:\n\nMerchants are engaged in a task flow and you want to warn them about potential\nissues with the task at hand, or inform them something has gone wrong\nDirecting merchants to a page with multiple sections and you want to visibly\ncall out the section with the error\n\nDon’t use when:\n\nAn error applies to the entire screen.\nThe error is far down the page and it’s critical that merchants see the\nmessage.\nIf the error was delayed. For example, an action was taken and the error\ndoesn’t immediately appear in context. In these cases, use the\npage-level banner\n\nComponent:\n\n  \n    \n      \n        Banner\n      \n    \n    Variant:\n    \n      Without title\n    \n    Content:\n    \n      \n        The more contextual the message, the less you need to say,\n        so go straight to explaining what happened and how to fix\n      \n      Keep to one sentence\n      Contextual banners don’t have titles\n      Try to add a next step, whether in a button or link\n      Use when there is more than one call to action\n    \n\n  \n\n\n\n\n\n\n\n\n\nException lists\nUse when:\n\nItems in a list are in a noteworthy state that you want to make merchants\naware of, like a status, or piece of information (like a high risk order)\nthat’s directly relevant to the information it’s connected to\n\nExample:\n\nHigh risk order\n\nDon’t use when:\n\nThe source of the problem is an entire card or page\n\nComponent:\n\n  \n    \n              \n        Exception list\n      \n    \n    Variant:\n    \n      Status: critical or warning\n    \n    Content:\n    Content should:\n    \n      \n        Highlight an exceptional state that encourages clicking on the list item\n      \n      Pair content with a warning or error icon\n      Always lead with what went wrong\n      A description is required\n      A title is optional\n      \n        Links are optional but not common because the list item is actionable\n      \n      Be concise\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHome notifications\nHome notifications are primarily used to prevent merchants from losing money or\nhelp them continue using Shopify if they don’t act on the error message\ninstructions immediately.\nUse for:\n\nHigh-priority tasks that must be completed immediately to continue using\nShopify or avoid losing money.\nImportant enough tasks that we wouldn’t want merchants to navigate to another\nplace in Shopify to find it, or stumble upon while completing another task.\nErrors for features that don’t have a dedicated details page. For example, before\nShopify Capital had a details page, related status messages were temporarily\nsurfaced in Home.\n\nDon’t use for:\n\nTips or advice\nPositive feedback\nConfirmation messages\nNew feature announcements\nStatus messages, other than those for Shopify Capital\nMessages that can be displayed in context\nError messages that should be displayed in context\nTask-related errors like a problem with saving a page\n\n\n\nWarning home notifications\nWarning home notifications are pre-emptive. They let merchants know that their\nfinances will be impacted if action isn’t taken in a couple days or more, or\nthat an action can be taken to make money sooner.\n\nFinancing request is pending\nWarn about upcoming expiration\nPending status, like with Shopify Capital application status\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nCritical home notifications\nCritical home notifications inform merchants of issues that:\n\nCurrently impact their finances\nWill have an impact on their finances if action isn’t taken immediately\nPrevent the normal operation of their business or account\n\nCritical home notifications can be used for these message types:\n\nTrial expired\nDomain expired\nCredit card expired\nAccount is suspended\nShopify Payment payouts on hold\nPayment processing issues\nPayment authorizations expiring that day\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\n\nAdmin unavailable errors\nSometimes the admin can’t be displayed due to a network issue, browser\nlimitation, connection problem, or server issue. 400 and 500 series errors fall\nin this category. In these cases, always explain what went wrong and provide\nmerchants with a troubleshooting step, like refreshing the page.\nUse when:\n\nA page or the entire admin can’t be displayed\n\nDon’t use when:\n\nThe error can be placed in context, close to the source of the problem\n\n\n\nDo\n\n\n\nDon’t\n\n\n\nDon’t use internal language in error messages and avoid using question formats.\n\n\nDo\n\n\n\nDon’t\n\n\n\nComponent:\n\n  \n    \n      \n        Empty state\n      \n    \n    \n      Note: Use of the empty state component is temporary for admin\n      unavailable errors. This is an opportunity for someone at Shopify to\n      explore a new design and help with creating UX guidelines.\n      If you have ideas,\n      create an issue (private).\n    \n    Content:\n    Headings should:\n    \n      Heading should explain what went wrong\n      Body should help merchants troubleshoot the problem\n      \n        Call to action should provide the most probable fix,\n        like reloading the page, or going to the previous page or Shopify Home\n      \n    \n\n  \n\n\n\n\n\n\n\n\n\n\nErrors without solutions\nWhen a service issue occurs in Shopify or is caused by a third party, we don’t\nalways have a solution to offer to merchants. In these cases, always explain\nwhat went wrong so they can attempt to troubleshoot. If available,\nprovide them with a troubleshooting step, like refreshing the page or\nreturning at a later time.\nUse when:\n\nMerchants are being denied access to a page or the entire admin\nSee admin unavailable errors\nA third party issue is causing a disruption to merchants’ workflows\n\nDon’t use when:\n\nThere’s literally any solution we can offer to merchants\n\n\n\nDo\n\n\n\n\nDon’t\n\nDon’t use the “Something went wrong. Please try again in a few minutes.”\nmessage when there’s any option to offer more context.\n\n\n\n\n\nDo\n\nThis error message is a last resort: &quot;Something went wrong. Please try again in\na few minutes.&quot;\n\n\n\nDon’t\n\nAn error occurred\n1 error\nInvalid\n\n\n\n\n\nVoice and tone\n\n\nThese content guidelines are based on common copy mistakes. Avoid sounding\noverly apologetic, too technical, or hyperbolic. Keep Shopify out of the\nconversation unless Shopify was the cause of the error. Don’t downplay the error\nby telling merchants not to worry or by adding humor to a negative situation.\nAvoid the word “please” so it’s not overused throughout the admin. Don’t\ndownplay serious problems.\n\n\nDo\n\nSome of today’s sales data isn’t updated yet. This will be fixed soon. Your\ndata is safe, and your actual sales are not affected.\n\n\n\nDon’t\n\nToday’s sales data might not be accurate, but please don’t worry—it’s\njust temporary.\n\n\n\nDon’t use scary, technical words in error messages.\n\n\nDo\n\nProduct weight can’t be negative. Change the product weight to be 0 or higher\nand try again.\n\n\n\nDon’t\n\nError Line items grams must be greater than or equal to 0.\n\n\n\nError messages are not the place for hyperbole or injecting personality.\n\n\nDo\n\nHigh risk of fraud detected\n\nBefore fulfilling this order or capturing payment, review the Risk Analysis and\ndetermine if this order is fraudulent.\n\n\nDon’t\n\nUh oh! High risk of fraud detected\n\nLooks like there’s a high fraud risk with this order. Better review the Risk\nAnalysis to make sure the order is safe!\n\n\nDon’t use internal Shopify terms. Only include the information merchants need.\n\n\nDo\n\nThere’s a problem loading this page\n\nThere’s a technical problem with Shopify that has prevented this page from\nloading. Try reloading this page or going to another page in Shopify. If that\ndoesn’t work, visit our status page for updates and try again later.\n\n\nDon’t\n\nThere’s a technical problem with Shopify that has prevented this page from\nloading. Our operation engineers are aware of this problem and are working\nhard to get it solved.\n\n\n\nKeep Shopify out of the conversation. Focus on the information merchants need\nto complete their task efficiently.\n\n\nDo\n\nBefore you can view earnings from your store, you need to complete your\naccount setup. [Complete account setup]\n\n\n\nDon’t\n\nBefore we can provide you with earnings from your store, we need some\nadditional information. [Complete account setup]\n\n\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Help content",
      "keywords": [
        "help text",
        "learn more",
        "help center",
        "help"
      ]
    },
    "intro": "​\nHelp content is educational text that describes interactive elements or offers information about concepts in the UI.",
    "content": "Help content\n​\nHelp content is educational text that describes interactive elements or offers information about concepts in the UI.\nThe goal of help content is to teach merchants:\n\nHow to complete a task or make a good decision for their business\nImportant information related to the current workflow\nHow to optimize the way they use Shopify\n\n\nWhen to use less, when to use more\n​\nThe choice of whether or not to use help content depends on the kind of experience you’re designing.\nProductivity areas\n​\nProductivity areas include tasks that merchants do regularly, like adding products and fulfilling orders. These pages are used often and become familiar quickly.\nWhen designing productivity experiences, prioritize experienced merchants. This is their space to get work done and we can keep out of their way by offering a clean, streamlined UI. This means minimal help content.\n​\nEducational areas\n​\nEducational areas include tasks that merchants do infrequently, like adjusting tax or payments settings. Most of these settings aren’t changed very often, so merchants doing these tasks are often seeing them for the first time.\nWhen designing for educational experiences, prioritize merchants who are unfamiliar with the task or workflow. Offer context and guidance to help them make the right decisions for their business. This means making use of help content.\n\nPlace help where it’s needed\n​\nHelp content belongs as close as possible to the part of the UI it references. If it’s teaching merchants about the purpose of a card, put it at the top of the card as a description. If it’s teaching merchants about a particular field, put it beneath the field as help text.\nThe following is an example of help content that was originally a card description, but felt easier to parse after moving closer to the upload actions it helps with.\nBefore\n\nAfter\n\n\nAvoid a marketing tone\n​\nUsing help content to promote new features can erode trust with merchants. Not every feature is the best choice for every merchant at every point in time, and we shouldn’t assume that they want or need it.\nThere are times when our motivations and our merchants’ are highly aligned, and encouraging a certain action through help content might be appropriate. An example of this is discounted annual billing. It’s good for Shopify because of the long-term merchant commitment and up-front payment. It’s good for merchants who are long-term committed to Shopify and can pay up front.\nThis example also illustrates that there’s still only a subset of merchants that are at the right place to adopt it. Keep this in mind when suggesting how a feature might help someone’s business.\n\n“Learn more” links\n​\n“Learn more” links take merchants to the Shopify Help Center for more detailed information than we can offer in the UI.\nMake sure “learn more” links go to a Help Center page or heading that’s specific to the topic.\nThe Help Center is a rich resource, but for a merchant it’s not always a convenient time to read documentation. Landing on a dense page of information without knowing where to start is frustrating and disorienting. If there isn’t a page or heading specific to the topic you’re providing help for, work with the documentation team to create the right content.\n“Learn more” badges for settings\n​\n“Learn more” badges show an information icon that takes you to the Help Center. These are different from tooltips. On large screens, they expand on hover to reveal a “Learn more” link.\n\nUse “learn more” badges:\n​\n\nOnly in settings experiences, and only in card headers\nWhen the linked Help Center topic is relevant to the entire card\n\nBest practices:\n\nUse regular “learn more” links for help topics specific to only a part of a card\nSome cards benefit from a “learn more” badge in the heading in combination with “learn more” links or other help content in the card body\n\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Home cards",
      "keywords": [
        "home cards",
        "insights",
        "milestones"
      ]
    },
    "intro": "Home cards make actionable recommendations based on data from the merchant’s store, or give merchants feedback about their store’s performance.",
    "content": "Home cards\nHome cards make actionable recommendations based on data from the merchant’s store, or give merchants feedback about their store’s performance.\nHome cards should:\n\ntrack progress and give feedback\nteach and educate\ninspire and motivate\nbe data-driven and use data from the merchant’s store\n\n\nHome card types\nWhen choosing a home card type, think about the simplest way to present your message. For example, if the goal of the card is to inform merchants about holiday shipping deadlines, then a table is probably the best way to present this information. Alternatively, if your goal is to recognize merchant success, consider using a large illustration with some encouraging content.\nSimple card\n\n  \n    Use when:\n    \n      \n        you have one data point or recommendation, and one action. Use of the “Learn more” link is optional.  \n      \n    \n  \n\n\n\n\n\n\n\n\nAction-list card\n\n  \n    Use when:\n    \n      \n        you have one data point and a series of related actions\n      \n    \n  \n\n\n\n\n\n\n\n\nTable card\n\n  \n    Use when:\n    \n      \n        you have more than one data point but one action\n      \n    \n  \n\n\n\n\n\n\n\n\nLarge illustration card\n\n  \n    Use when:\n    \n      \n        you need to introduce an unfamiliar concept, or you want to recognize merchant success\n      \n      \n        you want to announce a new Shopify feature\n      \n    \n  \n  \n  \n\n\n\n  \n\n\nGraph card\n\n  \n    Use when:\n    \n      you need to show trends over time or compare two datasets\n    \n  \n\n\n\n\n\n\n\n\nVideo card\n\n  \n    Use when:\n    \n      \n        you need to communicate an unfamiliar concept or idea, or explain a complex task\n      \n    \n  \n\n\n\n\n\n\n\n\nBlog card\n\n  \n    Use when:\n    \n      \n        you need to recommend a helpful Shopify blog post based on a merchant’s previous activity\n      \n    \n  \n\n  \n\n\n\n\n\n\nComparison card\n\n  \n    Use when:\n    \n      \n        you need to compare two data points\n      \n    \n  \n\n  \n\n\n\n\n\n\n\nContent\nIn general, home card content should follow this format:\n\nThe heading should clearly state the merchant benefit or primary data point. Keep headings to a single sentence fragment and don’t use punctuation at the end.\nBody content should explain the value or significance of the information in the heading, and provide next steps. Body content should be concise and no longer than two sentences.\nThe primary call-to-action should be clear, predictable, and actionable. A merchant should anticipate where the call-to-action button takes them. Call-to-action buttons are action-led (verb + noun format), and shouldn’t exceed 34 characters in length.\nA secondary call-to-action links to a Shopify Help Center article or a Shopify Blog post. Include a secondary action whenever educational content is available for the topic of the home card. The button content is always “Learn more”.\n\n\nVoice and tone\nA good home card prioritizes merchant needs over Shopify’s needs. Home cards are not advertisements, status updates, or error messages.\nThe tone changes depending on the context or situation of a card, but it should always be empathetic. For example, for a message about a negative situation, the tone should be considerate and encouraging, with a recommended action on how to fix it.\nPositive situation\n\n\nDo\nRecognize milestones that merchants might find significant.\nCongratulations on your 1st order \nSarah Rodriguez bought Rainbow Unicorn Plushie.\nPeople are subscribing to your mailing list \nYour mailing list lets you contact customers or visitors who have shown an interest in your store. Reach out to them with exclusive offers or updates about your products.\n\n\nDon’t\nDon’t downplay or over-exaggerate details.\nYou have received your 10th order. \nCongratulations! You’ve received 4 orders today! \nFulfill them from your Orders page!\n\n\nNeutral situation\n\n\nDo\nShare important information or insights about the merchant’s business.\nVisitors from these social sites are spending time in your store \nHere’s how many pages they viewed and how long they stayed.\n\n\nDon’t\nDon’t emphasize what Shopify can do for the merchant. Focus on the merchant benefit instead.\nUse Shopify Payments! \nWe make it easy to accept payments online and won’t charge you any transaction fees.\nShopify Capital is offering you up to $10,000 in funding \nIt’s easy to apply and it’ll help your business grow!\n\n\nNegative situation\n\n\nDo\nBe considerate with sensitive information and offer merchants solutions if something went wrong.\nSome of your visitors can’t find what they’re looking for \nYou might want to add product descriptions to help them out.\n\n\nDon’t\nDon’t blame the merchant or only offer impractical or costly solutions.\nYour shipping rates are high compared to similar stores \nSave money on shipping labels with Shopify Shipping.\nSales are down this week \nConsider creating a marketing campaign to promote your products.\n\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Page layouts",
      "keywords": [
        "layout",
        "page",
        "columns",
        "hierarchy",
        "spacing",
        "stack"
      ]
    },
    "intro": "Layout patterns provide common ways to arrange the content of a screen.",
    "content": "Layout\nLayout patterns provide common ways to arrange the content of a screen.\n\nStructure of a screen\nA screen is the entire user interface (UI) of an application at a given time.\nA typical Polaris screen consists of several layers. The app frame makes up the\nouter layer. Within that are the page component and a layout component.\nThe layout component arranges containers like cards and banners in a way that’s\nresponsive across all screen sizes.\nApp frame\n\n\n\n\n\n\n\nThe app frame is the outer UI of the application. It holds global features like\ntop-level navigation and search.\nPage component\n\n\n\n\n\n\n\nThe page component:\n\nActs as a container for the content of each specific page\nControls the horizontal margins of the content area\nHas a header containing the breadcrumb, page title, and page-level actions\n\nPage component variations:\n\nFull width. Use this for wide content like lists and tables.\nSingle-column. Use this narrow variant to focus the page on a single\ntransaction, like filling out a form.\n\nLayout component\n\n\n\n\n\n\n\nWithin the page, the layout component groups the\ncontent into sections. Sections control how the content flows into columns. Each\nsection can be:\n\nFull-width\nPrimary (2/3 width)\nSecondary (1/3 width)\nAnnotated\n\nArranging content in a layout\n\n\n\n\n\n\n\nPlace page-level banners in a full-width section\nat the top of the page.\nStack cards in sections to separate the screen’s\nmain content into meaningful groups.\nFor screens that represent an individual resource like a product or order, place\npage actions in a full-width section at\nthe bottom of the page.\nFor pages that don’t have footer actions, the\nfooter help component can offer a\nlink to documentation about the current screen.\nLayout in a card\n\n\n\n\n\n\n\nCards have a similar structure to the page as a\nwhole.\n\nCards often have a header, with a title and card-level actions on the right.\nCards can have footer actions.\nComplex cards can be split into sections. Card sections are automatically\nseparated with a divider.\nSections often have a subheader with a title on the left and section-level\nactions on the right.\n\nFor more details, including when to use header and footer actions, see the\ncard component.\n\nSpecialty screen types\nThe structure described above applies to most screens in the Shopify admin, but\nother types of screens exist.\nEmbedded Shopify apps, including sales channels, are contained within the\nnormal app frame. However, they display the page component differently.\n\n\n\n\n\n\n\nSell screens present opt-in features that require additional payment.\n\n\n\n\n\n\n\nImmersive editors are for complex, interactive editing tasks. Immersive\neditors often show a live preview of what’s being worked on with tools for\nmaking changes arranged around the edges.\n\n\n\n\n\n\n\n\nStandard page layouts\nThe following patterns describe common ways to arrange content within the app\nframe and below the page header.\nSingle column, wide\n\n\n\n\n\n\n\nUse this layout for wide list or table views that benefit from more horizontal\nspace.\n\nSet the page component to full width\nUse one or more basic layout sections\n\n&lt;Page fullWidth title=&quot;Single column wide layout&quot;&gt;\n  &lt;Layout&gt;\n    &lt;Layout.Section&gt;{/* Page-level banners */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section&gt;{/* Wide page content */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section&gt;{/* Page footer content */}&lt;/Layout.Section&gt;\n  &lt;/Layout&gt;\n&lt;/Page&gt;\n\nSingle column, narrow\n\n\n\n\n\n\n\nUse this layout to focus merchant attention on a screen dedicated to a single\ntask, like filling out a form.\n\nSet the page component to single column (narrow) mode\nUse one or more basic layout sections\n\n&lt;Page singleColumn title=&quot;Single column narrow layout&quot;&gt;\n  &lt;Layout&gt;\n    &lt;Layout.Section&gt;{/* Page-level banners */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section&gt;{/* Narrow page content */}&lt;/Layout.Section&gt;\n  &lt;/Layout&gt;\n&lt;/Page&gt;\n\nPrimary/secondary\nPrimary/secondary layouts split content into a main column and a secondary one.\nThe main column is usually on the left, but can be on the right.\nThe most common use of the primary/secondary layout is for showing the details\nfor an individual object, such as an order or product.\n\n\n\n\n\n\n\n\nSet the page component to its default width.\nPlace the most important content in a primary column.\nPlace other content in the secondary column. Content here should be\nnavigational, less frequently used, or not essential.\n\n&lt;Page title=&quot;Details page&quot;&gt;\n  &lt;Layout&gt;\n    &lt;Layout.Section&gt;{/* Page-level banners */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section&gt;{/* Primary content */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section secondary&gt;{/* Secondary content */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section&gt;{/* Page actions (delete and save) */}&lt;/Layout.Section&gt;\n  &lt;/Layout&gt;\n&lt;/Page&gt;\n\nAnother use of this layout is for a focused task where a summary is helpful,\nsuch as purchasing shipping labels for an order.\n\n\n\n\n\n\n\n\nSet the page component to its default width\nPlace the primary column on the left to hold the main UI\nPlace the secondary column on the right to hold the summary and call to action\n\n&lt;Page title=&quot;Task screen with summary&quot;&gt;\n  &lt;Layout&gt;\n    &lt;Layout.Section&gt;{/* UI to complete the task */}&lt;/Layout.Section&gt;\n    &lt;Layout.Section secondary&gt;\n      {/* Summary and call to action */}\n    &lt;/Layout.Section&gt;\n  &lt;/Layout&gt;\n&lt;/Page&gt;\n\nAnnotated\n\n\n\n\n\n\n\nAnnotated layouts group the content of the page into distinct sections that are\nonly loosely related. This layout makes it easier to scan the page for a\nparticular section.\nUse this layout for settings screens. Don’t use this layout when merchants\nneed to navigate to more than one section to complete their task.\n\nSet the page component to its default width.\nUse an annotated layout section for each independent topic on the page.\nAvoid combining annotated layouts with other layout types.\n\n&lt;Page title=&quot;Annotated layout&quot;&gt;\n  &lt;Layout&gt;\n    &lt;Layout.AnnotatedSection\n      title=&quot;Store details&quot;\n      description=&quot;Shopify and your customers will use this information to contact you.&quot;\n    &gt;\n      {/* Details fields */}\n    &lt;/Layout.AnnotatedSection&gt;\n    &lt;Layout.AnnotatedSection\n      title=&quot;Store address&quot;\n      description=&quot;This address will appear on your invoices.&quot;\n    &gt;\n      {/* Address fields */}\n    &lt;/Layout.AnnotatedSection&gt;\n  &lt;/Layout&gt;\n&lt;/Page&gt;\n\nCustom page layouts\nMost screens in the Shopify admin use one of these layouts, but they aren’t the\nonly ones you can use in Polaris. The following layouts are also possible:\n\nMulti-column list\nGrid of equals\nMasonry layout\n\nTo achieve these and other layouts, create one or more custom layout components.\nThink of layout components a set of “shelves” into which other components can be\nplaced.\n\nSmall-scale layout\nThe stack component is useful for small-scale\nlayout. It lets you arrange arbitrary components in a horizontal row or vertical\nstack. It’s also a useful component for applying\nstandard spacing.\n\n\n\n\n\n\n\nStacks work especially well for a row of components where one item needs to grow\nto fill the available space. When space becomes constrained, the content will\nwrap by default.\n\n\n\n\n\n\n\nCustom small-scale layouts\nYou’re more likely to need a custom small-scale layout than a custom page\nlayout. If the desired layout can’t be easily achieved using a single stack\ncomponent, create a custom layout.\nCustom small-scale layouts can often be done as part of a functional component,\nsuch as the timeline input shown here. It’s also possible to create dedicated\nsmall-scale layout components if the layout needs to be reusable.\n\n\n\n\n\n\n\n\nPlacing actions on screen\nOrganizing actions is as important as organizing content.\nIf an action applies to the entire page:\n\nPlace it in the page header as a primary or secondary action\nUse the page actions component for\npage-level delete and save actions\n\nIf an action applies to something more specific, place it at the level of the\ncontent it affects. For example, if an action applies to the contents of a card:\n\nUse card header actions for less important actions, or those that don’t\nbenefit from reviewing the contents of the card. For example, merchants may\nwant to add items to a card containing a long list.\nUse card footer actions for a card’s most important actions, or actions that\nbenefit from reviewing the contents of the card. For example, merchants\nshould review the contents of a shipment before cancelling or adding tracking\ninformation.\n\n\nCombining navigation with layout\nAlways consider the full range of screen sizes when designing layouts.\nIf a page has become complex, overloaded with content, or hard to navigate by\nscrolling on a phone, it can be broken up into a core page and secondary pages\naccessible via navigation.\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Loading",
      "slug": "loading",
      "keywords": [
        "page loading",
        "loading",
        "load",
        "performance",
        "web performance",
        "speed",
        "focus",
        "guidelines",
        "principles"
      ]
    },
    "intro": "Navigating the Shopify admin should be fast, meaningful, and focused, but unintentional loading can get in the way and break a merchant's flow. To deliver a continuous experience, we need to consider loading states when planning and prototyping.",
    "content": "Loading\nNavigating the Shopify admin should be fast, meaningful, and focused, but unintentional loading can get in the way and break a merchant&#39;s flow. To deliver a continuous experience, we need to consider loading states when planning and prototyping.\n\nJoin the conversation!\nDo you have ideas or feedback on how we can make these guidelines more empowering and useful? Please share your thoughts in the GitHub discussion.\n\nPrinciples\n\nMake it fast. Plan and prioritize the loading to make it as short as possible.\nMake good use of time. Give merchants useful structure and content.\nFocus on the job. Put merchants&#39; attention on what&#39;s important.\n\n\nMake it fast\nWe can speed up loading by planning how much data we load and when we load it. Figure out what content merchants will need first, and make it available as soon as possible.\nCache commonly needed data\nCaching data eliminates the loading time the next time it&#39;s needed. Consider caching data that is reused throughout an experience, such as the name and image of an item, and use that to show essential content while other content loads.\nPrefetch relevant data\nPrefetching data can save valuable loading time. Start prefetching when merchants show intent to need the data, such as when hovering over an interactive element.\nPrioritize viewport content\nThe content that is visible in the viewport is the content that merchants will likely need first. Make sure that such content isn&#39;t delayed by content that merchants won&#39;t need until after an interaction, such as scrolling or clicking a popover.\nLimit page content\nPages with a lot of content take longer to load. By limiting the page to meaningful content that merchants will need, we can speed up the loading and declutter the page. Use progressive disclosure to give merchants more content when they need it, and use pagination to limit long lists. Remember to prefetch the data so that it&#39;s readily available.\nMake good use of time\nMerchants use the Shopify admin to get work done. Showing the right context, real page structure, and meaningful content will keep them engaged and prepare them for what’s to come.\nSwitch to the next view quickly\nPeople expect to get the result of their interaction right away. When merchants navigate to a new page or view, it’s typically best to move toward that context immediately, rather than load first and switch later. Sometimes that means reverting to the previous view in case of errors, but it’s often a reasonable tradeoff when success is the most common outcome.\nUse highly accurate loading layouts\nThe page layout during loading should allow merchants to scan and understand the page structure. Matching layouts set clear expectations and make merchants proactive. Mismatched layouts confuse merchants and waste their time. Test skeleton content with different breakpoints and make sure both the content and the layout represents the final state.\nShow real content\nShowing static content, such as section labels, icons, text, and imagery, gives merchants a head start in understanding the page. A small thing like a labeled card can enable them to anticipate what they need almost immediately. It’s important that we make an effort to show as much real content as possible.\nShow active controls\nIdeally, controls are rendered active so merchants can take action before the page is done loading. For example, when a primary action like &quot;Add product&quot; is the same everywhere, then you could include it in the loading state.\nControls can often be rendered active even when the data behind it hasn’t finished loading. Many times it will be done by the time the merchant interacts with it, and if not, show that it needs to finish loading then. Render it inactive only if it mustn’t be interacted with, but use that as a last resort.\nGive hints with recognizable placeholders\nPlaceholders let merchants anticipate content type and location. Use placeholders for visually distinct elements, such as lists, images, controls, text, and data visualizations. This is the most important job skeleton content can do. Don’t use placeholders for content that could be rendered.\nAvoid details in the placeholder that may not appear. We don&#39;t want to draw attention to it and set false expectations.\nFocus on the job\nThe task and the content must always be the focus. Confusion and visual noise will distract merchants and waste their time.\nGive clear feedback on the interaction\nLoading is typically a consequence of merchants navigating to a new page or view. If it&#39;s unclear that their initializing interaction worked, then the experience will start with doubt and confusion.\nWhen the interaction feedback is clear, then the interaction is a thing of the past and they can make better use of their time. Make sure that the feedback is noticeable within 100 milliseconds and that it&#39;s clear what happened.\nShow real loading progress\nThe best way to inform people that the system is working is to show real progress. Real progress puts people’s attention on the content while providing something useful to work with.\nProgress within 1 second is perceived as natural and continuous, which keeps people engaged in the task. When actual progress can be shown within 1 second intervals, merchants typically don&#39;t need any other loading indicators.\nMake the layout visually stable\nIt&#39;s very important that the layout doesn&#39;t unexpectedly change during the loading process. Merchants will engage with visible content, and unexpected change can confuse or cause them to misclick. Pay attention to layout shifts throughout loading, find out what causes them, and make an effort to remove them. Sometimes we can wait to render some layout until it’s certain it will stay put. Learn more about layout shift and visual stability on web.dev.\nMinimize visual noise\nMerchants get distracted by things changing on the screen. Pay attention to anything that changes during loading. Categorize the change as signal or noise, and use the following tips to address it.\n\nRemove avoidable visual noise. For example, fix poorly matching placeholders or plan for unexpectedly appearing content.\nSubdue visual noise that is unavoidable. This includes using transitions to make state changes less sudden such as fading in an image that might render late. When an element’s size is unknown, such as a product index with a variable number of items, then it&#39;s typically better to add too many placeholder items than too few. It&#39;s less jarring when elements suddenly shrink than when they suddenly expand.\nEmphasize the visual change that matters. Animate items in a list or the most important information on the screen. Emphasizing important content will guide merchants&#39; attention to what they want, while also increasing tolerance for other visual changes.\n\nUse spinners when real progress isn&#39;t enough\nUse spinners when it’s not clear that the system is working, but only when it will improve the user experience. Excessive use of loading indicators isn’t informative. Rather, it can be overwhelming and make the system appear slow.\nAvoid using spinners as placeholders\nDefault to using more meaningful content where possible. If spinners are needed, place them where it’s easy for merchants to understand what is loading. This helps drawing attention to the content that is about to appear and not to the spinner itself.\nAvoid empty views with spinners\nIt&#39;s important to provide useful content during loading. Being in the right visual context, seeing progress, or getting a glimpse of what&#39;s ahead can go a long way. Empty views with spinners provide low value and cause merchants to become passive and disengage.\nBe honest about lengthy loading times\nPeople are likely to be frustrated and abandon their tasks if loading times exceed 10 seconds. In such cases, it&#39;s better to set clear expectations and empower merchants to make an informed decision to wait. Put their attention on the value ahead to increase the likelihood that they stay engaged in the task.\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Locations",
      "keywords": [
        "breakpoint",
        "locations",
        "location picker",
        "location list"
      ]
    },
    "intro": "The number of locations a merchant has can range dramatically, and the location experience should adapt to that number. Using progressive disclosure, we can introduce features as merchants need them.",
    "content": "Locations\nThe number of locations a merchant has can range dramatically, and the location experience should adapt to that number. Using progressive disclosure, we can introduce features as merchants need them.\n\nPrinciples\n\nLeverage shared foundations. By starting with available components and patterns, we keep design and development simple. Shared foundations also help guarantee familiar experiences for our merchants.\nUse progressive disclosure. This is at the core of designing location experiences. As merchants add locations, patterns should gradually offer more features. For example:\nA small number of locations (1–10) doesn’t need text search, sorting, and filtering.\nA larger number of locations (11 or more) requires patterns like text search, sorting, filtering, and pagination.\n\n\n\n\nFoundational patterns\nWhen building a location experience, leverage components and patterns that offer:\n\nEasy access to known complex data (text search by location name, address, city, and province)\nAccess to incomplete or unfamiliar data (filter contextual to the surface area)\nThe ability to organize and browse data (sort contextual to the surface area)\nPagination (load additional locations via infinite scrolling)\n\nSometimes existing solutions don’t fit your use case. They are a great place to start, but don’t be afraid to create a new solution for your merchant’s unique situation. If you do create something new, it’s important to document that solution and share it back to the system.\n\nProgressive disclosure\nProgressive disclosure means we introduce advanced features only when needed. This keeps things simple, and merchants get the right features at the right moment.\nTo scale the experience consistently, we want to establish specific points for introducing new functionality.\nWhile there are many ways to treat locations, two common patterns that use progressive disclosure are the location picker and the location list.\nLocation picker\nThe location picker allows a merchant to select any location they have added in the admin.\n\n1 location\nWhen a merchant only has one location, the button that opens the location picker should be hidden. There’s no need to access the experience when they can’t switch locations.\n\n2–10 locations\nWhen a merchant has 2–10 locations, show the button that accesses the location picker. The button always shows the current location.\nIn the location picker:\n\nMake “All locations” the default selected location.\nShow “All locations” at the top of the list.\nList all other locations in alphabetical order. Each location item shows the location name only.\n\n\n11 or more locations\nWhen a merchant has 11 or more locations:\n\nApply the same features as 2–10 locations.\nAdd text search at the top of the location picker. This allows merchants to search for locations by specific criteria (location name, city, province, postal code, address, etc.).\nDirectly below the search, show a section with the 3 most recently used locations. For new merchants, hide this section.\nShow a list of all other locations. As the merchant scrolls, load additional locations at the bottom of the list.\n\nLocation list\nThe location list allows merchants to view all locations they have added in the admin.\n\n1–10 locations\nWhen a merchant has 1–10 locations, show all locations in a simple list. As notated in the image above:\n\nEach list item should include the location name and address\nThe indicator at the bottom shows the total number of locations\n\n\n11 or more locations\nWhen a merchant has 11 or more locations:\n\nApply the same features as 1–10 locations\nShow text search, filters, and sorting at the top of the list\n\nNotated in the image above, location list functionality at this level includes:\n\nSearch. Allow merchants to find locations via specific criteria (location name, city, province, postal code, address, etc.).\nSort. This will be contextual to the use case (alphabetical sort, date created, date edited, etc.).\nFilter. This is also contextual to the use case. For example, merchants could filter by subscription type.\nPagination. Allow the merchant to load and view additional sets of locations. Trigger loading with a “Load more” button.\n\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Text fields",
      "keywords": [
        "text fields",
        "search",
        "placeholder text"
      ]
    },
    "intro": "Text fields are a combination of the field label (the title) and the input area. Inputs can be typed text, URLs, date pickers, and more.",
    "content": "Text fields\nText fields are a combination of the field label (the title) and the input area. Inputs can be typed text, URLs, date pickers, and more.\nText fields can be grouped in a form or placed individually in the UI. Placeholder text should generally be avoided in text fields. Help text can be used below the text input area to guide the user on acceptable inputs.\n\n\nField labels\n\n\n\nField labels act as a title for the text field. Labels should typically be short and in noun form. For example, “Name”.\n\n\n\n\n\n\n\n\n\nDo\n\n\n\nDon’t\n\n\n\nEdge case: When a text field isn’t part of a form and is placed individually on a page (like a comment field), then you can write the field label as a call to action. For example, “Leave a comment”. This is because there’s no surrounding context and using “Comment” alone could be confusing.\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nPlaceholder text\n\n\n\n\nIn general, avoid using placeholder text in text fields. It can pose a range of accessibility problems, like:\n\nLow color contrast, making the text hard to read\nInconsistent behavior between browsers and screen readers\nText disappearing when the user starts typing, which can be confusing to people with cognitive impairments\nLimited space available for additional context, due to field size\n\nException: Read the guidelines on search fields.\n\n\n\n\n\n\n\n\nHelp text\n\n\n\n\nHelp text provides extra guidance or instructions to people filling out a form field. It can also be used to clarify how the information will be used.\nUse help text:\n\nwhen the text field label doesn’t clearly explain the purpose of the text input\nto provide guidance or instructions on the type of information needed\nto show examples of the required format for modeled text inputs\n\nBest practices:\n\nAvoid repeating the field label. If the field label provides sufficient context for completing the action, then you likely don’t need to add help text.\nIf there’s not enough room to include both instructions and an example, then only include the example.\n\n\n\n\n\n\n\n\n\n\nDo\n\n\n\nDon’t\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nText input types\nThere are three types of text inputs:\nModeled text inputs\n\n\n\nThese are fields that require a specific format to be valid. They’re often used for tags, dates, and some tracking numbers. Modeled text is highly structured, so providing examples is useful. Read more\n\n\n\n\n\n\n\nFree text inputs\n\n\n\nThese are fields that accept short strings of text. They’re often used for SKUs, barcodes, and titles. Only provide example text if you know how the text should be structured, such as a tracking number or discount code. Read more\n\n\n\n\n\n\n\nMultiline text inputs\n\n\n\nThese are fields that are rendered as multiline textarea elements, as well as text input elements that accept long strings of text. They’re often used for product descriptions, order comments, and customer notes. Users can write whatever they want, so providing example text is less useful. Read more\n\n\n\n\n\n\n\n\nModeled text inputs\nModeled text inputs are text field inputs that require text to be formatted in a specific way. For instance, tags need to be separated by commas, and dates need to be typed in YYYY-MM-DD format. Because modeled text inputs require a particular structure, always include examples that demonstrate how the user should enter the information.\n\nUse help text to include an instructional call to action and an example that shows the required text format\nIf there’s not enough room to include both an instructional call to action and an example, then include only the example\nUse the word “Example” followed by a colon to introduce the example (instead of e.g.)\n\n\n\nDo\n\n\n\nDon’t\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nFree text inputs\nFree text inputs accept a single string of text, without any particular structure. Use the field label to clearly indicate what should go in the text field.\nDon’t provide an example for free text inputs. The text doesn’t follow a specific format, and we shouldn’t assume what belongs in the field. If more context is needed, use help text.\nAvoid redundancy\n\n\n\nIf a text field label has a call to action, there&#39;s no need to repeat it in the help text. Instead, add a sentence that provides extra context.\nFor example, when a free text input is located independent of a form and has no surrounding context, you can make the field label a call to action.\n\n\n\n\n\n\n\nPoint in the right direction\n\n\n\nIf the text field label isn’t clear about where the user can find the information, use help text to guide them.\n\n\n\n\n\n\n\n\nTitles, names, and descriptions\nDon’t use placeholder text for free input titles, names, and descriptions; use help text instead.\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nCodes and tracking numbers\nDon’t use placeholder text for codes or tracking numbers; use help text instead. If the code follows a standardized format, include an example, using the same format as help text for modeled content. If not, omit the example since the field’s contents can vary.\nChoose clear names for the field label, and don’t repeat it in the help text if possible. Instead, offer context that will help the user understand and complete the task quickly.\n\n\nDo\n\n\n\nDon’t\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nMultiline text inputs\nMultiline fields let merchants type long blocks of text. There are a few different versions:\n\nPlain textarea elements with no formatting options\nFormatted textarea elements with what-you-see-is-what-you-get (WYSIWYG) menus\nPlain text input elements that accept long strings of text\nPlain text input elements that accept long strings of text and expand as the user types\n\nMultiline inputs hold things like product and collection descriptions, notes about an order that only store staff can access, notes that the customer can access, and anything else the merchant wants to type into them.\nWe usually don’t know what will go in multiline fields, so providing example text isn’t helpful. Instead, include help text that explains how the text will be used and who can view it.\n\n\nDo\n\n\n\nDon’t\n\n\n\nComments and notes\nDon’t use placeholder text for comments and notes; use help text instead. Comments and notes help merchants keep track of unstructured information they may need about an order or a buyer.\nSome comments and notes are not visible to customers, but some are. In the help text, describe clearly who will be able to view the note.\n\n\nDo\n\n\n\nDon’t\n\n\n\nDo\n\n\n\nDon’t\n\n\n\n\nSearch and email fields\n\n\n\nFor standard text fields, avoid placeholder text. However, regular or floating placeholder text can be used for:\n\nSearch fields\nFilter fields\nEmail entry fields\n\nPlaceholder text is a common, recognizable pattern for these field types. Moving the placeholder text outside of the text field box may seem out of place and negatively impact the visual design of some marketing pages.\n\n\n\n\n\n\n\n\n\n\nTo make search, filter, and email entry fields more accessible, always move the placeholder text above the cursor while the field is in focus. This lets the user read the placeholder text as soon as they select the field.\n\n\n\n\n\n\n\n\nMinimalist page design and placeholders\n\n\n\nThere are some cases where help text clutters a page. For example, the minimalist design of pages like the admin login page would be significantly changed by adding another line of text.\nAs with standard placeholder text, the placeholder should float above the text entry once the field has been selected. It’s not easy for everyone to read the small print of the floating text, so use this method sparingly.\n\n\n\n\n\n\n",
    "category": "patterns"
  }
]