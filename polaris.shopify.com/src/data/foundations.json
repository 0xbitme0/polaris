[
  {
    "frontMatter": {
      "name": "Accessible and inclusive language",
      "keywords": [
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "word list",
        "language",
        "race",
        "racial",
        "racist",
        "racism",
        "a11y",
        "accessible",
        "accessibility",
        "disability",
        "ableist",
        "ableism",
        "gender",
        "gendered",
        "ungendered",
        "gender binary",
        "sex",
        "gender identity",
        "gender-neutral",
        "pronoun",
        "inclusive content"
      ]
    },
    "intro": "Our mission is to make commerce better for _everyone_. Building products for everyone means creating inclusive content.",
    "content": "\n\n# Accessible and inclusive language\n\nOur mission is to make commerce better for _everyone_. Building products for everyone means creating inclusive content.\n\nThe words we use have power. Writing for everyone, everywhere means that we don’t exclude or harm any of our merchants, even if these words have been normalized.\n\nWrite for more than one perspective, and limit assumptions or biases. For example, don’t assume that your audience is white, has a binary gender, or is nondisabled. Keep in mind that our merchants have intersectional identities, which means they can be from more than one historically-excluded group.\n\nTry to write what you mean without metaphors so your content is easy to understand and localize. If you can’t think of an alternate term, then find another way to write what you want to say.\n\nTest your content with a diverse audience by recruiting merchants from a variety of backgrounds, including historically-excluded groups, and create intersectionality-informed research objectives. Building inclusive experiences starts with involving diverse perspectives early on in the process.\n\n---\n\n## Accessible content\n\nUsing anti-ableist language is just one part of making accessible content at Shopify. Ableist language is content that holds bias towards the nondisabled experience, or discriminates against the disabled community.\n\nAbleism can show up in language directly, as well as in metaphors and euphemisms. For example, “don’t let your marketing efforts fall on deaf ears”. Write what you mean, instead of using analogies, metaphors, or euphemisms.\n\nWrite content that centers around the person, not their disability.\n\n### Words and phrases to avoid\n\nAvoid the following words and phrases.\n\n#### Inspire, inspirational\n\nThis language and narrative around people with disabilities can be othering and reductive. It can also center an abled perception of those with disabilities (For example, “my life’s not that bad, look at them!”).\n\n#### Enable, disable\n\nImplies that disability is a less-desired or negative state.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAccounts are deactivated.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAccounts are disabled.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Turned on, turned off\n- Active, inactive\n- Activate, deactivate\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Enable, enabled\n- Disable, disabled\n\n</div></div>\n\n_Note: Because `disabled` is a valid state for HTML elements, usage of “disabled” is appropriate when talking about specific element states, just not overall feature functionality._\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nThe checkbox is disabled.\n\n</div></div>\n\n#### Normal, abnormal\n\nThis language can imply that there’s something wrong with anyone outside of the majority.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Typical\n- Atypical\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Normal\n- Abnormal\n\n</div></div>\n\n#### Deaf\n\nThis language is often used to equate deafness or hearing impairment with ignorance or insensitivity, rather than refer to deafness itself or the Deaf community. Make sure to only use it when referencing actual deafness or the Deaf community, and not as a metaphor.\n\n#### Blind\n\nAs a metaphor, this can equate lack of vision to ignorance. Only use the term when referencing the disability itself.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Unaware\n- Gap\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Blind\n- Blind spot\n\n</div></div>\n\n#### Insane, crazy\n\nThis language can stigmatize people with mental disabilities by using these words as modifiers for “unbelievable” or in a negative context.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Wild\n- Unbelievable\n- Outrageous\n- Intense\n- Silly\n- Strange\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Insane\n- Crazy\n\n</div></div>\n\n#### Handicap, handicapped\n\nHandicap implies that the person is the issue, rather than the environment.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Disability\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Handicap\n- Handicapped\n\n</div></div>\n\n#### Wheelchair-bound\n\nThis term can reduce a person’s primary identity to using a wheelchair.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Person who uses a wheelchair\n- Person who uses an accessibility device\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Wheelchair-bound\n\n</div></div>\n\n#### Suffers from...\n\nThis phrasing implies that having a disability equates to suffering.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Experiences vision impairment\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Suffers from vision impairment\n\n</div></div>\n\n#### Just, only\n\nWhen we write a task is “only a few steps”, or this should “just take a minute”, it implies the task is easy, quick, or takes a minimal amount of effort. This can discourage people who might struggle with the task, or might take extra time to complete it.\n\n---\n\n## Anti-racist content\n\nRacist language expresses bias towards or against a particular race, or expresses the belief that some races are inferior to others. Always prioritize our merchants, partners, and buyers experience over perceived barriers to using anti-racist language.\n\n**Tips:**\n\n- Treat non-white or non-Western perspectives the same as white and Western perspectives. Non-Western ideals aren’t “exotic” or “strange”.\n- Write what you mean instead of using an analogy or a metaphor. If you need a metaphor, then don’t use one that denotes “black” or “dark” as bad or negative, versus “white” or “light” as good or positive.\n- Use terms in an appropriate context.\n  - For example, while we typically avoid the use of the term “powwow”, in the following context, it’s appropriate: “Bear Witness is a co-founder of A Tribe Called Red, a Canadian DJ collective that blends hip-hop and EDM with traditional powwow drums and vocals” (from [Vanguard: How A Tribe Called Red Brought Activism to the Dance Floor](https://www.shopify.com/blog/vanguard-a-tribe-called-red)).\n\n<br>\n\n### Words and phrases to avoid\n\nAvoid the following words and phrases.\n\n#### Exotic\n\nConsider why you need to frame someone or something this way. What is “foreign” or “exotic” to you is familiar for someone else.\n\n#### Grandfather in, grandfather clause\n\nThese phrases come from laws meant to circumvent or disenfranchise Black people’s rights. These laws, or “grandfather clauses” originated in the Reconstruction era in the American South.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Legacy, legacied\n- Exempt\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Grandfather in, grandfathered in\n- Grandfather clause\n\n</div></div>\n\n#### Powwow\n\nA powwow is a celebration of heritage, art, and community held by Indigenous people, and should only be used to refer to actual powwows. Use other terms to refer to meetings and events that aren’t powwows.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Meet, meeting\n- Gather, get together\n- Assemble, assembly\n- Regroup\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Powwow\n\n</div></div>\n\n#### Spirit animal\n\nIndigenous communities use spirit animals as totems and guides. A spirit animal has deep spiritual and cultural meaning, and should only be used in that context. Don’t say spirit animal to mean the animal a non-Indigenous person might identify with the most.\n\n#### Black hat, white hat (hacking)\n\nThese terms imply that “white is good” and “black is bad”.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Unethical hacking\n- Ethical hacking\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Black hat\n- White hat\n\n</div></div>\n\n#### Blacklist, whitelist\n\nThese terms enforce the “white is good” and “black is bad” paradigm.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Denylist, blocklist\n- Allowlist\n- Permit, permitted\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Blacklist\n- Whitelist\n- Graylist\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLearn how to secure a compromised account and reset blocked credentials.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nLearn how to secure a compromised account and reset blacklisted credentials.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAdd no-reply[at]shopify.com to your email provider’s allowlist.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAdd no-reply[at]shopify.com to your email provider’s whitelist.\n\n</div></div>\n\n#### Cakewalk\n\nThis term originates from a dance contest where enslaved Black people competed for cake.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nYou can easily file your your taxes with our latest features.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nIt’s a cakewalk to file your taxes with our latest features.\n\n</div></div>\n\n#### Whitespace\n\nThis term refers to communities and places that are predominantly white and that might make non-white people feel restricted or isolated. Avoid using this term except when referring to the named property in CSS.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- New market opportunity/new market space\n- Unmet need/unexplored opportunity\n- Emptyspace\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Whitespace\n\n</div></div>\n\n#### Long time no see\n\nThis phrase was used to stereotype Indigenous peoples as unintelligent, and shouldn’t be used due to its racist origins.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIt’s been a while\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nLong time no see\n\n</div></div>\n\n#### Low-hanging fruit\n\nThis metaphor refers to the lynching of Black people, and shouldn’t be used.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Prepare to launch your store by adding a new product.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Take care of low-hanging fruit on your task list by adding a new product.\n\n</div></div>\n\n---\n\n## Ungendered content\n\nGendered language is language biased towards a particular sex or gender. Language that relies on stereotypes, or makes broad assumptions about its audiences’ sex or gender identities is likely gendered.\n\nUngendered content doesn’t mean avoiding gendered terms—it means being intentional about how you use gendered terms.\n\n**Tips:**\n\n- When a subject is unknown, use “they”, “you”, or “we”.\n- Be conscious of perpetuating stereotypes, like assuming that a merchant might only have a “men’s collection” or a “women’s collection”.\n- Avoid asking for pronouns or gender unless they’re required (or offered).\n- Don’t associate specific qualities with a specific gender, like linking positions of power with men. For example, judge, doctor, lawyer.\n\nAt Shopify, we believe ungendered language expands and improves the ways we talk—it makes us more accurate, more precise, and more inclusive.\n\n### Internationalization\n\nMany languages lack gender-inclusive options, like the pronoun “they” in English. Try to avoid gendered language whenever possible by writing what you want to say in a different way, even if it’s longer. If gender-neutral language isn’t possible, then choose the expression that’s most understandable.\n\nWhen possible, don’t use gendered pronouns. Use the “you” pronoun instead of the third person “she/he”. Find alternatives to gendered adjectives, like indefinite adjectives, substantives, or objects.\n\n### Words and phrases to avoid\n\nAvoid the following words and phrases.\n\n#### Female or male adapter or female or male connector\n\nThese terms reinforce the idea that gender is binary.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Socket\n- Input\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Female adaptor\n- Female connector\n\n</div></div>\n\n#### Businessman\n\nThis term can exclude people who aren’t men and reinforce the idea that positions of power are only for men. Use a word that’s gender-neutral and inclusive of all people.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Businessperson\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Businessman\n\n</div></div>\n\n#### Manned\n\nThis term excludes people who aren’t men. Use a word that’s gender-neutral and inclusive of all people.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Staffed\n- Managed\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Manned\n\n</div></div>\n\n#### Man-made\n\nThis word can exclude people who aren’t men. Use a word that’s gender-neutral and inclusive of all people.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Artificial\n- Synthetic\n- Manufactured\n- Fabricated\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Man-made\n\n</div></div>\n\n#### Manpower\n\nThis word can also exclude people who aren’t men.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Workforce\n- Labor force\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Manpower\n\n</div></div>\n\n#### Man, woman\n\nThese terms assume a binary gender which might not be the case. Consider how you use these terms and if they’re necessary in that particular context. If you’re listing genders, make sure to include all genders.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Person\n- Individual\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Man\n- Woman\n\n</div></div>\n\n#### He/him/his, she/her/hers\n\nThese terms assume a binary gender which might not be the case. Consider how you use these terms and if they’re necessary in that particular context.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- They/them/theirs\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- He/him/his\n- She/her/hers\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Actionable language",
      "keywords": [
        "button content",
        "button copy",
        "button terminology",
        "writing for buttons",
        "link content",
        "link copy",
        "link terminology",
        "writing for links",
        "action words",
        "calls to action",
        "calls-to-action",
        "CTA",
        "verbs",
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "save",
        "done",
        "ok",
        "okay",
        "o.k.",
        "accept",
        "close",
        "select",
        "choose",
        "edit",
        "manage",
        "change",
        "switch",
        "create",
        "add",
        "view",
        "see",
        "need",
        "must",
        "export",
        "download",
        "import",
        "upload",
        "confirmation modals",
        "disruptive",
        "delete",
        "deletions",
        "cancel",
        "leave page",
        "stay",
        "discard",
        "dangerous actions",
        "risky actions",
        "irreversible actions",
        "confirmation alerts",
        "warnings",
        "confirmation messaging",
        "headings",
        "subheadings",
        "titles",
        "directional language",
        "directionality",
        "above",
        "below",
        "right",
        "left",
        "up",
        "down"
      ]
    },
    "intro": "Merchants use Shopify to get things done. Content should be written and structured to help them understand and take the most important actions.",
    "content": "\n\n# Actionable language\n\nMerchants use Shopify to get things done. Content should be written and structured to help them understand and take the most important actions.\n\n---\n\n## Headings and subheadings\n\nHeadings and subheadings are titles and subtitles that refer to sections of the interface.\n\n### Basic structure\n\nHeadings and subheadings should be:\n\n**Informative and descriptive:**\n\n- Highlight the most important concept or piece of information for merchants\n- Help merchants understand what they’ll find in the section below\n\n**Concise and scannable:**\n\n- Use simple, clear language\n- Keep headings to a single sentence\n- Avoid using punctuation such as periods, commas, or semicolons\n- Write in sentence case (capitalize the first word and proper nouns only)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Online store dashboard\n- Custom reports\n- Sell your products in person\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- This is your online store dashboard\n- Custom Reports\n- Sell your products in person!\n\n</div></div>\n\n### Articles\n\nWhether or not to use articles (“the,” “a,” “an”) in headings and subheadings depends on the type of message.\n\n#### Conversational headings\n\nFor more conversational areas of the product, like Home cards, sell pages, and empty states, use articles. It makes the language more approachable and helps people to understand new, complex concepts.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Secure your account with two-step authentication\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Two-step authentication\n\n</div></div>\n\n#### Microcopy headings\n\nFor labels, titles, and microcopy, avoid articles to keep content short and actionable. This increases readability and encourages immediate action.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Create collection\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Create a collection\n\n</div></div>\n\n---\n\n## Sentences\n\nStart sentences with imperative verbs when telling merchants what actions they can take (especially when introducing something new).\n\nWhen a merchant reads a sentence that starts with an imperative verb it should sound like they’re being instructed what to do. Don’t use permissive language like “you can.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAdd your first product and see how it looks in your store.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Products appear in your store after you add them.\n\n- Add your first product so you can see how it looks in your store.\n\n</div></div>\n\n---\n\n## Buttons\n\n<!--- keywords: buttons, button copy, button text, button content, links, actions, calls to action, call to actions, action-led, action led, scannable, articles, choose , select, choose vs select, select vs choose, need, must, need vs must, must vs need -->\n\nButtons need to be clear and predictable. Merchants should be able to anticipate what will happen when they select a button. Never mislead someone by mislabeling a button.\n\nButtons should always lead with a strong verb that encourages action. To provide enough context to merchants, use the {verb} + {noun} content formula on buttons except in the case of common actions like “Done,” “Close,” “Cancel,” or “OK.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Activate Apple Pay\n- Explore free themes\n- View shipping settings\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Try Apple Pay\n- Free themes\n- Settings\n\n</div></div>\n\nAlways write button text in sentence case, which means the first word is capitalized and the rest are lowercase (unless a term is a proper noun).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Buy new domain\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Buy New Domain\n\n</div></div>\n\nAvoid unnecessary words and articles such as “the,” “an,” or “a.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAdd menu item\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAdd a menu item\n\n</div></div>\n\n---\n\n## Links\n\nLinks need to be clear and predictable. Merchants should be able to anticipate what will happen when they select a link. Never mislead someone by mislabeling a link.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Get started with the\n  [Ultimate Guide to Dropshipping](https://www.shopify.com/guides/dropshipping).\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Want to learn more about dropshipping?\n  [Click here](https://www.youtube.com/watch?v=dQw4w9WgXcQ).\n\n</div></div>\n\nLinks should never use “click here” or “here” as link text.\n\n### Links in a sentence\n\nLinks in full sentences shouldn’t link the entire sentence, only the text that describes where merchants go when they select the link.\n\nIt’s better for [internationalization](/foundations/internationalization) to have only single terms or small parts of phrases linked. Linking a full phrase is problematic because the word order might change, which would break the link into two parts.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Learn more about [Fraud Protect](https://www.shopify.com/fraud-protect).\n- Manage the [channels](/) you use to sell products and services.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- [Learn more about Fraud Protect](https://www.youtube.com/watch?v=dQw4w9WgXcQ).\n- [Manage the channels](/) you use to sell products and services.\n\n</div></div>\n\n### Links outside of a sentence\n\nLinks that aren’t in full sentences should use the {verb + noun} pattern and not be punctuated, with the exception of question marks.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- [Learn more](/)\n- [Forgot password?](/)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- [Learn more.](https://www.youtube.com/watch?v=dQw4w9WgXcQ)\n- [Forgot password](/)\n\n</div></div>\n\n---\n\n## Confirmations\n\nConfirmations are presented for actions that can’t be undone or are difficult to undo.\n\nConfirmation messages should:\n\n- Always give merchants the option to either confirm or cancel their action\n- Be used for a single, primary task\n- Keep body content to one line of text and not use more than two calls to action\n\nConfirmation titles should:\n\n- Ask if merchants want to continue, using a concise {verb}+{noun} question\n- Be one sentence and avoid using punctuation, with the exception of question marks\n- Avoid articles (the, a, an) to keep content short and actionable\n- Be written in sentence case (the first word is capitalized, and the rest is lowercase)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Discard unsaved changes?\n- Delete 2 collections?\n- Delete Dark Blue Tee?\n- Leave page with unsaved changes?\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Discard?\n- Are you sure you want to delete?\n- Are you sure you want to delete Dark Blue Tee?\n- This page has unsaved changes are you sure you want to leave?\n\n</div></div>\n\nConfirmation body content should:\n\n- Clearly explain if the action is irreversible or difficult to undo, using [plain language](https://polaris.shopify.com/content/product-content#write-for-a-grade-7-reading-level).\n- Be concise: use only one line of text. Don’t start the sentence with “Are you sure?”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- This can’t be undone.\n- This will delete all edits since you last saved.\n- Leaving this page will delete all unsaved changes.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Are you sure you want to delete the variant Dark Blue Tee/Small/Silk? This action cannot be reversed.\n- If you discard changes, you’ll delete any edits you made since you last saved.\n- If you leave this page, all unsaved changes will be lost. Are you sure you want to leave this page?\n\n</div></div>\n\nConfirmation primary and secondary actions should:\n\n- Be clear and predictable: merchants should be able to anticipate what will happen when they click a button\n- Scannable: avoid unnecessary words and articles such as “the,” “an,” or “a”\n\nSince confirmation messages are placed in modals, the call to action in the title is in close context to the buttons. Because of this, the call to action text on the buttons doesn’t have to follow the {verb}+{noun} pattern. Instead, one word calls to action can be used, for example, [Cancel] \\[Delete].\n\n**Deletions**\n\nBefore merchants can delete objects like collections, transfers, products, and variants, we present them with a confirmation message that has two calls to action, one to [Cancel] and one to [Delete]. We keep it short and don’t use {verb}+{noun} button copy.\n\nPrimary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Delete\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Remove\n- Erase\n- Discard\n\n</div></div>\n\nSecondary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Cancel\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Discard\n\n</div></div>\n\n**Discarding changes while on a page**\n\nPrimary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Discard\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Cancel\n\n</div></div>\n\nSecondary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Keep editing\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Go back\n- Cancel\n\n</div></div>\n\n**Leaving a page with unsaved changes**\n\nPrimary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Leave page\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Exit\n- Delete changes\n\n</div></div>\n\nSecondary action:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Stay\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Go back\n- Cancel\n- Discard\n- Keep editing\n\n</div></div>\n\n---\n\n## Directional language\n\nIn the same way that links should never say “click here,” avoid using directional language such as “above/below” or “right/left.”\n\nDirectional language is confusing and unhelpful when spoken aloud by a screen reader. It creates challenges for internationalization (for example, right to left languages) and can conflict with mobile design patterns.\n\nDirectional language often indicates a lack of visual or content hierarchy. Whenever possible, keep instructional copy and related actions close together so that directional language isn’t needed.\n\n---\n\n## Save vs. done\n\nUse “Save” when a change is saved immediately to a database and “Done” for [deferred saves](#deferred-saves).\n\n### Saving immediately to a database\n\nUse “Save” as the default for any action that saves immediately to a database.\n\n#### Saving using the context bar component\n\nWhen merchants make changes on a page they’re sometimes presented with a context bar at the top. This context bar displays a status message on the left to indicate the state of the changes, like “Unsaved discount.” Since the status message provides context around the action being taken, the button doesn’t need to follow the common {verb} + {noun} content formula. For example, [Save] instead of [Save product]. In the context bar component, use the verb “Save”.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse the verb “Save” in the context bar\n\n![web context bar](/images/foundations/content/actionable-language/web-context-bar@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Done\n- Apply\n- Save discount\n\n</div></div>\n\nStatus messages in the context bar should be descriptive and follow the {adjective} + {noun} content formula.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Unsaved discount\n- Unsaved product\n- Unsaved customer\n- Unsaved shipping zone\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Unsaved changes\n\n</div></div>\n\n#### Saving in modals and sheets\n\nUse the verb “Save” in modals and sheets when saving directly to the database.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse the verb “Save” in modals and sheets\n\n![web save modal in edit state](/images/foundations/content/actionable-language/web-edit-save@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Edit\n- Done\n- Apply\n\n</div></div>\n\n#### Saving at the bottom of a page\n\nUse the {Save} + {noun} content formula when a save action doesn’t have the surrounding context of a modal or context bar. This applies to the save action at the bottom of pages.\n\nFor example, the action at the bottom of the Create discount page uses [Save discount]:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![web save page action](/images/foundations/content/actionable-language/web-page-actions@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Create discount\n- Save\n- Done\n- Apply\n\n</div></div>\n\n### Deferred saves\n\nSometimes, when merchants confirm a set of changes inside a modal or sheet, these changes are applied as unsaved changes to the current page. In other words, the changes made weren’t immediately saved to the database. When this happens, don’t use the verb “Save” as the call to action because it would be misleading.\n\nUse the adjective “Done” for deferred saves. When the modal or sheet closes, then merchants can save all of the changes they made.\n\nMost deferred saves happen when confirming changes in Add, Edit, Manage, and Select modals and sheets.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![deferred save modal with done button](/images/foundations/content/actionable-language/add-done@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add\n- Edit\n- Manage\n- Select\n- Apply\n- Save\n\n</div></div>\n\n### Datepickers\n\nUse the adjective “Done” for datepickers.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![datepicker with done button](/images/foundations/content/actionable-language/datepicker@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Apply\n- Select\n- Save\n\n</div></div>\n\n---\n\n## OK vs. accept\n\nUse the adjective “OK” when merchants need to confirm they’ve read something, but aren’t required to legally accept terms of service before continuing. For example, use “OK” when presenting a security notification in a modal or sheet.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![modal with okay button spelled with capitalized letter O and K, no punctuation](/images/foundations/content/actionable-language/ok@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Ok\n- O.k.\n- Okay\n- Done\n- Accept\n- Continue\n\n</div></div>\n\nUse the adjective “Accept” when terms of service require legal confirmation before merchants can continue.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAccept\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Ok\n- Done\n- Continue\n\n</div></div>\n\n---\n\n## Close vs. cancel\n\nUse the back arrow button as the call to action for modals and screens when:\n\n- the content is in a view-only state\n\nDon’t use “Close” as the call to action when there’s the option for merchants to:\n\n- make any changes to the modal or screen\n- confirm they’ve read something or accept terms of service (see [OK vs. accept](#OK-accept))\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![web modal with close button](/images/foundations/content/actionable-language/web-close@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Cancel\n- Exit\n- OK\n\n</div></div>\n\nUse “Cancel” as the option for merchants to back out of any changes made on a page, modal, or sheet. When the cancel button is pressed, changes automatically get discarded. “Cancel” is often paired with “Save” and “Done” actions (and is always placed to the left).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse the verb “Cancel” as the action for merchants to back out of changes\n\n![web save modal in edit state](/images/foundations/content/actionable-language/web-edit-save@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Exit\n- Close\n- Done\n\n</div></div>\n\n---\n\n## Select vs. choose\n\nUse the verb “select”:\n\n- When telling merchants to pick something from a limited number of options of the same kind\n- When merchants need to make an easy or obvious decision that doesn’t require deep reflection or analysis\n- For defined lists and dropdown menus\n- When merchants are given the option to pick from a list of already existing objects, like products\n\nPair Select modals and screens with the “Done” call to action.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Select your country of residence\n- Select image\n- Select countries\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Select a pricing plan.\n- Choose countries\n\n</div></div>\n\nUse the verb “choose” when:\n\n- Encouraging merchants to make a decision that is more subjective, strategic, emotional, or open-ended\n- Merchants have to pick from a large inventory of items, like themes, or options that require strategic decision making, like pricing plans\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Choose a theme\n- Choose a pricing plan.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Select a theme\n- Select a pricing plan\n- Choose a province.\n- Pick a province.\n- Pick a pricing plan.\n\n</div></div>\n\n---\n\n## Edit vs. manage\n\nUse the verb “edit” when you can change the input of a field (letters, numbers, properties). Place as link text next to the field or area that is being edited. There’s no need for a noun unless it’s unclear what’s being edited.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- In this example, “Edit” is the correct call to action because it opens a modal where merchants update customer contact information ![modal where merchants can edit contact information](/images/foundations/content/actionable-language/edit-do@2x.png)\n  Here are the editing actions that become available after the “Edit” button is selected ![modal where merchants can edit customer information](/images/foundations/content/actionable-language/edit-do2@2x.png)\n- Edit an individual blog post\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Use “Edit” if multiple actions can be taken after. “Manage” is more suitable.\n- Modify\n\n</div></div>\n\nUse the verb “manage” at a higher level to convey that multiple actions can be done, or sections and settings can be updated. Pair this verb with a noun if it’s in a button or if it’s unclear what is being managed.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- In this example, “Manage” is the correct call to action because it opens a modal where merchants can select channels to display their products ![manage button on the product page in the product availability section](/images/foundations/content/actionable-language/manage-do@2x.png)\n  Here are the options that become available after the “Manage” button is selected ![modal where merchants can select sales channels](/images/foundations/content/actionable-language/manage-do2@2x.png)\n- Manage multiple blog posts and comments\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Edit\n- Modify\n\n</div></div>\n\n---\n\n## Change vs. switch\n\nUse the verb “change” when merchants can replace an option, but not edit it. For example, they can change an image or theme, but the action doesn’t include editing its properties. Place as link text next to the field or area that is being changed. There’s no need for a noun unless it’s unclear what is being changed.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Change image ![change button at the bottom of the image display on the slideshow page of the theme editor](/images/foundations/content/actionable-language/change-do@2x.png)\n  Here are the options that become available after the “Change” button is selected ![images library with an upload drop zone](/images/foundations/content/actionable-language/change-do2@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Use the verb “change” if a selection must be made between only two options\n\n</div></div>\n\nUse the verb “switch” when it’s important for merchants to know what they’re switching between, like users, accounts, locations, or modes. When the switch happens, the previous option is turned off, logged out, or deactivated. Always pair with a noun to prevent confusion.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- ![Title that says, switch from your third party provider to shopify payments, with a card below that says, payment processing rate of 2.4% plus 0.25 euros”](/images/foundations/content/actionable-language/switch-do@2x.png)\n- ![Modal that says, switch locations to ‘new space’? You will only be able to sell inventory set to this location. Tax rates may also change. At the bottom there are two buttons. One says, cancel and one says, switch.](/images/foundations/content/actionable-language/switch-do2@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Switch images\n\n</div></div>\n\n---\n\n## Create vs. add\n\nUse the verb “create” when you’re encouraging merchants to generate something from scratch, like a collection.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Create order\n- Create collection\n- Create discount\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add order\n- Add collection\n- Add discount\n\n</div></div>\n\nUse the verb “add” when you’re encouraging merchants to bring something that already exists into Shopify, like a product.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add product\n- Add customer\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Create product\n- Create customer\n\n</div></div>\n\n---\n\n## View vs. see\n\nUse the verb “view” when you’re encouraging merchants to go to a specific page or section for more details, or to reveal more information. Use “view” in buttons, calls to action, and link text.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- View invoices\n- View all {x}\n- View details\n- View report\n- Try clearing your filters to view all results.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- See invoices\n- See all {x}\n- See details\n- See report\n\n</div></div>\n\nUse the verb “see” in more general, conversational descriptions without a specific call to action.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add your first product and see how it looks on your store.\n- Customers will see this name at checkout.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add your first product and view how it looks on your store.\n- Customers will view this name at checkout.\n\n</div></div>\n\n---\n\n## Need vs. must\n\nUse the verb “need” when you’re telling merchants something they’re required to do or should do.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nTo buy a shipping label, you need to enter the total weight of your shipment, including packaging.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nTo buy a shipping label, you must enter the total weight of your shipment, including packaging.\n\n</div></div>\n\n---\n\n## Export vs. download\n\nUse “export” as the call to action when merchants needs to transfer data from Shopify and convert it into a different format.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Export CSV file\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Download CSV file\n\n</div></div>\n\nUse “download” as the call to action when merchants need to copy data (of the same format) from Shopify to a computer system.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Download shipping label\n- Download PDF\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Export shipping label\n- Export PDF\n\n</div></div>\n\n---\n\n## Import vs. upload\n\nUse “import” as the call to action when merchants need to transfer data and convert it into a different format so it can be used in Shopify.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Import CSV file\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Download CSV file\n\n</div></div>\n\nUse “upload” as the call to action when merchants need to copy data of the same format from a computer system into Shopify.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Upload image\n- Upload file\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Upload CSV file\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Alternative text",
      "keywords": [
        "speech synthesis",
        "alt HTML element attribute",
        "alt text attribute",
        "screen reader",
        "a11y",
        "universal design",
        "inclusivity",
        "disability",
        "disabilities",
        "people with disabilities",
        "persons with disabilities",
        "accessible markup",
        "accessible mark up",
        "accessible code",
        "diversity",
        "diverse",
        "vision trouble",
        "visual impairments",
        "color blind",
        "hearing trouble",
        "physical disabilities",
        "physical functioning difficulty",
        "cognitive disabilities",
        "limited vision",
        "loss of vision",
        "low vision",
        "inclusive experiences",
        "alternative text",
        "alt text",
        "accessibility feedback",
        "accessible components"
      ]
    },
    "intro": "Shopify aims to provide an [inclusive experience](/foundations/accessibility). Alternative text (alt text) helps people with low or loss of vision use our products.",
    "content": "\n\n# Alternative text\n\nShopify aims to provide an [inclusive experience](/foundations/accessibility). Alternative text (alt text) helps people with low or loss of vision use our products.\n\nGenerally, alt text is text replacement for an image and is often represented by the alt HTML element attribute, `alt=\"\"`, but is also used in other scenarios.\n\nScreen readers announce alt text to explain images to people with low or loss of vision. Alt text is also displayed if images fail to download for some reason (for example, due to an unstable network connection).\n\nAlt text should:\n\n- Help visitors navigate the site\n- Provide an inclusive experience\n- Be as specific and concise as possible\n\n---\n\n## Alt text for images\n\nAll `<img>` tags need an alt text attribute, even if it’s empty. We need to let the screen reader know to ignore the image.\n\nEmpty alt text attribute for images: `<img alt=\"\" />`\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse alt text when the image conveys valuable information, such as the ability to play a demonstration video.\n\nIn this case, you would use:\n`<img alt=\"Watch a video on how the Shopify reports section works.\" />`\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse alt text when the image doesn’t add clarity to the task. In this case, leave the alt text attribute empty: `alt=\"\"`\n\n</div></div>\n\n---\n\n## Writing alt text\n\nAlt text should always be written in plain text.\n\n- Use the simplest words you can. Stuck on how to replace a complicated word? Check this [A-Z list of alternative words](https://www.plainenglish.co.uk/the-a-z-of-alternative-words.html) or these [plain language tips](/content/product-content#write-for-a-7-grade-reading-level).\n- Avoid needless words. If you take out a word, is the phrase just as easy to understand? If yes, then cut that word.\n- Write concisely. Thinking about how to write for a small amount of space is a good shortcut.\n- Write in the [active voice](/content/grammar-and-mechanics#basics). Only use the passive voice if you want to hide who is doing the thing described.\n\n---\n\n## Situations that need alt text\n\n### Icons\n\n[Icons](/components/icon) that could be misinterpreted need an explanation, so use the `aria-label` attribute.\n\n```html\n<button aria-label=\"Close\" onclick=\"myDialog.close()\">X</button>\n```\n\n### Actions\n\nIf space constraints require you to write calls to action without nouns, like “learn more” and “apply now”, give further indication of where merchants will be sent after they select.\n\n```html\n<a\n  href=\"{cta-url}\"\n  aria-label=\"Learn more about opening an online store with Shopify\"\n  >Learn more</a\n>\n```\n\n### Complex images\n\nImages with a bit more complexity need more logic in the code.\n\n```html\n<div role=\"img\" aria-labelledby=\"star_id\">\n  <img src=\"fullstar.png\" alt=\"\" />\n  <img src=\"fullstar.png\" alt=\"\" />\n  <img src=\"halfemptystar.png\" alt=\"\" />\n</div>\n<div id=\"star_id\">3 of 5 stars</div>\n```\n\n---\n\n## Pronunciation and translation\n\nNot only are we striving to make interactions with our products pleasurable, we also want to try to make the listening experience for our merchants pleasant as well. The HTML lang attribute helps speech synthesis tools figure out pronunciation and translation tools figure out what rules to use.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIndicate the language of the page. This example is for English.\n\n```html\n<html lang=\"en\"></html>\n```\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nFail to indicate the language of the page.\n\n```html\n<html></html>\n```\n\n</div></div>\n\nHere’s a\n[standard list of language attributes](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) that you can use in your document.\n\n---\n\n## SEO\n\nAlt text is a good way to increase site searchability. This applies outside of Shopify’s admin.\n\n- Use keywords (the words that people search for) logically\n- Never reduce the relevance or clarity of the alt text just to insert a keyword\n\nFor a deeper dive into coding and alt text standards, visit the\n[Web Content Accessibility Guidelines (WCAG)](https://www.w3.org/WAI/intro/wcag.php).\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Grammar and mechanics",
      "keywords": [
        "writing instructions",
        "writing rules",
        "writing guidelines",
        "copy instructions",
        "copy rules",
        "copy guidelines",
        "content instructions",
        "content rules",
        "content guidelines",
        "writing public-facing text",
        "public-facing text",
        "writing public-facing copy",
        "public-facing copy",
        "writing public-facing content",
        "public-facing content"
      ]
    },
    "intro": "This guide is to help designers, developers, recruiters, UX-ers, product managers, support advisors, or anyone who writes public-facing text for Shopify.",
    "content": "\n\n# Grammar and mechanics\n\nThis guide is to help designers, developers, recruiters, UX-ers, product managers, support advisors, or anyone who writes public-facing text for Shopify.\n\n---\n\n## Basics\n\n### Active voice\n\nYou should (almost) always write in the active voice:\n\n- Subject (person/thing acting) verb (the action) object (receives the action)\n\nUse the active voice if merchants need to do something. It should be clear that the subject is the one doing the action.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAdd details to the product\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nDetails were added to the product\n\n</div></div>\n\n### Passive voice\n\nTo tell if you’re using the passive voice, look out for:\n\n- When the object comes before the subject (“the item was purchased by the customer”)\n- Past tense verbs (“was added,” “was created,” and so on)\n- Forms of the verb “to be” (“was,” “is,” “were,” and so on)\n\nYou should almost always write in the active voice, but here’s when to use the passive voice:\n\n- To avoid referring to yourself or Shopify\n- To make it clear that you didn’t personally take an action or make a decision\n- If the object (thing being done) is more important than the subject (person doing the thing)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nInvoices are created monthly and emailed to\n[marki.yeung@nomail.com](mailto:Marki.Yeung@nomail.com)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nShopify creates and emails your invoices monthly to\n[simran.robichaud@nomail.com](mailto:Simran.Robichaud@nomail.com)\n\n</div></div>\n\n### Contractions\n\nContractions are abbreviated words. We use them to set a light and casual tone in the interface. The goal is to sound human, so avoid contracting verbs that sound awkward when you say them out loud, or have been phased out of modern day speech.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- You can’t have products with negative weights\n- Your products don’t have weights\n- You’re all set up\n- This product doesn’t require shipping\n- The customer name shouldn’t contain numbers\n- It’s a good time to plan your Black Friday sale\n- An error occurred and your changes couldn’t be saved\n- I’m Kit, your digital marketing assistant\n- This transfer hasn’t been received\n- You haven’t connected your account\n- You’ve exceeded 10 password attempts\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- That’ll make sure you are all set up\n- It would’ve been possible if you’d installed the latest updates\n- The set up was not complete, but this’ll do\n- There’re 10 products in this collection\n- Your product mustn’t be more than 20kgs\n- This product needn’t be shipped\n- There are 3 visitors who’ve viewed this product\n- You gotta set up Shopify Payments to use Shopify Capital\n- It’d be a good idea to place an ad this weekend\n\n</div></div>\n\n### Plain language\n\nUse words and language that our merchants use. Avoid jargon or technical terminology. Make sure each sentence has a single focus and keep them short. Aim for a Grade 7 reading level.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- We’ve made some changes to improve your store’s security\n- These products aren’t getting a lot of views, but visitors are adding them to their carts\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Your SSL certificates were activated\n- These are your less popular products with the highest add-to-cart conversion\n\n</div></div>\n\n---\n\n## Capitalization\n\n### Headings\n\nUse sentence case for all headings:\n\n- Capitalize the first word of a heading\n- Capitalize proper or trademarked nouns (names of products, countries, or people)\n- Lowercase for everything else\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nCreate purchase order\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nCreate Purchase Order\n\n</div></div>\n\n### Product and feature names\n\nIn general, if a feature or product isn’t unique to Shopify, don’t capitalize it (such as blogs, navigation, pages). If it’s unique to Shopify and marketable as its own product, capitalize it (such as Shopify Payments, or Frenzy).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- blogs\n- navigation\n- Shopify Payments\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Blogs\n- Navigation\n- shopify payments\n\n</div></div>\n\n### Trademarks\n\nRespect the usage guidelines of any third-party intellectual property. For example, in US communications, Apple Pay requires you to include the trademark symbol (™) the first time Apple Pay appears in body copy.\n\nReview the third party’s brand usage guidelines to make sure you are using the company’s name and logo correctly.\n\n### Job titles\n\nJob titles should be capitalized when they come before or after a person’s name. When referring to a job title without referencing a name, don’t capitalize the job title.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Content Strategist Jane Smith\n- Jane Smith, Content Strategist\n- Jane Smith is a content strategist.\n- The content strategist designed the information architecture.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- content strategist Jane Smith\n- Jane Smith, content strategist\n- Jane Smith is a Content Strategist\n- The Content Strategist redesigned the information architecture.\n\n</div></div>\n\n### Letters following slashes\n\nThe first letter following a slash shouldn’t be capitalized.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nZIP/postal code required\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nZIP/Postal code required\n\n</div></div>\n\n---\n\n## Headings and subheadings\n\nSee the content guidelines for [headings and subheadings](/content/actionable-language#section-headings-and-subheadings) in the actionable language section.\n\n---\n\n## Lists\n\n### Bulleted\n\nUse a bulleted list when items are related but sequence or priority doesn’t matter.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse Shopify Payments to:\n\n- Avoid the hassle of setting up a third-party payment gateway\n- Track your payout schedule from the Shopify admin\n- Minimize lost sales from chargebacks\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse Shopify payments to\n\n- avoid the hassle of setting up a gateway,\n- track pending payout schedule,\n- minimize lost sales from chargebacks. And eliminate PCI fees\n\n</div></div>\n\n### Numbered\n\nUse a numbered list when item sequence or priority does matter, such as step-by-step instructions.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nTo set up Shopify Payments:\n\n1.  Go to Settings from Shopify admin\n2.  Select Shopify Payments\n3.  Select Setup\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nTo set up Shopify Payments:\n\n1.  Go to Settings from Shopify admin Then select Shopify Payments\n2.  Select Setup\n\n</div></div>\n\n### Dropdown menus\n\n#### Actions in a menu\n\nMenu lists give users a horizontal set of actions when space is limited. The order of actions is often based on logic such as most popular actions.\n\nActions in a menu follow a {verb}+{noun} pattern. If there’s enough context, only a verb might be required.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Rename\n- Edit\n- HTML\n- Duplicate\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- HTML\n- editing options\n- File name changes\n- Duplicate this order so that you can make edits, updates, or changes\n\n</div></div>\n\n#### Nouns in a menu\n\nMenu lists give users a horizontal set of nouns when space is limited. The order of nouns is often based on logic such as most recent orders.\n\nNouns in a menu should be concise but still give the user enough information so they can easily find and accurately select the item they want.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nSelect filter\n\n- Today\n- Yesterday\n- This week\n- This month\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Filter visibility\n- Filter product type\n- Filter product vendor\n- Filter tagged with\n\n</div></div>\n\n### Capitalization\n\n- List items always start with a capital letter.\n- Capitalization and punctuation rules apply to both bulleted and numbered lists.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nCompany name\n\n- Hidden\n- Optional\n- Required\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nCompany name\n\n- hidden\n- optional\n- required\n\n</div></div>\n\n### Punctuation\n\n- Introduce bulleted lists with a colon or a heading.\n- Don’t use commas at the end of list items (for bulleted or numbered lists).\n- If any list item contains two or more sentences, punctuate all list items.\n- If all list items are one sentence or fragments, don’t punctuate.\n- Never put a comma or semicolon at the end of a bulleted or numbered list item.\n  Treat each list item as a self-contained piece of information.\n\n---\n\n## Dates, numbers, and measurements\n\nThese guidelines are for American English, which is the language we use as a base before translating to other languages. However, dates, numbers, and measurements may be formatted differently in other languages. You can use [helpers](https://github.com/Shopify/quilt) to ensure they are localized automatically.\n\n### Date\n\nWhen possible, use the month’s full name, for example, October. If there are space constraints, use 3-letter abbreviations, for example, Oct. Don’t write dates numerically, for example, 07-02-14.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Thursday, October 15, 2015\n- October 15, 2015\n- Oct 15, 2015\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Thur, October 15\n- October 15, ’15\n- 10/15/15\n\n</div></div>\n\nDon’t use ordinal indicators, which are words representing position or rank in a sequential order (1st, 2nd, 3rd, and so on).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nJanuary 23–April 1\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nJanuary 23rd–April 1st\n\n</div></div>\n\n### Time:\n\n- Use the 12-hour clock, followed by am or pm.\n- Include a space after the last number. For example, “Your package will arrive at 12:35 pm.” Adding the space helps with formatting for English-speaking markets outside of North America, so we use it for North American usage as well.\n- Use the browser time of the logged in user.\n- To show a time range, use an en dash and include the am/pm after both times, for example, 3:00 pm–4:00 pm.\n- If indicating both the date and time, separate them with the word “at” instead of a comma.\n\n#### Time zones\n\n- Include a time zone only if it’s necessary, such as for an event listing.\n- Use the time zone’s abbreviation following the am or pm, for example, 4:00 pm NZT.\n- If your audience is in a single time zone, then don’t include an S (for Standard) or D (for Daylight). For example, 3:00 pm PT.\n- If your audience is in a combination of time zones, then include the S (for Standard) or D (for Daylight) to avoid confusion. For example, 3:00 pm PDT.\n\nFor all translations, the time format is automatically localized by the `Intl.DateTimeFormat` JavaScript object.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nThursday, October 15, 2015 at 2:00 pm EDT\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n2015-10-15, CDT 2:00P.M.\n\n</div></div>\n\nUse consistent timestamp formats by following these examples:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Less than 1 min: `Just now`\n- 1 min to 60 min: `13 minutes ago`\n- Today: `10:30 am`\n- Yesterday: `Yesterday at 10:30 am`\n- In the last 7 days: `Friday at 10:30 am`\n- 7 days to 1 year: `Aug 14 at 10:30 am`\n- More than 1 year: `Aug 14, 2016`\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Less than 1 min: `10:30am`\n- 1 min to 60 min: `10:30am`\n- Today: `Today, 10:30am`\n- Yesterday: `Friday, 10:30am`\n- In the last 7 days: `Friday, 10:30am`\n- 7 days to 1 year: `10:30am, Oct 15, 2015`\n- More than 1 year: `Last year`\n\n</div></div>\n\n### Currency\n\nWhen including currency with a price, the currency comes after the dollar amount. Learn more about [formatting localized currency](/foundations/formatting-localized-currency).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- \\$10,000 USD\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- USD\\$10,000\n- \\$10KUSD\n- \\$10,000USD\n\n</div></div>\n\n### Numbers\n\nIn general, use numerals. If the number is below 10 and not integral to the sentence, spell it out in full.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 9\n- 100\n- 1\n- Here are 2 marketing campaigns you can use.\n- You have 3 orders to fulfill.\n- You no longer need to track shipments in two places.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- nine\n- one hundred\n- one\n- Here are two marketing campaigns you can use.\n- You have three orders to fulfill.\n\n</div></div>\n\nUse commas for numbers with four or more digits. Whenever possible, don’t truncate numbers:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 12,000\n- 9,344\n- 1,800,887\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 12 k\n- 9344\n- 1.8 m\n\n</div></div>\n\nUse hyphens when writing phone numbers. Don’t use brackets, spaces, periods, or plus signs:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 613-555-1234\n- 1-514-555-1234\n- 33-55-416-123\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 613.555.1234\n- 1-(514)-555-1234\n- +33 55 416 123\n\n</div></div>\n\nUse an en dash without a space on either side for number ranges:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 5–10 products\n- October 15–31\n- 2005–2015\n- 25–100 lbs\n- \\$0.00–\\$49.99\n- 2:00 pm–3:00 pm\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 5 – 10 products\n- October 15 – 31\n- 2005 – 2015\n- 25 – 100lbs\n- \\$0.00 – \\$49.99\n- 2:00 pm – 3:00 pm\n\n</div></div>\n\nUse “to” instead of an en dash if a number range is preceded by “from” in a phrase. Use “and” if a range is preceded by “between.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- You have a delivery scheduled from 10:00 am to 2:00 pm on Monday, July 18.\n- Active from August 15 to August 30\n- Free shipping for products between \\$10.00 and \\$40.00\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- You have a delivery scheduled from 10:00 am–2:00 pm on Monday, July 18.\n- Active from August 15–August 30\n- Free shipping for products between \\$10.00–\\$40.00\n\n</div></div>\n\nFor undefined upward ranges, use “and up” or “or more.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- \\$50.00 and up\n- 100 or more\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- \\$50.00+\n- \\>100\n\n</div></div>\n\nFor downward ranges, be specific.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n$0.00–$49.99\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n\\$50.00 or less\n\n</div></div>\n\n### Units of measurement\n\nIn all cases, include a space between the number and the unit.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 3.4 lb\n- 2 kg\n- 1 cm\n- 11.875 × 3.375 × 13.625 cm\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 3.4lb\n- 2kg\n- 1.875 × 3.375 × 13.625cm\n\n</div></div>\n\nNever pluralize unit of measurement abbreviations.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 4 lb\n- 11 ml\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 4 lbs\n- 11 mls\n\n</div></div>\n\nWhen listing out multiple measurements in a row, put the unit of measurement at the end instead of after each number (and include a space).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 11.875 × 3.375 × 13.625 cm\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 1.875 cm × 3.375 cm × 13.625 cm\n\n</div></div>\n\nFor pricing by measurement, don’t add a space before or after a slash.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- \\$100/m\n- \\$5/100 g\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- \\$100/ m\n- \\$5/100g\n\n</div></div>\n\nFor units of measurement, use decimals instead of fractions:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- 2.375 lb\n- 11.875 × 3.375 × 13.625 cm\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- 2-3/8 lb\n- 11-7/8 × 3-3/8 × 13-5/8 cm\n\n</div></div>\n\n#### Unit of measurement abbreviations\n\nThis table shows the standard abbreviations for commonly-used units of measurement.\n\nUse the imperial system for the United States, Liberia, and Myanmar, and use the metric system for all other countries.\n\n| Measurement          | System          | Unit          | Abbreviation |\n| -------------------- | --------------- | ------------- | ------------ |\n| **Area**             | Metric          | square meters | m²           |\n|                      | Imperial        | square feet   | sq ft        |\n| **Distance**         | Metric          | kilometers    | km           |\n|                      | Imperial        | miles         | mi           |\n| **Image resolution** | Universal       | pixels        | px           |\n|                      | megapixels      | MP            |              |\n|                      | pixels per inch | ppi           |              |\n|                      | dots per inch   | dpi           |              |\n| **Length**           | Metric          | centimeters   | cm           |\n|                      | meters          | m             |              |\n|                      | Imperial        | inches        | in           |\n|                      | feet            | ft            |              |\n|                      | yards           | yd            |              |\n| **Storage size**     | Universal       | kilobytes     | KB           |\n|                      | gigabytes       | GB            |              |\n|                      | terabytes       | TB            |              |\n| **Volume**           | Metric          | centimeters   | ml           |\n|                      | litres          | L             |              |\n|                      | Imperial        | fluid ounces  | fl oz        |\n|                      | gallons         | gal           |              |\n| **Weight**           | Metric          | grams         | g            |\n|                      | kilograms       | kg            |              |\n|                      | Imperial        | ounces        | oz           |\n|                      | pounds          | lb            |              |\n\n---\n\n## Addresses and places\n\n### Address\n\nLay out address forms in the following format:\n\n```\nFirst name             Last name\nAddress\nApartment, suite, etc. (optional)\nCity\nCountry            Province           Postal code\n```\n\nPlease note, “optional” in `Apartment, suite, etc. (optional)` means that the field is optional for customers to complete, but we should always include it in the form.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use locale-specific alternatives for province and postal code, for example, the US uses State and ZIP code\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add extra fields\n- Change the placeholder text\n\n</div></div>\n\n### Country, province, and state names\n\nUse a nation’s proper name when referring to it as a noun.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nYour store must be located in the United States.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nYour store must be located in the US.\n\n</div></div>\n\nWhen using a country as an adjective (such as when referring to currency), use the abbreviated form without punctuation.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nPinterest requires your store to use US currency.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nU.S. currency\n\n</div></div>\n\nThings to watch out for:\n\n- Don’t use colloquial forms of a nation or state name, for example, America instead of the United States\n- Search online to see whether nations commonly use “the” before their name, for example, the Philippines or the Falkland Islands\n\n---\n\n## Punctuation\n\n### Ampersands\n\nDon’t use ampersands (&). They attract attention to the least important part of the sentence. Spell out the word “and.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nZones and rates\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nZones & rates\n\n</div></div>\n\n### Apostrophes\n\nUse apostrophes to represent omitted letters or numbers:\n\n- Omitted numbers (’40s)\n- Omitted letters (don’t, can’t, won’t)\n- Verb contractions (it’s, you’re, we’re)\n\nUse apostrophes to form possessives:\n\n- Singular nouns: add _’s_, even if they end in _s_ (merchant’s, bus’s)\n- Plural nouns that don’t end in s: add _’s_ (women’s, men’s)\n- Plural nouns that end in s: add an apostrophe (boxes’, customers’)\n\nDon’t use apostrophes to form possessive pronouns such as hers or his.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Merchant’s store\n- Women’s clothing\n- Customers’ credit cards\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Merchants store\n- Womens clothing\n- Customers credit cards\n\n</div></div>\n\nAlways use apostrophes, not vertical (straight) quotes.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">’</span> <kbd>option</kbd> + <kbd>shift</kbd> + <kbd>]</kbd>\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">'</span>\n\n</div></div>\n\n### Colons\n\nAvoid using colons in sentences. If you need to use one, don’t capitalize the first word after the colon unless it’s a proper noun.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nYour store accepts payments with GoCoin and Shopify Payments.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nYour store accepts payments with: GoCoin and Shopify Payments. Merchants store, womens clothing, customers credit cards\n\n</div></div>\n\nDon’t use colons to introduce radio buttons or checkboxes.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIf the customer abandons their checkout, send them an email reminder to complete their order\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nIf the customer abandons their checkout, send them an email reminder to complete their order:\n\n</div></div>\n\nIntroduce bulleted lists with a colon.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nCorrect the following payment information to continue:\n\n- The credit card verification value (CVV) doesn’t match the credit card\n- The billing address street doesn’t match the street for the credit card\n- The billing address ZIP or postal code doesn’t match the credit card address\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nCorrect the following payment information to continue.\n\n- The credit card verification value (CVV) doesn’t match the credit card\n- The billing address street doesn’t match the street for the credit card\n- The billing address ZIP or postal code doesn’t match the credit card address\n\n</div></div>\n\n### Commas\n\nUse the oxford comma (also known as the serial comma) in sentences. There should be a comma after every list of 3 or more items (unless you’re using a bulleted or numbered list).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nKit is an app that handles your online advertising, email marketing, and social media.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nKit is an app that handles your online advertising, email marketing and social media.\n\n</div></div>\n\nDon’t use commas to separate bulleted or numbered list items.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- The credit card verification value (CVV) doesn’t match the credit card\n- The billing address street doesn’t match the street for the credit card\n- The billing address ZIP or postal code doesn’t match the credit card address\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- The credit card verification value (CVV) doesn’t match the credit card,\n- The billing address street doesn’t match the street for the credit card,\n- The billing address ZIP or postal code doesn’t match the credit card address.\n\n</div></div>\n\n### Ellipses\n\nThe ellipses (…) can be used in place of a missing piece of text (most commonly to show the deletion of words from a direct quotation). Avoid using ellipses in text.\n\nUse ellipses for:\n\n- Truncation in the center of a title bar\n\nDon’t use ellipses for:\n\n- Placeholder copy\n- Trailing off a sentence\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nSearch files\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nStart typing to search for files…\n\n</div></div>\n\nAlways use the ellipsis character, not three periods.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n<code style=\"font-size: 5rem; line-height: 0; background-color: transparent\">…</code> <kbd>option</kbd> + <kbd>;</kbd>\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n<code style=\"font-size: 5rem; line-height: 0; background-color: transparent\">...</code>\n\n</div></div>\n\n#### Truncation\n\nConsider constraints of the space in the interface when deciding to use truncation. Think about what part of the string merchants needs most. It’s usually the beginning or end, which means you might have to truncate the middle of the string.\n\n#### Ellipses button component\n\nA button with an ellipsis icon (not the same as text) is used to expand more actions. It’s typically used in cards, or for horizontal sets of actions when space is limited.\n\n### En-dashes and em-dashes\n\nUse an en dash with no spaces in between (–) for a fixed range of numbers\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n2006–2013\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n2006 – 2013\n\n</div></div>\n\nUse an em dash only if you can’t make your message clearer by splitting it into two sentences. Use an em dash without a space on either side (—).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nChoose your theme’s colors, typography, and pictures—all in one place.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nChoose your theme’s design—colors, typography, and pictures—all in one place.\n\n</div></div>\n\nDepending on the font or appearance, you may want to include a hair space on either side of the en or em dash. HTML entity code for hair space is `&hairsp;` or `&#8202;`.\n\nTip: On Mac the keyboard shortcuts are option - for en dash and shift option - for em dash.\n\n### Exclamation marks\n\nAvoid exclamation marks—only use them for really really exciting things. If you absolutely have to, limit yourself to one exclamation mark per page.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nYou’ve launched your first online store!\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nYou’ve updated your product title!\n\n</div></div>\n\n### Hyphens\n\nUse hyphens to:\n\n- Form compound modifiers: two words that combine to modify or describe the noun that follows\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Start your free, no-risk, 14-day trial.\n- This is a high-risk order.\n- This order is high risk.\n- Add weight-based shipping rates.\n- Add rates based on the weight of an order.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Start your free, no risk, 14 day trial.\n- This is a high risk order.\n- This order is high-risk.\n- Add weight based shipping rates.\n\n</div></div>\n\n- Join prefixes and suffixes only if there are two vowels beside each other. Never use hyphens in the words ecommerce and email.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Re-order\n- Resend\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Reorder\n- Reenable\n- Re-send\n\n</div></div>\n\n### Periods\n\nPeriods often end up in places they shouldn’t, and are omitted at strange times. In general, don’t use periods in interface copy unless it’s a full sentence description.\n\nWhen to use periods:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Complete sentences\n- Body text, descriptions, and subtitles\n- Help text under text boxes (form fields)\n- Timeline events\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Sentence fragments\n- Top-level headings and titles\n- Buttons\n- Notifications\n- Toast messages\n- Placeholder copy\n- Navigation menu items\n- Hover/tooltip text\n- Footer help box text\n- Radio button and checkbox text\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Description example: Add this product to a collection so it’s easy to find in your store.\n- Placeholder example: Search products\n- Timeline example: \\$50.41 USD was authorized.\n- Footer help box example: Learn more about [products](https://help.shopify.com/manual/products)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Button example: Add product.\n- Placeholder example: Search…\n- Heading example: I’m Kit, your virtual employee.\n- Notification example: 6 orders have payments that need to be captured.\n\n</div></div>\n\n#### Periods for bulleted, numbered, and lists of links\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use when a list item has two or more full sentences, then also add periods to the whole list\n- Use for the description or helper text below a bulleted or numbered list item\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Don’t use periods when a list has only single sentences or fragments\n- Don’t use periods for lists of links\n\n</div></div>\n\n### Question marks\n\nAvoid question marks wherever possible. Reword into affirmative statements wherever you can, but there are exceptions:\n\nIt’s okay to use question marks if you don’t know the result of the question:\n\n- “Did you forget your password?”\n- “Do you need to add a shipping rate?”\n\nDon’t use question marks if:\n\n- It’s the only option available: “Reset password”\n- It’s an on/off option: “Show quantity box”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Forgot?\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Reset password?\n\n</div></div>\n\n### Quotation marks\n\nUse quotation marks to:\n\n- Define words (“growth-hacking”)\n- Quote text\n\nWhen it’s helpful to the merchant, use quotation marks to indicate input that the merchant has provided, such as a product title or file name. Use this indication only when the input appears in running text.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Are you sure you want to delete “cat shirt”?\n- “Nike Air Max 90.png” failed to upload\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Are you sure you want to delete **cat shirt**?\n- Nike Air Max 90.png failed to upload\n\n</div></div>\n\nIn general, place commas and periods inside quotation marks. When working with literal strings like typed commands or merchant inputs, place punctuation outside the quotation marks.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- “I see this all the time,” said Mary.\n- Avoid general words like “all,” “every,” or “most.”\n- To remove this item, type “DELETE”.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- “I don’t understand why”, said Mitch.\n- We call it a “store”, not a “shop”.\n- There was an error with the file “cat_shirt.png.”\n\n</div></div>\n\nAlways use smart (curly) quotes, not vertical (straight) quotes.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">‘</span>\n  <kbd>option</kbd> + <kbd>]</kbd>\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">’</span>\n  <kbd>option</kbd> + <kbd>shift</kbd> + <kbd>]</kbd>\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">“</span>\n  <kbd>option</kbd> + <kbd>[</kbd>\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">”</span>\n  <kbd>option</kbd> + <kbd>shift</kbd> + <kbd>[</kbd>\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">\"</span> or <span style=\"font-size: 5rem; line-height: 0; vertical-align: bottom\">'</span>\n\n</div></div>\n\n### Semicolons\n\nAvoid semicolons if possible. If you really need them, use semicolons to:\n\n- Connect two closely related ideas, as long as they are both independent clauses (full sentences that could stand on their own).\n- Replace a comma or the word “and” between two closely related ideas.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nMy friends made me banana pancakes on my birthday; I’ve never been happier.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nThe unicorn was hungry; the grass was brown.\n\n</div></div>\n\n---\n\n## Spelling and formatting\n\n### American spelling\n\nUse American spelling for all external-facing Shopify content. When in doubt, check the [Merriam-Webster dictionary](https://www.merriam-webster.com/) for the preferred spelling of specific terms.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Color\n- Center\n- Canceled\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Colour\n- Centre\n- Cancelled\n\n</div></div>\n\nTip: it’s easy to miss Canadian spelling. Switch your laptop language settings to American English and turn spell check on. It will highlight any Canadianisms you might have missed.\n\n### Bold\n\nWhen in doubt, don’t bold.\n\nUse bold sparingly and only where strong emphasis is required. Don’t use bold to create a heading or emphasize:\n\n- Proper nouns\n- Merchant input\n- Checkbox titles\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAfter your first sale, PayPal will email you at **merchant&#64;email.com** with instructions.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAre you sure you want to delete **Sunset T-shirt**?\n\n</div></div>\n\n---\n\n## You, we, and other personal pronouns\n\n### Addressing merchants\n\nAlways refer to merchants as “you.” Don’t speak for merchants with phrases that use “I” or “my.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nChange your email address in your Profile.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nChange your email address in My Profile.\n\n</div></div>\n\nIn some cases (such as getting merchant consent or granting permissions) you should refer to merchants as “I.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n<p><label><input type=\"checkbox\"> I agree to the terms and conditions</label></p>\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n<p><label><input type=\"checkbox\"> You agree the terms and conditions</label></p>\n </div></div>\n\n### Referring to Shopify\n\nAlways refer to Shopify as “we,” but avoid inserting Shopify into the content as much as possible (except when a human is taking action, such as reviewing a request).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nPinterest Buyable Pins will be available in the coming weeks.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nWe’re making Pinterest Buyable Pins available in the coming weeks.\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Help documentation",
      "keywords": [
        "writing instructions",
        "writing guides",
        "writing tutorials",
        "writing how-to's",
        "writing how to's",
        "writing how to",
        "writing step-by-steps",
        "writing step by steps",
        "writing technical documentation",
        "technical documentation",
        "linking to help documentation",
        "linking to technical documentation",
        "educating",
        "teaching",
        "explain apps",
        "describe apps",
        "educate about apps",
        "merchant education",
        "educational opportunity",
        "educational opportunities",
        "explain features",
        "describe feature",
        "educate about features",
        "merchant education",
        "educational opportunity",
        "educational opportunities"
      ]
    },
    "intro": "After you build an app or other integration, writing help documentation will show merchants how to use it.",
    "content": "\n\n# Help documentation\n\nAfter you build an app or other integration, writing help documentation will show merchants how to use it.\n\nThese guidelines are based on our experience writing help documentation for the\n[Shopify Help Center](https://help.shopify.com/). They’re all intended to serve the same goal: to educate and empower Shopify merchants.\n\nTo include a link to help documentation in your app or channel, use the\n[Footer help](/components/footer-help) component.\n\n---\n\n## Plan for your audience\n\nThe way you write your help documentation should change depending on the type of audience and their expectations. Take some time to plan for your audience.\n\n### Audience types\n\nWrite help documentation for its intended audience. For any given document, we can expect a wide spectrum of Shopify users as an audience:\n\n#### Prospective users\n\n- Not signed up yet, possibly on a free trial\n\n#### Novice users\n\n- Signed up but might not have sold online before\n- Possibly not very computer-literate\n- New to Shopify concepts and workflows\n\n#### Experienced, confident users\n\n- Have been using Shopify for some time\n- Familiar with the basic concepts and workflows\n- Confident with computers\n- Able to try some customizations with guidance\n\n#### Highly technical users\n\n- Experienced and confident\n- Extensive computing experience\n- Happy to experiment and take risks\n- Experienced problem-solvers\n- Self serve through forums and help documentation\n\n### Audience expectations\n\nEach of these different users will likely have different expectations for the same document. Let’s take a look at how that might play out:\n\n#### Prospective users\n\n- A quick-start guide\n- Conceptual overviews\n\n#### Novice users\n\n- Lots of hand-holding\n- Clear step-by-step instructions\n- Conceptual overviews\n- Definitions of terms\n- Tutorials\n- Context-sensitive help\n\n#### Experienced, confident users\n\n- Clear step-by-step instructions\n- Conceptual overviews\n- Definitions of terms\n- More challenging tutorials\n- Context-sensitive help\n\n#### Highly technical users\n\n- Procedural instructions (can be to-the-point)\n- Code fragments\n- Pointers to information sources\n\nThis is just one way to imagine the variety of users that fit into our audience.\nHowever we imagine their skill level, our aim for documentation remains the same: to accommodate a wide range of users and their objectives. We can do this by presenting information in a way that’s inclusive of different skill levels, different learning styles, and different workflows.\n\n---\n\n## Use headings to organize your document\n\nReaders come to help documentation with different expectations and in different usage settings. For example:\n\n- One might be working through a long, multi-stage setup process to connect a third-party app into her admin\n- Another might be using her tablet to check out the details of Shopify POS and see if it could be used at her cafe\n- Another might be trying to make a quick edit to his storefront in the half hour he has left before going to pick up his kids from school\n\nIn all these different cases, the reader needs documentation that’s findable, usable, and relevant—in short, organized.\n\n### Effective headings\n\nEffective headings make it clear to readers which sections of a document are most relevant to their current tasks (findability). Headings also provide them with a good sense of progress while they move from one task to the next\n(usability).\n\n### Low-level headings\n\nAs a general rule, the lower a heading is in the doc’s hierarchy, the more flexible you can be with its tone. For example, low-level headings can be longer and more specific, or less formal.\n\n### Heading hierarchy\n\nMaintain the heading hierarchy throughout the doc, and don’t skip heading levels. For example, go directly from H1 to H2, then to H3, and so on. This helps the readers know where they are in the document, whether they’re going through a specific workflow or just scanning.\n\n### Tips\n\nFor page or topic-level headings, use short, gerund (ing-word) based statements.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Creating products from your admin\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Create products from your admin\n\n</div></div>\n\nFor task-based headings within the document, use verb stems / imperatives.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add a customer\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Adding a customer\n\n</div></div>\n\nAvoid pronouns and articles in headings to keep them short.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Connecting Facebook accounts\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Connecting a Facebook account\n- Connecting your Facebook account\n\n</div></div>\n\nAvoid long strings of nouns in a heading.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Posting products\n- Creating posts\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Creating product posts\n- Creating product post pages\n\n</div></div>\n\nKeep the key descriptors close to the front of a heading so it’s easier to scan quickly. For example, avoid starting the heading with “How to” or “To.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add a product\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- How to add a product\n\n</div></div>\n\nTry to keep parallel grammatical structure between headings of the same level.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Boost a post, Choose an audience, Fulfill an order\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Boost a post, Choosing your audience, How to fulfill your orders\n\n</div></div>\n\nIn most cases, headings should be statements rather than questions. Save question-style headings for FAQs or low-level headings that address specific functions.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add a product\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- How do I add a product?\n\n</div></div>\n\nUse sentence case for all headings, but no periods at the end. Format and capitalize interface elements or buttons in the way they appear in the Shopify admin.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Adding products to your store\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Adding Products To Your Store.\n\n</div></div>\n\nUse parallel structure in lists, headings, and pretty much everywhere else to encourage comprehension and recall.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Adding products to your store, Deleting products from your store, Editing products in your store\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add products to your store, How to delete products from your store, Edit a product in your store\n\n</div></div>\n\n---\n\n## Document tasks\n\n### Be task-oriented\n\nMost help documentation is task-oriented: it’s designed to guide readers through the steps they need to follow to complete a task. The best documentation will save readers time by helping them complete their tasks quickly. The way that you present information has a big impact on how useful it will be to your readers.\n\n### Use introductions\n\nIn most cases, a document shouldn’t start with a set of instructions. Instead, offer context with an introductory comment or define a key concept about the topic. Decide what information readers need before they scan the instructions.\nThis is also true for the document’s subsections.\n\n### Use numbered steps\n\nDivide up the instructions in a way that reflects how the reader might think of the task. Use numbered steps for each part of the task. This helps to hold your reader’s attention, and makes it easier for them to switch between a help document and Shopify to complete the task.\n\n### Start at the beginning of a workflow\n\nMake sure that the instructions for major tasks in a longer document can stand alone. If the instructions for a task pick up abruptly where an earlier task left off, then the readers who begin at that point might struggle to figure out the workflow. Start documenting each task at the beginning of the workflow required to complete it.\n\n### Use short lists\n\nIn general, use short lists (either numbered steps or bullets), which are easier to read than long lists. If you have a task or a list that needs more than ten items, then break it up into two or more lists, each with their own subheading.\n\n### Make tasks actionable\n\nTell the user what they can do with your product, not what it can do. This means structuring documentation around user actions rather than product features.\nReaders aren’t there to read a spec: they want to keep their businesses up and running.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use this feature to keep track of key updates and promotions.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- This feature notifies you about key updates and promotions.\n\n</div></div>\n\nIn general, avoid grouping multiple actions together in a single numbered step.\nEach step should include only one or two user actions.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n1.  From your Shopify admin, click **Products**.\n2.  Click **Add a product**.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n1.  From your Shopify admin, click **Products**, click **Add a product**, and\n    then enter your product information.\n\n</div></div>\n\nAvoid telling the user to “find” or “locate” something in a task.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- In the Pinterest section, click **Remove channel**.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Find the Pinterest section, then click **Remove channel**.\n\n</div></div>\n\nUse the action word “select” when you’re telling the reader to pick something from a set number of choices (like from a list or dropdown menu), and use\n“choose” when you’re telling the reader to make a choice that’s more open-ended\n(like “Choose what kind of store you want to open”).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- From the **Products** drop-down menu, select the one you want to discount.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- From the **Products** drop-down menu, choose the one you want to discount.\n\n</div></div>\n\nUse consistent phrasing when referring to the reader’s choice. Use the most direct “If you want to” instead of more formal options such as “If you would like to” or “If you wish to.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- If you want to add a product, click **Add product**.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- If you’d like to add a product, click **Add product**.\n\n</div></div>\n\nAvoid using “desired” in place of the more direct “want.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Select the item you want to add to the order.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Select the desired item to add to the order.\n\n</div></div>\n\n---\n\n## Structure conditional statements\n\nFor conditional cases, start the step with “if” so the reader doesn’t have to read the whole sentence only to find out that the condition does not apply to them. It often helps to add a “then” to help the reader identify the condition and the outcome.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- If you need Z, then click A, B, and C.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Click A, B, and C if you need Z.\n\n</div></div>\n\n---\n\n## Clarify results of actions\n\nShow results of actions in the same step as the task and be clear about where in the flow the reader is.\n\n### Put actions and results in the same step\n\nIf you need to mention the results of a user action, then do it in the same numbered step that describes that action (don’t use a separate numbered step).\nIn general, omit results statements unless the result is surprising or unexpected.\n\n### Mention earlier steps to reinforce order of tasks\n\nYou can refer to an earlier step to reinforce the order of the steps.\n\nFor progress within a series of steps, use the phrase “When you’ve” or “After you’ve.” Avoid using “Once you’ve.”\n\nFor progress between tasks, begin a section with “Now that you’ve” or “After you’ve” (referring back to the previous action or step).\n\n### Use “make sure” and “confirm” for important tasks\n\nWhen asking the reader to confirm something, use:\n\n- “Make sure” in cases where there’s still a related important task (instead of\n  “check that” or “verify that”).\n- “Confirm” in cases where the reader has already been told to do something, and you’re now reminding them.\n\n### Tips\n\nFor instructions, use the command form of the verb.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Click **Refresh** to show your new orders.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Clicking **Refresh** will show your new orders.\n\n</div></div>\n\nLimit the future tense to cases that actually refer to the future.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Choose an end date. After this date, the boosted post will revert to a regular post.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Click **Save**. The price will change when the discount is applied.\n\n</div></div>\n\n---\n\n## Use screenshots for clarity\n\nScreenshots help visual learners understand complex tasks and add context to the tasks you’re documenting. Use them wisely.\n\n### Use screenshots for complex tasks\n\nIn general, don’t use a screenshot to illustrate every step in a task. Instead, save screenshots for places where the interface is complicated.\n\n### Make screenshots with equal margins\n\nWhen highlighting an area of a screenshot, try to show an equal amount of space around the area that you want the reader to focus on.\n\n### Use consistent images in a workflow\n\nTell a story by being consistent with details in screenshots within a document.\nFor example, you could follow a single order and keep the details the same from one screenshot to the next.\n\n---\n\n## Teach through documentation\n\nDocumentation is an opportunity for education. Building context, making instructions clear, and encouraging learning are key.\n\n### Link to next steps\n\nOffer links to the next steps. Choose the next steps based on reader profiles and feedback.\n\n### Encourage learning\n\nEncourage the reader to learn more. Explain the benefits of the feature in the introduction of your document.\n\n### Make the first tasks easier\n\nWhere you can, give the readers “early wins.” Make the first step or two of the task short and easy.\n\n### Build context\n\nConnect the current task to readers’ wider knowledge: other parts of Shopify, the store-building process, and even the business-building process.\n\n### Try not to repeat information on the same page\n\nIn most cases, avoid repeating information on a page. You might need to repeat important points to make sure the reader notices them. For example, you might repeat a warning from the document’s introduction within a set of instructions.\n\n---\n\n## Use the right tone\n\nThink of the context that the reader is in and what they might be feeling and thinking while they’re reading your documentation. This perspective will help you pick what type of tone to apply.\n\n### Instructional tone\n\nMost people don’t want to spend time reading documentation. They want to learn what they need to know, and then move on. The language in documentation needs to be short, to the point, and task-oriented. That doesn’t mean your writing needs to be terse or dry.\n\n### Lighter tone\n\nIn general, you can begin a document using a lighter tone.\n\n### Informal tone\n\nWhen you introduce a task, an informal tone can help draw the reader in, offer context, and encourage the reader to keep going. You can also use a more informal tone when introducing sub-tasks, to give the reader a break from the instructions.\n\n### Direct tone\n\nFor actions and tasks, aim for a much more direct tone. Keep your tone approachable by using contractions (for example _can’t_, _it’s_) to link directions and results.\n\n### Tips\n\nUse contractions.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- After you’ve set up your product, click **Save**.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- After you have set up your product, click **Save**.\n\n</div></div>\n\nAddress the reader or user as “you.”\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- You can add products from the Products page in your Shopify admin.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Products can be added from the Products page in your Shopify admin.\n\n</div></div>\n\nKeep tone in check by avoiding the following:\n\n- Sounding patronizing, chummy, cheery, childish, or otherwise inappropriate in an attempt to seem informal and relatable.\n- Colloquialisms, jokes, sarcasm, jargon, and slang. Avoid anything that’s too culturally specific.\n- Anything that causes the user to pause or hesitate, unless you explicitly want them to.\n\n---\n\n## Use the active voice\n\nUse the active voice as much as possible, which generally sounds less formal than the passive voice. This means writing what merchants do, instead of what is being done by merchants. But in cases where the passive voice sounds more natural than the active voice, use passive voice (like with verbs such as “publish” or “assign” and with nouns like “discount”).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- After you’ve added a product, click **Save**.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- After the product has been added, **Save** must be clicked.\n\n</div></div>\n\n---\n\n## Improve readability\n\nIt’s important that the sentences you put together flow. Changing things up and knowing when things should be combined or separated will improve prose. Reading sentences that flow helps reader comprehension.\n\n### Avoid choppy writing\n\nUse linking adverbs, conjunctions, and prepositions liberally to avoid choppy writing.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Click the button to open the window.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Click the button. The window opens.\n\n</div></div>\n\n### Change up sentence structures\n\nVary your sentence structure, especially in longer paragraphs. Try not to use more than two phrases with a “To x, do y” structure in a row—this gets repetitive and can cause the reader to lose interest. To break it up, add a short declarative sentence, if possible.\n\n### Break up complicated chunks\n\nUse conjunctions (a word that joins words or groups of words) to break up complicated passages.\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Merchant-to-customer content",
      "keywords": [
        "merchant to buyer",
        "buyer",
        "shopper",
        "buyer voice and tone",
        "customer voice and tone",
        "writing for checkout",
        "checkout",
        "check out"
      ]
    },
    "intro": "Shopify creates content for different audiences. One of those audiences is merchants’ customers. A customer is a person or organization who interacts with a Shopify merchant or a merchant’s sales channel.",
    "content": "\n\n# Merchant-to-customer content\n\nShopify creates content for different audiences. One of those audiences is merchants’ customers. A customer is a person or organization who interacts with a Shopify merchant or a merchant’s sales channel.\n\nMerchant-to-customer content represents the merchant, not Shopify, and should optimize the customers’ online or retail store experience.\n\nEvery UX discipline is encouraged to create content at Shopify. Use this guide when you’re writing content that a customer will see on a Shopify store or receive from a merchant.\n\nYou’ll find merchant-to-customer content in places such as:\n\n- Online store checkout pages\n- Shipping update emails\n- Return labels and emails\n- Point of Sale (POS) screens, such as digital receipts and payment errors\n\n---\n\n## What it isn’t\n\nIf you write for multiple audiences, it’s important to note that merchant-to-customer content isn’t:\n\n- Shopify-to-buyer content, such as Shopify Pay or Arrive\n- Shopify-to-merchant content, such as the Shopify admin\n- Shopify-to-world content, such as shopify.com or blog posts\n\n---\n\n## Experience values for customers\n\nShopify has a set of [experience values](https://polaris.shopify.com/foundations/experience-values). The ones to focus on when creating merchant-to-customer content are:\n\n### Considerate\n\nWherever and however a customer uses a Shopify experience (even if they don’t know it’s Shopify), we want it to work for them. The best Shopify experiences work on every screen, on every platform, in every language, and in every country.\n\n### Efficient\n\nShopify experiences help customers achieve goals faster, more accurately, and with less effort. We break complex tasks down into simple steps, use friction to highlight important decisions, and always set expectations about what will happen next.\n\n### Trustworthy\n\nShopify experiences are genuine, always honest, and transparent. We show customers that merchants act in the customer’s best interest. We create communication that strengthens the trust customers have in merchants.\n\n---\n\n## Merchant voice and tone\n\nMerchant voice and tone is customer-focused.\n\nShopify merchants sell everything from physical products, such as eco-sneakers, to digital products, like music downloads. The language they use is very different from store to store. This means that when writing from a merchant perspective, we use a voice that’s appropriate on any store, and for any type of customer. Merchant-to-customer content shouldn’t sound out of place coming from any merchant.\n\n### Human, but not individual\n\nToo much personality is inappropriate for some stores. Customers aren’t going through the purchase experience to admire the witty content. Research shows that the majority of people want content that’s easy to understand and communicates concepts efficiently. Not robotic. Not full of personality. Just clear and straightforward to help them complete their task.\n\nKeep in mind that some content, such as emails, can be personalized by merchants. You’re providing a default for them to work from.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Your payment details couldn’t be verified. Check your card details and try again.\n- All transactions are secure and encrypted.\n- Select the address that matches your card or payment method.\n- Thanks!\n\n  This example is when the customer finishes checkout in person (all other examples are from online checkout).\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- A fatal error occurred.\n\nWhoops! Houston, we have a problem!\n\n- Don’t worry, your details are safe with us!\n- Address must correspond with that held by your payment provider.\n- Thanks for stopping by! or See you again soon!\n\n</div></div>\n\n### Shopping, not ecommerce: use shopper terms\n\nAvoid technical or ecommerce terms. Customers are interested in their order and their delivery, not in inventory and fulfillment. They might want to sign up for news and exclusive offers, but not marketing emails.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Enter your name exactly as it’s written on your card.\n- You’ll get shipping and delivery updates by email.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- There was a server verification error with your payment provider.\n- We’ll inform you when we’ve fulfilled your order.\n\n</div></div>\n\n### Concise, but not short\n\nIt’s important that any purchase flow is efficient. Use short, easy-to-understand words and phrases. For example:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use “to”\n- Use “go to”\n- There was a problem with our payments\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Don’t use “in order to”\n- Don’t use “proceed to”\n- No payment gateway is currently configured\n\n</div></div>\n\nBut remember that clear beats short. Don’t use content that can be interpreted in different ways. For example, does “bi-weekly” mean twice a week or every two weeks? It’s clearer to say “Every 2 weeks.” Using more words is okay if it provides clarity.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Every two weeks\n- Getting available shipping rates\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Bi-weekly\n- Loading\n\n</div></div>\n\nNo matter who the audience is, all Shopify content follows the same [grammar and mechanics](https://polaris.shopify.com/content/grammar-and-mechanics) and [product content guidelines](https://polaris.shopify.com/content/product-content).\n\nRead our general [voice and tone guidelines](https://polaris.shopify.com/content/voice-and-tone) to compare how Shopify talks to merchants.\n\n---\n\n## Vocabulary considerations\n\n“Buyer” and “customer” are similar so it’s easy to confuse the use of these terms.\n\nA “buyer” interacts with multiple Shopify stores or has a direct relationship with Shopify, such as through Shopify Pay.\n\nIn contrast, a “customer” is a person or organization who interacts with a Shopify merchant or a merchant’s sales channel.\n\nIn the Shopify admin and Point-of-Sale (POS), a customer appears on the Customers page when they engage with a merchant in an identifiable way. This could be because they:\n\n- were added or imported by the merchant\n- started a purchase but abandoned it at checkout\n- made a purchase\n- create a customer account\n- subscribed to the merchant's mailing list\n\nWord usage to use/avoid:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use the store name in place of “merchant”\n- Be direct and use “you”\n- Focus on the merchant-to-customer relationship\n- Use “text message” or “message” when writing for North American audiences\n- Use noun + verb phrases for success messages, for example, ”payment sent”\n- There was a problem with our payments\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Merchant (in place of store name)\n- Customer or customer (in place of “you”)\n- Shopify (keep Shopify out of the conversation)\n- SMS\n- Oh happy day! (don’t be over-congratulatory)\n- Wrong, fail, failure, error (avoid sounding robotic or negative)\n\n</div></div>\n\n### Common terms\n\nUse the following terms to refer to common concepts and actions within the merchant-to-customer experience.\n\nNote: all of these terms should be lowercase, unless they're a proper noun or the first word in a sentence.\n\n#### cart\n\nThe page that displays an order summary. Customers see this page before they proceed to checkout.\n\n#### checkout\n\nThe customer experience for paying for items and completing an order.\n\n#### delivery\n\nHow an order reaches the customer. Delivery covers more than just shipping. For example, customers can choose whether the order is shipped to their delivery address or picked up in-store.\n\n#### discount code\n\nA dollar amount, percentage, or code that dictates how much a product will be reduced in price.\n\n#### duties\n\nAdditional costs that may be incurred on orders that are delivered internationally. Duties may be incorporated into the shipping cost.\n\n#### gift card\n\nA type of product with monetary value that merchants can either sell to customers or issue to them as a gift, reward, or incentive.\n\n#### item\n\nOne unit of a product on an order.\n\n#### login\n\nThe credentials that a customer uses to access their account.\n\n#### order\n\nThe term for a purchase. Don’t say package, or add unnecessary words like sales order.\n\n#### payment\n\nDescribes a specific way a customer can pay such as Visa, MasterCard, or Apple Pay.\n\n#### pay now\n\nThis text is displayed on Call To Action (CTA) buttons that trigger a payment. On free orders, this is replaced with “Complete order”.\n\n#### pickup\n\nA delivery option where customers physically collect an order.\n\n#### return\n\nA transaction where a customer sends a product back to the store for an exchange or refund. A refund is part of a return.\n\n#### refund\n\nThe funds that a customer receives from a merchant, for example, when returning an item.\n\n#### shipping\n\nHow a merchant sends an order to a customer. Also known as the shipping method.\n\n#### subtotal\n\nThe cost of the items on an order before additional charges, such as tax and shipping.\n\n#### total\n\nThe cost of the items on an order after additional charges such as tax and shipping.\n\n#### you\n\nA way of referring to the customer that's checking out. Use you, or use the name that the customer has provided.\n\n#### we\n\nA way of referring to the store name. Most of the time, refer to the store by name. However, you can use “we” when using the store name would sound overly wordy or insincere.\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Naming",
      "keywords": [
        "names",
        "caps",
        "capitalizations",
        "capitalizing",
        "how to name",
        "naming at Shopify",
        "naming guidelines",
        "picking a name",
        "product naming",
        "feature naming",
        "website naming",
        "event naming",
        "trademarked names",
        "trademarks",
        "branded names",
        "capitalized names"
      ]
    },
    "intro": "The names we give our products and features teach merchants how to use Shopify and how to find the things they need to run their business.",
    "content": "\n\n# Naming\n\nThe names we give our products and features teach merchants how to use Shopify and how to find the things they need to run their business.\n\n---\n\n## Thoughtful naming\n\nNames influence how merchants and other audiences perceive and understand\nShopify. A well-chosen name will:\n\n- Put clarity above creativity\n- Help establish a mental model for our audiences\n- Enhance people’s perception of our brand\n- Increase adoption of the product or feature\n- Differentiate Shopify from other products\n- Clarify where a product or feature fits into our brand system\n\nThe naming process involves collaboration. Include different disciplines and people with different subject matter expertise in the creation of a name.\n\n---\n\n## Does it need a branded name?\n\nMost features don’t need an official, branded name. For example, order entry is\na feature that’s referred to descriptively and so doesn’t need to be capitalized. When choosing what to call a feature, pick words that describe what the feature does or represents. If there’s room, add extra context for merchants by describing the feature instead of using only the feature name.\n\nAvoid capitalizing descriptive feature names.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Order entry\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Order Entry\n\n</div></div>\n\nIf there‘s room, describe the feature instead of defaulting to only using the name.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Display carrier calculated shipping rates to your customers at checkout.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Display carrier calculated shipping rates.\n\n</div></div>\n\n### Using “Shopify”\n\nOnly Shopify can use the word “Shopify” in a name. The word “Shopify” can’t be used to name third-party products.\n\nIt’s important we use the word “Shopify” consistently, and sparingly. Don’t use\n“Shopify” in a name unless there’s a lack of surrounding context and we want its target audience to know it’s associated with Shopify.\n\nAdding “Shopify” doesn’t add clarity in the context of other Shopify products and features. For example, merchants often confuse Shopify Shipping with the other shipping features, like shipping settings, carrier calculated shipping other, shipping labels, and shipping zones. Our support staff have to refer to the Shopify Plan by its cost because the general name doesn’t distinguish it ratesthe other plans.\n\nUse “Shopify” in front of a name when a product:\n\n- Is or will become a separate product or platform and we need to associate it with Shopify\n- Should be differentiated from other, similar products in the industry\n- Doesn’t justify an\n  [evocative name](/content/naming#section-descriptive-vs-evocative-names), but still needs to associated with Shopify\n\nDon’t use “Shopify” in a name for built in functionality features, like fraud analysis or importing products. analysis\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Shopify Pay\n- Shopify App Store\n- Shopify Theme Store\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify Analytics\n- Shopify Discounts\n- Shopify Account\n\n</div></div>\n\nShopify makes apps that merchants can add to their Shopify admin. It’s okay to say “Built by Shopify” or “Made by Shopify” after the app name. Once you’ve sayked the format that works for the design, use it consistently. pickedodont -->\n\n#### Do\n\n- _Shopify_ Product Reviews\n- _Shopify_ Order Printer\n- _Shopify_ Shopcodes\n\n#### Don’t\n\n- Product Reviews\n- Order Printer\n- Shopcodes\n\n<!-- end -->\n\nApps that aren’t built by Shopify should not use the word “Shopify” in their name or say “for Shopify” after the name.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- AdSpace\n- Email Marketing\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- AdSpace for Shopify\n- Email Marketing for Shopify\n\n</div></div>\n\n---\n\n## Descriptive vs evocative names\n\nThere are two types of approaches to naming, the descriptive approach, or the evocative approach. Descriptive names are concrete, while evocative can be more abstract. Descriptive names are merchant friendly, and the most common. Features should always have descriptive names. Standalone products that require independent branding can use evocative names. Third-party apps and channels should have their own branded names and should never use the word “Shopify” in the name. the\nIf you’re a Shopify employee and are looking to trademark an evocative name, ask the legal department for help.\n\n### Descriptive names\n\nFeatures and products connected to Shopify’s main product offering should have names that reveal something about their purpose. Avoid jargon and make sure the name you pick won’t get confused with similar names or terms. name\nReserve evocative naming conventions for standalone products like Kit, and\nFrenzy.\n\nDescriptive names should:\n\n- Describe the experiences they represent\n- Fit into the information architecture of the product\n- Use merchant-friendly terms, not industry standard terms\n- Make sense in marketing materials\n- Align with brand\n\nIf it’s a default feature (merchants don’t have to sign up or opt in to use it), don’t [capitalize](/content/naming#section-general-guidelines) it. don- dodont -->\n\n#### Do\n\n- Shopify Capital\n- fraud analysis\n- Use analytics to review your store’s transactions\n\n#### Don’t\n\n- Shopify capital\n- Fraud Analysis\n- Use Analytics to review your store’s transactions\n\n<!-- end -->\n\nAvoid jargon and give merchants a hint about the actions they’ll be able to take when they interact with the product or feature.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\"> when\n\n#### Do\n\n- Shopify Help Center\n- Shopify Theme Store\n- discounts\n- Logo maker\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify Help Documentation\n- Configuration app\n- Shipity-do-dah\n\n</div></div>\n\n### Evocative names\n\nStandalone products use evocative names to position us in the industry. These unique and bold naming conventions can help with branding or recall, but don’ unique help people understand the experience. They’re better for standalone products, and not for experiences that are part of Shopify’s main product uniq always\nSometimes Shopify acquires a product or service that already has a unique, branded name. Even though it may become more tied to Shopify, it can keep its name to maintain its brand identity. This also helps maintain the context audiences already have about the product, like in the case of Kit.\n\nCertain standalone names use the word “Shopify” because it differentiates the product from similar ones in the industry, like Shopify Pay in comparison to\nApple Pay, or Android Pay. For more details, see the\n[guidelines for using “Shopify” in a name](/content/naming#section-does-it-need-a-branded-name-).\n\nEvocative names should:\n\n- Have a strong, independent brand identity\n- Help with branding or recall\n- Reflect the concept it represents\n- Make sense when used in marketing materials\n\nIf you work at Shopify and want to trademark a name, talk to the legal department. It’s easier to trademark unique or made-up name. These names have stronger identities, but it’s not always clear what they do.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Frenzy\n- Kit\n- Oberlo\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Flash sales app\n- The Marketing Bot\n- Drop Shipping app\n\n</div></div>\n\nSome evocative names can be more descriptive, although they’re harder to trademark if they use common terminology. Not all evocative names need t trademarked.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Burst\n- Shop Class\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Free Stock Photography\n- Learn about Shopify event\n\n</div></div>\n\nIf you’re creating a website or product for an existing brand, maintain its brand identity and keep “Shopify” out of the name.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Kylie Jenner Pop-up Shop\n- Kylie _Powered by Shopify_\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify Pop-up, featuring Kylie Jenner\n\n</div></div>\n\n---\n\n## Shopify products and features\n\nAn off-brand and unclear name can confuse your audience. It can also feel disconnected from the rest of Shopify.\n\nA good product or feature name should:\n\n- Help merchants understand what the experience represents\n- Fit into the information architecture of the product or website in which it belongs\n- Make sense when compared to other products, features, websites, or events in the same market\n- Avoid any negative or weird connotations\n\nThere are two types of approaches to naming, the\n[descriptive approach, or the evocative approach](/content/naming#section-descriptive-vs-evocative-names).\n\n### Referring to Shopify and areas in the admin\n\nUse consistent and easy to understand descriptions when referring to locations in product, especially in\n[help documentation](/content/help-documentation#navigation). Descriptive feature names aren’t [capitalized](/content/naming#section-general-guidel featuren providing steps in a workflow, it’s okay to capitalize the page name, for example, “Go to the Products page”. Note that the page name is capitalized, but “page” isn’t. forn referring to Shopify’s main product offering, use “Shopify”. The only exception is when you need to differentiate it from another product, like the butile app, or expl fornpify admin”.\n\nA good description can: exception mobileease adoption of the product area\n\n- Help establish a mental model for merchants\n- Clarify where the area fits into the product system\n- Help support staff and merchants understand each other when communicating\n\nA good description should:\n\n- Avoid jargon\n- Be used consistently\n- Describe the area it represents\n- Prioritize terminology used by merchants over industry standards\n\nUse consistent descriptions when referring to areas in the Shopify admin.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- The customer list is found on the Customers page.\n- When a new customer places an order with your store, their name and information are automatically added to your customer list.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Manage customers in Customers.\n- Customer information is automatically added to Customers in the Shopify admin.\n\n</div></div>\n\nMerchants call our main product offering “Shopify”, so we use that same terminology. terminology\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use “Shopify” when talking about our main product offering\n- Use “Shopify admin” if you need to differentiate it from the mobile app\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Don’t use “admin” or “Shopify admin” if “Shopify” will do\n\n</div></div>\n\nTop-level marketing content is created for audiences who have little context about Shopify. Since they may not know about specific Shopify products, we use\n“Shopify” here too.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Run your business using Shopify\n- Print shipping labels directly through Shopify\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Use our ecommerce platform\n- Print shipping labels directly through Shopify’s admin\n\n</div></div>\n\n### Using “app” and “channel”\n\nFor app names in areas with surrounding context, like in the app store or on the\nApps page in the Shopify admin, don’t add the word “app” to the end of the name.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Oberlo\n- Script Editor\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Oberlo app\n- Script Editor app\n\n</div></div>\n\nFor app names without surrounding context, like in search in the Shopify admin, or on a home card, add “app” so merchants know what it is.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Bulk Account Order app\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Bulk Account Order\n\n</div></div>\n\nWhen writing about channels, make it clear to merchants that they are interacting with\na channel through Shopify, and not through the other company.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- The Amazon channel now supports electronics listings\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Amazon now supports electronics listings\n\n</div></div>\n\nIf “channel” is used somewhere in surrounding content, it’s okay to drop it for titles and button copy. titles\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add Amazon\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Add Amazon channel\n\n</div></div>\n\nNot every channel is a sales channel. For example, BuzzFeed is a marketing outreach channel and Facebook is a sales and marketing channel. Clarify ch outreachen you have room, otherwise default to channel. If there’s surrounding context, you can drop channel altogether. context\nIf there’s surrounding context, drop the word channel from the name.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Google Shopping\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Google Shopping channel\n\n</div></div>\n\nIf there’s room for a description, explain the channel type.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use BuzzFeed’s marketing outreach channel to get more customers.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Use the BuzzFeed channel to get more customers.\n\n</div></div>\n\n---\n\n## General guidelines\n\nIn general, capitalize evocative names and don’t capitalize feature names. Avoid acronyms, and think about how your audience will interpret a name.\n\n### Capitalization\n\nDon’t capitalize default features. Default features are built into Shopify and merchants don’t have to sign up, add, or opt in to use them. Analytics and discounts are examples of default features.\n\nCapitalizing names should only happen:\n\n- For independently branded,\n  [evocative names](/content/naming#section-descriptive-vs-evocative-names)\n- When we want to try and claim specific words (think Tweet or Pin)\n- For names listed in top level navigation, like Products\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Shopify Hardware Store\n- Shopify Theme Store\n- Black Friday Cyber Monday (BFCM)\n- Retail Package\n- Buy Button\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify hardware store\n- Shopify theme store\n- Black friday cyber monday (bfcm)\n- Retail package\n- Buy button\n\n</div></div>\n\nNames shouldn’t be capitalized if they:\n\n- Are [descriptive](/content/naming#section-descriptive-vs-evocative-names)\n- Include common, familiar words\n- Are default features\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- analytics\n- fraud analysis\n- online store\n- themes\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify Analytics\n- Fraud Analysis\n- Online Store\n- Themes\n\n</div></div>\n\n### Acronyms and abbreviations\n\nAn acronym is a word formed from parts of an existing compound term. For example, “rich text editor” could be written as “RTE”. An abbreviation i exampleed form of a written word or phrase used in place of the whole word or phrase. “Amt” is an abbreviation for “amount”.\n\nOur stance on acronyms:\n\n- Avoid creating acronyms.\n- Acronyms take longer to understand and might reduce adoption of a product, feature, or concept.\n- Acronyms are like inside jokes—people who understand the acronym feel included in the meaning, but people who don’t feel left out and confused.\n- If you have to use an acronym, spell it out the first time you use it and follow with the acronym in brackets.\n- Internationally understood acronyms and abbreviations are acceptable, like the word “app” or “SEO”.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Rich text editor\n- Multi label printing\n- Merchant Success Manager\n- Virtual reality\n- Build a Bigger Business\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- RTE\n- MLP\n- MSM\n- VR\n- BABB\n\n</div></div>\n\nAvoid using Internet slang acronyms in Shopify products and when creating new, branded names. These acronyms are exclusive to certain online communities and branded approachable for everyday merchants.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Shop Class\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Shopify IRL\n\n</div></div>\n\nInternationally understood acronyms and abbreviations are acceptable. Some of these include time zone, tax, barcode, weight, and size abbreviations.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- SEO\n- NZDT\n- SMS\n- QR codes\n- HST\n- CVV\n- SKU\n- ISBN\n- UPC\n- GTIN\n- USD\n- 1 kg\n- 2 lbs\n- App\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Search engine optimization\n- New Zealand Daylight Time\n- Short messaging service\n- Quick response codes\n- Harmonized sales tax\n- Card verification value\n- Stock keeping unit\n- International standard book number\n- Universal product code\n- Global trade item number\n- United States Dollar\n- Kilogram\n- 2 pounds\n- Application\n\n</div></div>\n\nWhen using a country as an adjective (such as when referring to currency), you may use an abbreviated form without punctuation.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Pinterest requires your store to use US currency.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Pinterest requires your store to use United States currency.\n\n</div></div>\n\n### Similar names\n\nBeing an ecommerce platform has its naming challenges. For example, a lot of feature names could include the word “shipping” or “pay”. Think merchant-first and be descriptive to differentiate the name. Picture what it’s like to have conversations with merchants about similar names like Shopify Payments and conversationsor around our pricing plans to identify names that might be confusing. confusingming a new product or feature:\n\n- Conduct an audit of existing names to narrow down your naming choices\n- Ask the support team to see if they think it’ll conflict with another name\n- Draft a test conversation around similar sounding names\n\n### Localization and translation\n\nNames may not translate directly to other languages. Identify if you need to create a separate name, or if a direct translation will do.\n\nBefore confirming a name, check with people who work in translation and createzation to find out if:\n\n- There are cultural considerations\n- A different name for a different location would have a positive impac localization\n  Some already existing names are different depending where you’re from. For\n  example, in North America, people say, “I’ll send you a text.” In India and\n  Nordic countries, people say, “I’ll SMS you.” Do your research and find out what\n  people call things in everyday conversations.\n\nUse “text message” when writing for North American audiences. example\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- text message\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- SMS\n\n</div></div>\n\nUse SMS when writing for Indian and Nordic audiences.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- SMS\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- text message\n\n</div></div>\n\n### Initials\n\nIn languages that use logographic characters, like Japanese, name initials can have different meanings. For example, in Japanese a name like Chikako (周子) havekawa (石川) means “neighborhood stone” (周石) in initials. Check with the localization and translation team before writing something in short form in another language. localization anotheriding negative connotat anotheriding\nSome words or terms have unintended negative connotations for some audiences. Do some research to avoid associating offensive words or phrases with your product or feature name. somet by: orSaying it out loud\n\n- Getting people outside of your team to look at the name with a new perspective\n- Doing a Google search to see if it surfaces with another meaning\n\n---\n\n## Components\n\nBe strategic and consistent when naming\n[components](/components/get-started#navigation). It makes it easier to create and build products and features for Shopify when people can switch between implementations and see the same names represented throughout. For example implementationssame name across Rails, React, and Figma. It’s okay if each implementation has its own spelling convention. For example, “Account andnection” in documentation and in Figma layer names, but\n“ui_account_connection” in Rails, and “AccountConnection” in React.\n\nA good component name can:\n\n- Increase adoption of a component\n- Clarify where a component fits into our system\n- Help establish a mental model for people using the components\n\nComponent names in documentation should:\n\n- Describe the functionality they represent\n- Avoid jargon so different disciplines understand its function\n- Be written in singular, not plural, format\n\nIn documentation we write out the name without any punctuation and use sentence case, meaning, the first word is capitalized and the rest is lowercase. case\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Type scale\n- Empty state\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- TypeScale\n- EmptyState\n\n</div></div>\n\nIn code, we use the same name as the documentation, but can alter the spelling convention to suit the implementation. convention\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- TypeScale\n- EmptyState\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Type scale\n- Empty state\n\n</div></div>\n\nFor subcomponents, the same rules apply. In documentation, write out the name with a space between words, and use sentence case. with\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Layout section\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Layout.Section\n\n</div></div>\n\nFor subcomponents in the code, use a period in place of the space.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Layout.Section\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Layout section\n\n</div></div>\n\nFor all components, use American spelling:\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Layout.Center\n- Palette.Color\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Layout.Centre\n- Palette.Colour\n\n</div></div>\n\nThere is an exception: the Labelled component uses the British spelling, following the `aria-labelledby` attribute as per the [ARIA specification](https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby) itself.\n\n---\n\n## Icons\n\nIcons should be named consistently so they’re easy to find and implement across\nShopify.\n\nOverall, icon names should:\n\n- Represent the intended function of the icon\n- Avoid jargon so different disciplines understand its function\n\nProduct area icons should:\n\n- Only be used to symbolize their specific product area or function\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Home\n- Orders\n- Products\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- House\n- Invoice\n- Price tag\n\n</div></div>\n\nFunctional icons not tied to product areas should represent a clear action.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Add image\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Image\n\n</div></div>\n\nIcons with more than one function should be named to:\n\n- Represent their purpose\n- Describe how they look\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Circle alert\n- Camera\n- Clock\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Alert\n- Photography\n- Time\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Product content",
      "keywords": [
        "content standards",
        "content guidelines",
        "content strategy practices",
        "interface content",
        "strategic language",
        "edit content",
        "editing content",
        "reading level",
        "writes",
        "writing",
        "writing tips",
        "language tips",
        "content tips",
        "designing",
        "strategic designing",
        "action",
        "consistency",
        "consistent",
        "writing public-facing text",
        "public-facing text",
        "writing public-facing copy",
        "public-facing copy",
        "writing public-facing content",
        "public-facing content"
      ]
    },
    "intro": "Thoughtful, consistent interface content is a core element of a well-designed user experience.",
    "content": "\n\n# Product content\n\nThoughtful, consistent interface content is a core element of a well-designed user experience.\n\nOur content standards will help you understand how to think strategically about the language in your products and apps. They’ll also give you clear, tactical thegestions designed to help you use language to craft better experiences. suggestionsnent](/components/get-started) also includes content guidelines about suggestionsnentr specific interface elements. how how\n\n## Respond to merchant needs\n\nNot everyone is a confident writer, but everyone can improve their content by making sure it responds to the needs of their audience. Keep in mind that rea makingn Shopify every day to run their businesses. The product, feature, or app you’re building can make a big difference to the people using it. Take some t making relyse plain language youpify merchants are busy people who may be running their online business in youition to having a full-time job, managing their family life, and doing a million other things. They’re also located all over the world, have varying youels of literacy, and some m toopify using plain language doesn’t mean dumbing content down. It’s millionaking sure language is straightforward and communicates concepts as millionntly as possible. As a benchmark, we consider plain language to be a U addition\nIf you create content for Shopify’s other audiences, such as [merchant’s cu million toopifys aboutte short sentences (no more than 15–20 words). efficientlyngs and bullets to make your content easier to scan. aboutte jargon and always choose a short, simple word over a long and complicated o levelspsidioms and phrases with indirect or ironic meanings.\n\n- Only use industry-standard terminology when you have reason to believe it will improve understanding. Spend time researching what words people use, rather than defaulting to what corporations call things.\n- Edit unnecessary or repeated words.\n- Write for small screens first. Constraints can help you focus on the most important message.\n- Read your content out loud. If you get tripped up or it doesn’t sound like something a human would say, your content needs to be edited.\n\n---\n\n## Encourage action\n\nPeople use Shopify to get things done, whether they’re managing a store, or making a purchase. Content should be written and structured to help the reader understand and take the most important actions.\n\n### Tips\n\n- Calls to action on buttons and links should start with a strong verb that describes the action a person will take when they click.\n- Always prioritize the most important information and task — don’t make people dig to find what they care about. toBreak down complicated tasks into steps that help people focus on one thing at a time.\n- Use the [active voice](/content/grammar-and-mechanics#basics) to clarify the subject and the action.\n\n---\n\n## Be consistent\n\nTo help your audience understand key concepts and actions they can take, use consistent nouns (words used to identify people, places, or things) and verbs\n(action words) wherever possible.\n\n### Tips\n\n- Get in the habit of making a list of all the most important verbs and nouns in the experience you’re building.\n- Look at your word list. Does each word clearly describe the object or action it represents in the simplest way possible?\n- Does your language reflect how people think and the words they use?\n- Identify synonyms (a word or phrase that means exactly or nearly the same as another word or phrase in the same language), and eliminate them. Each important object and action should have a single word to represent it.\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "App release notes",
      "keywords": [
        "release",
        "notes",
        "app",
        "updates",
        "fixes"
      ]
    },
    "intro": "Merchants need to quickly understand what’s changed in our apps and why, so they can get back to running their business.",
    "content": "\n\n# App release notes\n\nMerchants need to quickly understand what’s changed in our apps and why, so they can get back to running their business.\n\nTo “get out of the way” of our merchants, write notes that are functional, reliable, and usable.\n\n---\n\n## Overview\n\nApp release notes should:\n\n- **Be helpful and informative.** Focus on important information that merchants need to know, without being overly technical or promotional.\n- **Use straightforward and plain language.** Explain what changed and what the benefit is as efficiently and clearly as possible.\n- **Reflect the scale of the release**—if it’s truly significant, tell people.\n- **Be specific.** Never use generic descriptions like “Bug fixes and improvements.” If we fixed a problem or updated something, tell merchants what we fixed or updated.\n- **Be accessible to all.** Merchants come from different backgrounds, locations, and levels of experience. We want everyone to understand us.\n- **Avoid being clever or congratulatory.** We build products that affect people’s livelihoods: even if we played a role in their success, this isn’t about us.\n- **Avoid witticisms or humour; always consider the audience’s perspective first.** Shopify’s brand is not humorous and jokes can be read as an obstacle to getting back to work.\n\n---\n\n## Recognizably Shopify\n\nEach product has its own personality: our Android and iOS apps are different from POS or Shop. However, they should each be recognizably Shopify, and should follow our principles and rules.\n\n### Hierarchy\n\n- Prioritize notes in terms of importance—most important first\n- Start with updates unless the bug fix is critical\n- Group related fixes or updates together when possible—less is more\n- Releases are capped at 500 characters on Android and 4000 on iOS—aim to keep them under 500 characters\n\n### Writing style\n\n- Use the active voice and the past tense (“We fixed” or “We updated”) to explain that action we took\n- Use complete sentences\n- Explain when changes are “based on merchant feedback” or when “we received reports of…” something that needed to be fixed\n- When there’s feature parity across platforms (iOS, Android), use the same language\n\n### Punctuation\n\n- Use bullet points\n- End sentences with periods\n- Use commas (,) but don’t use semicolons (;) colons (:), exclamation marks (!), ellipses (...), or question marks (?)\n- Use em-dashes (—) to help with readability while remaining conversational\n- Don’t use any text formatting, including bold and italics\n\n---\n\n## Sentence patterns\n\nThere are many ways to describe an update or change. Try to choose the pattern that explains what’s changed and why it matters in the simplest way possible. When in doubt, boring is best.\n\n### A product update or new feature\n\nBe specific about what can be achieved and where it can be achieved with the new feature:\n\n- {x} is now available.\n- You can now {x}.\n  - You can now manage your local deliveries from the orders screen.\n- We made it {x} so that {y}.\n  - We made it quicker to do common actions across Shopify. You can now use context menus on iOS 13 or later.\n- We updated {x}.\n  - We updated the Support screen so it loads faster.\n- You asked for {x}, so we added {y}.\n- We heard your feedback and made {x} change based on it.\n\n### A resolved crash or bug\n\nBe specific about what was broken and what is now fixed.\n\n- We fixed an issue with {x}.\n  - We fixed a crash that affected unlocking the app with Face ID or Touch ID.\n- You couldn’t {x}. We fixed that.\n  - Sometimes you couldn’t share, edit, or duplicate discounts. We fixed this. (Use this pattern sparingly, and not for major fixes)\n- We received reports of {x} and made {y} changes.\n\n### Standalone updates\n\nIf a release is large and affects a majority of merchants, introduce the update and then use bullet points to break down each smaller part:\n\nThe Shopify mobile app now uses {x} to do {y}.\n\n- Benefit 1\n- Benefit 2\n- Benefit 3\n\n### Generic updates\n\nReleases should always be specific enough to avoid general or generic messaging.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- We fixed an issue with archiving draft orders.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Various bug fixes and updates.\n\n</div></div>\n\n---\n\n## Notes structure\n\nAlways start releases with updates unless the bug fix is urgent.\n\n### Multiple updates\n\nUse in-line headers to indicate what’s an update and what’s a bug fix, for example:\n\nUpdate: View and fulfill local delivery orders from the smart grid or Orders page.\n\nBug fix: Logging out from one store and into another no longer causes the app to crash.\n\n### Single updates\n\nIf we’re announcing just one type of release (update or bug fix), use one header. For example:\n\nBug fix: Logging out from one store and into another no longer causes the app to crash.\n\n### Mixed updates\n\nUse in-line headers and indentation to indicate what's a standalone update, a regular update, and a bug fix. For example:\n\nUpdate: The Shopify mobile app now uses Shopify ID, so you can access multiple Shopify accounts with a single login and password.\n\n- Quickly switch between your Shopify stores in the mobile app.\n- Access Academy, Exchange Marketplace, Shopify Community, and our Partner Program without logging in again.\n\nUpdate: When editing an order, you can now add the same product more than once.\n\nBug fix: Swapping from one store and into another no longer causes the app to crash\n\n---\n\n## Example release notes\n\nFor everyday fixes and updates, specify what was changed in a simple way.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- We fixed an issue with archiving draft orders.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Various bug fixes and updates.\n\n</div></div>\n\nFor infrastructure updates, explain the merchant benefit.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- You told us the app was hard to use on slower connections—it now runs 4x faster.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- We put the app on a diet: it’s fast and hot, just like you.\n\n</div></div>\n\nFor technical updates, be specific but keep the language simple.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- We fixed a crash that sometimes affected iPhone 5 and 4th generation iPads.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- We fixed a crash that occurred on some 32 bit older devices.\n\n</div></div>\n\nAvoid humour.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- We improved the speed of the app by reducing its size.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- According to our engineers, the glass was bigger than it needed to be; we made the glass smaller.\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Voice and tone",
      "keywords": [
        "sound like Shopify",
        "personality of Shopify",
        "brand personality",
        "empathy",
        "merchant feelings",
        "merchant emotions",
        "merchant context",
        "content voice",
        "content tone"
      ]
    },
    "intro": "Learn how to apply Shopify’s voice and choose the right tone, no matter what product, feature, or app you’re building.",
    "content": "\n\n# Voice and tone\n\nLearn how to apply Shopify’s voice and choose the right tone, no matter what product, feature, or app you’re building.\n\n---\n\n## What are voice and tone?\n\nShopify’s voice is a reflection of who we are. We should always sound like\nShopify.\n\nAt the same time, some aspects of our personality might be more or less apparent, depending on the audience and their context. That’s tone.\n\n---\n\n## Shopify’s voice\n\nOur voice is a reflection of who we are. So who are we?\n\n**Simply put, we’re a company, built by real people who understand this business and care about helping others succeed.**\n\n**That should be clear every time someone uses our products or services.**\n\nMost often, we show this through well-crafted tools that help people get their jobs done efficiently. But there are times when our personalities and perspectives should be more apparent. In those times, we should adapt our tone to respond to people in an appropriate and meaningful way.\n\nYou'll find more specific guidelines on how to adapt your tone to different situations in this guide.\n\n---\n\n## Voice guidelines\n\nAs Shopify’s voice, we should always:\n\n### Be real, but not too tough or overly familiar\n\n- Use business casual language—be plain-spoken, not pretentious or overly playful\n- Be upfront and honest with merchants, even if we make a mistake\n- Communicate with clarity and empathy—be direct, not insensitive\n\n### Be proactive, but not needy or pushy\n\n- Offer merchants sincere encouragement and practical advice\n- Clearly explain how merchants are impacted when something goes wrong, but don’t overexplain with redundant content\n\n### Be dynamic, but not scattered or impulsive\n\n- Communicate in a way that respects merchant emotion and context\n- Avoid words that generalize success like “every,” “all,” and “most”\n- Use language that supports action, movement, and progress\n\n### Guide, but don’t handhold or prescribe\n\n- Use expertise to help merchants succeed; don’t talk down to them\n- Be specific when explaining benefits without making things sound better than they are\n- Teach people the “why” and “how” behind actions—don’t just tell them to do something\n\n---\n\n## Adapting tone by situation\n\nOur tone adapts to the context. We’ll use certain voice attributes more or less based on the situation.\n\nOften people frame tone guidance around adapting to the emotional state of the audience. The reality is we never know a person’s emotional state. Even when things seem the most positive, we can’t be sure.\n\nWhile it’s helpful to consider how your audience is likely to feel, don’t assume or tell them how to feel. Instead, focus on the specifics of the situation and less on the emotions. Here are some of the most common situations to consider.\n\n### Everyday tasks and activities\n\nWhen everything is working as it should, our goal is to give people what they need to get work done, without getting in the way or drawing attention to ourselves. We want the audience to know what something is or that something has happened as expected.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLook for the simplest way to communicate information—words aren’t always necessary.\n\n![Images showing icons of an eye representing a “view” action, a picture frame representing the concept of \"images\" and a spyglass representing the action of \"search\".](/images/foundations/content/voice-and-tone/view-icon@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse overly complicated or intimidating language.\n\n![Image showing a toggle switch on a card labeled “Use Biometrics for Authentication”](/images/foundations/content/voice-and-tone/biometrics-toggle-card@2x.png)\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nBe consistent for identical actions or destinations when possible.\n\n- _Delete product_\n- _Delete collection_\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAdd extra text just to fill space.\n\n![Image showing a text field for notes labeled “Add a note” followed by an ellipsis](/images/foundations/content/voice-and-tone/add-note-field@2x.png)\n\n</div></div>\n\n### Learning and education\n\nSometimes it helps to give more explanation or education. In these situations, we want to make sure people feel confident in their actions and in our capabilities.\n\nSome people will want to be guided step-by-step through the process, while others may just want to try it out and learn on their own. Look for ways to give them both options.\n\nRemember, they may have sought this out specifically or we may have recommended it to them, so don’t assume that they want or need to use it.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nHelp people understand why they should do something, not just how.\n\n![A home card suggesting to add a shipping policy to your store to build trust with customers](/images/foundations/content/voice-and-tone/shipping-policy-card@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nOversell or overpromise.\n\n_Create a new campaign and you could double your sales this holiday season._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nBreak down complicated tasks into steps that help people focus on one thing at a time.\n\n![A home card with separate tabs for adding a product, customizing a theme, and adding a domain](/images/foundations/content/voice-and-tone/onboarding-tasks@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nBe overly prescriptive about how someone should use a feature.\n\n_You need to add at least 10 products before opening your store._\n\n</div></div>\n\n### Simple errors\n\nWhile we do our best to be proactive and protect against unexpected events, they still happen. These are often simple mistakes or roadblocks to action that can easily be fixed. Although they aren’t necessarily errors or problems, they can feel that way at first.\n\nIn this case, our job is to help people understand what happened so that they can get back to work as quickly as possible\n\nRead the [error message guidelines](https://polaris.shopify.com/patterns/error-messages) for more detailed guidance.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nClearly explain the situation and how it can be resolved.\n\n_Product weight needs to be positive. Change the product weight to be greater than or equal to 0 and try again._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse overly dramatic or scary words for simple errors.\n\n_Bad request, forbidden, fatal, expectation failed, unresolved, invalid_\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLook for ways to help people resolve problems automatically.\n\n![An email input form element with a typo in the inputted email address and a hint text underneath it guiding the user to fix the typo.](/images/foundations/content/voice-and-tone/email-error-message@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse error numbers or code unless they’re easily recognizable by people and help them solve the problem.\n\n![Error modal with a confusing error code stating “200 OK”](/images/foundations/content/voice-and-tone/channel-not-found-error@2x.png)\n\n</div></div>\n\n### Acknowledging effort, progress, or completion\n\nThere are situations where we want to acknowledge that someone completed a complex activity or difficult task.\n\nWhile we don’t need to celebrate the accomplishment, we should recognize that they put in the time and effort. Depending on the level of effort, these may be simple confirmations or more active recognition that they completed something difficult.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIf this is a task people do regularly, make it clear that the step is complete in a simple and non-intrusive way, like a [toast](/components/toast). Consider ways to confirm completion without words or messaging.\n\n_Product saved_\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAssume people are excited or celebrating. They may be annoyed if it was a particularly long process or if the immediate benefits aren’t clear.\n\n_Congrats! You set up your single login for Shopify._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIf the task was something we initiated or required, thank them for their time.\n\n_Thanks for taking the time to share your feedback._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nRefer to simple actions or completed steps as “successes.”\n\n_You successfully added a product._\n\n</div></div>\n\n### Motivate or encourage action\n\nThese are situations when we want to keep people moving along a desired path. In most cases, we do that with direct information and clear steps to encourage action.\n\nWe don’t want to be too overzealous or action-driven here—it’s more about helping people understand the next step and giving them the context they need to take it.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nHelp people understand what the next steps are and why they should take them.\n\n_Your email address is connected to 8 accounts. Set up a single login to switch between stores faster and log in less often._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAssume the next step or outcome is guaranteed.\n\n_You’re just a few steps away from receiving your first order._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nProvide guidance to help people understand if the decision is right for them.\n\n_Based on your type of business, this is the POS hardware we recommend:._\n\n</div></div>\n\n### Serious problems or errors\n\nThere are times when we need to share bad news. This might be an outage or an error, or it may be a product that we’re no longer supporting. These are hopefully rare situations, but they will happen.\n\nIn this case, there’s a serious risk of damaging trust and hurting our relationship with the audience, so we should be very careful about how we communicate.\n\nRead the [error message guidelines](https://polaris.shopify.com/patterns/error-messages) for more detailed guidance.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nExplain the impact on their business clearly, without using confusing or scary language.\n\n_Some of today’s sales data hasn’t been updated yet. This will be fixed shortly. Your data is safe, and your sales are not affected._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nAsk merchants to trust us without providing data or context.\n\n_Today’s sales data might not be accurate, but don’t worry—it’s just temporary._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nApologize and empathize when we’re at fault, but within reason.\n\n_All systems are now fully operational. We recognize and apologize for the stress, concern, and impact this outage had on your business. In the coming days we will be working to fully understand how this widespread internet infrastructure failure affected our platform._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nProvide clear steps to resolve issues. If there’s no solution, be direct about what that means for the merchant and what we’re doing about it.\n\n_Your Shopify Payments account is on hold. Please attach your State Tax Exemption Certificate for review._\n\n</div></div>\n\n### Announcing new features and updates\n\nIt’s exciting to launch a new feature or update, but always consider the audience’s perspective first. While we may be excited about the benefits and capabilities, change can be intimidating or annoying for users.\n\nWhen you’re announcing something new, focus on educating and explaining what it is, what it’s used for, and what the user can expect.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nPitch our product by explaining the specific merchant benefits.\n\n_**Introducing the new Buy Button**_\n\n_Make it your own with custom fonts, colors, and styles. It also loads 50% faster so your visitors won’t miss it._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nJust talk about ourselves and assume the experience for merchants will be easy.\n\n_**Get Shopify’s new Buy Button**_\n\n_It’s never been easier to customize the fonts, colors, and styles of Buy Buttons. It’s also twice as fast._\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nIf possible, let users dismiss announcements or postpone changes until they’re ready.\n\n![A modal with a secondary button option to “remind me later” for a “single login” feature.](/images/foundations/content/voice-and-tone/remind-later-button@2x.png)\n\n</div></div>\n\n### Celebrations and congratulations\n\nThere are occasionally times when we want to celebrate an event or milestone, or to congratulate someone for an important accomplishment. In reality, this should be one of the least common situations we encounter.\n\nLet audiences know that we understand that it’s an important moment and we’re excited for them, but be careful not to take credit for it. Even if we played a role in their success, this isn’t about us.\n\nRemember, this is about celebrating their accomplishments, not ours. Launching something new? You probably don’t need to celebrate with them. Read our guidance around [announcing new features and updates](#announcing-features).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nOnly celebrate truly important or monumental situations when the audience likely feels proud, excited, or satisfied.\n\n_Your store is 1 year old today! Here’s to many more._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nCelebrate completing tasks or processes that people don’t actually want to celebrate. Did they finish something difficult or do something for us? You may want to acknowledge their effort instead.\n\n_You set up your payment providers, congrats!_\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nExpress genuine happiness for merchants. Recognize their accomplishment and congratulate them on a job well done.\n\n_You launched your store! Nice work._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nTake credit for merchants’ successes or presume to know what they need.\n\n_We did it! Congrats on your first sale._\n\n</div></div>\n",
    "category": "content"
  },
  {
    "frontMatter": {
      "name": "Colors",
      "keywords": [
        "visual patterns",
        "color strategy",
        "color use"
      ]
    },
    "intro": "Our color system builds on the recognition of the Shopify brand colors to make the admin interface more usable.",
    "content": "\n\n# Colors\n\nOur color system builds on the recognition of the Shopify brand colors to make the admin interface more usable.\n\n![Diagram showcasing layers of color of various hues](/images/foundations/design/colors/color-intro@2x.png)\n\n---\n\n## Principles\n\n### Communication is key\n\nAlthough we value an aesthetically pleasing use of color, we place a higher value on clear communication. Color supports the purpose of the content, communicating things like hierarchy of information, interactive states, and the difference between distinct elements.\n\n### Colors have meaning\n\nColors have assigned roles, which hold a specific meaning based on how they function within the interface. Defined color roles make things easy to modify and customize later. They also extend the color system so it works across any touchpoint at Shopify.\n\n### Colors follow accessibility guidelines\n\nThe color system is designed within the HSLuv color space to generate themes that meet WCAG 2.1 compliant contrast ratios. This makes things easier to find, identify, and interact with. It also makes the whole experience more accessible for merchants who are color blind or who have low vision. However you should never convey information using color alone.\n\n---\n\n## Color roles\n\n![Diagram of colors representing the new Polaris color system](/images/foundations/design/colors/color-roles@2x.png)\n\nWe define colors based on the role they play in the interface. There are 10 color roles, which we use to generate the values of all the color variants in the palette.\n\n![Diagram presenting color variants in a user interface](/images/foundations/design/colors/color-variants@2x.png)\n\n### Color variants\n\nColor variants are variables that apply color to the UI, and their values are generated from the color roles. Color variants are available as tokens.\n\n![Diagram presenting a color naming pattern for the color token Border Success Subdued](/images/foundations/design/colors/color-variant-naming@2x.png)\n\nVariants share a naming pattern that references their color role, the interaction state they define, and any UI elements they’re linked to.\n\n---\n\n## The color system in action\n\nHow the color roles relate to the variants, and how they’re applied across the interface.\n\n![Diagram presenting the surface color role, with mainly white and gray colors](/images/foundations/design/colors/color-role-surface@2x.png)\n\n### Surface\n\nSurface colors affect surfaces of components, such as page, card, sheet, and popover.\n\n![Diagram presenting the on surface color role, with mainly black and darker gray colors](/images/foundations/design/colors/color-role-onsurface@2x.png)\n\n### On surface\n\nApply on-surface colors to elements that appear on neutral surfaces, usually borders, secondary icons, and text elements.\n\n![Diagram presenting the primary color role, with mainly green colors](/images/foundations/design/colors/color-role-primary@2x.png)\n\n### Primary\n\nUse primary colors for primary actions like buttons, icons and text on navigation and tabs, and for the background in navigation and tab interactive states.\n\n![Diagram presenting the secondary color role, with mainly white and gray colors](/images/foundations/design/colors/color-role-secondary@2x.png)\n\n### Secondary\n\nUse secondary colors for secondary and tertiary buttons and the background of form elements.\n\n![Diagram presenting the interactive color role, with mainly blue colors](/images/foundations/design/colors/color-role-interactive@2x.png)\n\n### Interactive\n\nUse interactive colors for things like links, focus indicators, and selected interactive states.\n\n![Diagram presenting the success color role, with mainly green colors](/images/foundations/design/colors/color-role-success@2x.png)\n\n### Success\n\nSuccess colors indicate something positive, like the success of a merchant action or to illustrate growth.\n\n![Diagram presenting the warning color role, with mainly yellow and orange colors](/images/foundations/design/colors/color-role-warning@2x.png)\n\n### Warning\n\nWarning colors let the merchant know they need to take action, and are applied to badges, banners, and exception lists.\n\n![Diagram presenting the critical color role, with mainly red colors](/images/foundations/design/colors/color-role-critical@2x.png)\n\n### Critical\n\nCritical colors are for destructive interactive elements, errors, and critical events that require immediate action.\n\n![Diagram presenting the highlight color role, with mainly cyan and teal colors](/images/foundations/design/colors/color-role-highlight@2x.png)\n\n### Highlight\n\nHighlight colors indicate important elements that don’t require immediate action. They’re used with informational banners and badges, indicators that draw attention to new information, loading or progress bars, and data visualization.\n\n![Diagram presenting the decorative color role, with a variety of colors like yellow, turquoise and rose](/images/foundations/design/colors/color-role-decorative@2x.png)\n\n### Decorative\n\nDecorative colors are for expressive communications that assert the Shopify brand presence.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Data visualizations",
      "keywords": [
        "data viz"
      ]
    },
    "intro": "Visualizations surface patterns in data, and provide immediate answers to a single, specific question.",
    "content": "\n\n# Data visualizations\n\nVisualizations surface patterns in data, and provide immediate answers to a single, specific question.\n\nThis section outlines data visualization practices at Shopify and how to leverage them.\n\n---\n\n## Data visualizations at Shopify\n\nThe data visualization process always begins with a set of data, a question, and analysis of the data to find the answer. Each visualization should focus on answering a single question about the dataset. For example, “What are my sales over time?”\n\nBy maintaining consistent styles and formats for our data visualizations, we ensure that data is presented in a truthful and accurate manner to maintain integrity with merchants.\n\n---\n\n## Guidelines\n\nData visualization should be approached by:\n\n### Solving a problem\n\nHave a clear question that needs to be answered. If multiple answers to multiple questions are illustrated in a visualization, it will become over complicated and hard to understand.\n\n### Testing with real data\n\nTesting with real data will reveal the effectiveness of the visualization. Also test when there are a few data points (one or two) or many data points (100 or more).\n\n### Scaling by number of datapoints\n\nThink about how the visualization will scale with more or fewer data points. Look out for cases where data is sparse (mostly zero) or spiky (some values are much\nlarger than others).\n\n---\n\n## Five core traits\n\nAn effective data visualization strikes the right balance between the five core traits: accuracy, intuitiveness, engagement, focus, and data granularity. It’s important to be intentional about which of these you focus on, and which are less important, in order to answer your specific question in the best way for your target audience. Understanding these traits help you choose between the many ways to visualize data by giving you a language for evaluating a visualization's effectiveness.\n\n### Accuracy\n\nAccuracy is about how faithfully the visualization matches the original data set. How much accuracy is needed to send your message across? A high level of accuracy may not always be needed to convey a trend or a pattern.\n\n### Intuitiveness\n\nIntuitiveness is about the ease of interpreting the visualization. Will merchants immediately understand what’s being represented, or will they need instructions? More intuitive is usually better, but sometimes it comes at the cost of flexibility.\n\n### Engagement\n\nEngagement is about how much attention the visualization attracts at a glance. Is it the star of the show, or does it sit in the background? More engagement is not always better—sometimes the best visualization is one that plays a supporting role.\n\n### Focus\n\nFocus is about how merchants’ attention is directed. Is one pattern or trend surfaced more prominently than others, or are there several trends that are given equal weight? Highly focused visualizations decrease cognitive overload, but restrict the breadth of the message you are able to convey.\n\n### Data Granularity\n\nData granularity is about the level of detail of the data set presented in the visualization. More granular means more data points, and possibly more cognitive processing, but less granular is less detailed. The right level of data granularity depends entirely on the specific question you’re trying to answer and the audience you’re communicating to.\n\n---\n\n## Axis and labelling conventions\n\nAll standard charts that show quantitative data have 2 axes that should be labeled for clarity.\n\n- Labelling should be outside and separate from the data area. This ensures the user understands the range of the data without taking focus away from the data.\n- Ensure that all labels are clear and accurate in what they represent. Use simple and short language.\n\n---\n\n## Granular guidelines\n\n### Axis lines\n\nAxis lines should be used as a guideline to show quantitative data, yet be unobtrusive.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nEnsure axis lines only appear where the data appears.\n\n![A light grey chart with axis lines](/images/foundations/design/data-visualizations/do/ensure-axis-lines-only-appear-where-data-appears@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse bleeding axis lines to the edge of the screen.\n\n![A chart with axis lines filling the screen](/images/foundations/design/data-visualizations/dont/use-bleeding-axis-lines-to-the-edge-of-the-screen@2x.png)\n\n</div></div>\n\n### Skipping labels\n\nLabelling the tick marks on both the y-axis and x-axis helps the visualization become more clear in what it represents.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nSkip labels in regular intervals.\n\n![A bar chart plotting time using 12am, 8am, 12pm, and 8pm](/images/foundations/design/data-visualizations/do/skip-labels-in-regular-intervals@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nTry to squeeze all labels together.\n\n![A chart plotting time with too many axis labels](/images/foundations/design/data-visualizations/dont/squeeze-all-labels-together@2x.png)\n\n</div></div>\n\n### X-axis Abbreviations\n\nShopify uses standard abbreviations for months and weekdays in order to reduce clutter in visualizations.\n\n- Use 12 hour format for time, with lowercase letters (12am, 6pm)\n- Use the first three letters for days of the week (Sun, Mon)\n- Use the first three letters for months (Feb, Mar)\n- For specific days, use the format ‘day + month’ (10 Apr, 11 Apr)\n- For specific months, use the format month + year (Apr 2011, May 2017)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse standard abbreviations for labeling.\n\n![A chart showing the days of the week abbreviated to Mon, Tues, and so on](/images/foundations/design/data-visualizations/do/use-standard-abbreviations-for-labeling2@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nSlant labels to make them fit.\n\n![A chart with labels slanted at a 45 degree angle](/images/foundations/design/data-visualizations/dont/slant-labels-to-make-them-fit2@2x.png)\n\n</div></div>\n\n### Y-Axis Abbreviations\n\nShopify uses standard monetary abbreviations for the y-axis to reduce clutter.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nAbbreviate using ‘k’ for thousand, ‘b’ for billion.\n\n![A chart with a y-axis representing a thousand dollars as “$1.0k”](/images/foundations/design/data-visualizations/do/abbreviate-using-k-for-thousand-b-for-billion-and-include-the-unit@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nGo over 3 numeric characters, 1 decimal, or 1 letter.\n\n![A chart with a y-axis that represents the value of a thousand and one dollars as “$1.001k”](/images/foundations/design/data-visualizations/dont/go-over-3-numeric-characters-1-decimal-and-1-single-letter@2x.png)\n\n</div></div>\n\n### X-axis Labelling conventions\n\nLabels should be clear and concise.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nCenter all labels on the bar and the tick mark.\n\n![A bar chart with the abbreviated days of the week centered on the ticks which are centered on the bars that they represent](/images/foundations/design/data-visualizations/do/center-all-labels-with-the-bar-and-tick2@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse decimals on the x-axis labels.\n\n![A bar chart plotting numbers with decimals on the x-axis](/images/foundations/design/data-visualizations/dont/use-decimals-on-x-axis-labels2@2x.png)\n\n</div></div>\n\n### Y-axis Labelling conventions\n\nLabels should be clear and concise.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLeft align labels and keep them above y-axis lines.\n\n![A chart with a dollar value on the y-axis that’s aligned to the left and raised slightly from the grey axis](/images/foundations/design/data-visualizations/do/left-align-labels-and-keep-them-slightly-above-the-y-axis-lines@2x.png)\n\n</div></div>\n\n---\n\n## Color palettes\n\nColor in data visualization has a very specific meaning. The data visualization color palette provides specific colors that can be used alone or in a group, depending on the intent.\n\n### Single data series\n\nUse when there is a single data series. For example, a bar chart, column chart, or a single line chart.\n\n![A line graph with y-axis and x-axis labels and a single purple line plotting data](/images/foundations/design/data-visualizations/single-data-series@2x.png)\n\n![A line chart with 2 different colors comparing current values to a past value](/images/foundations/design/data-visualizations/single-comparison-to-past@2x.png)\n\n### Single comparison to past\n\nThis is used when the data set is being compared to to its past values. For example, total sales by month, this year, compared to last year. In this case, the current value will be purple and the past value will be grey.\n\n### Multiseries data\n\nUsed when there are multiple data sets to compare. For example, a multiseries line chart. Go down the list as the number of datasets increase.\n\n![A line chart with multiple data points represented by different colors](/images/foundations/design/data-visualizations/multiseries-data@2x.png)\n\n![One example of an upward trend in percentage sales represented in gren and another example of a downward trend in](/images/foundations/design/data-visualizations/biased-charts@2x.png)\n\n### Biased\n\nUsed when certain data need is displayed in a negative or positive light. For example, showing positive or negative change relative to a reference value.\n\n---\n\n## Horizontal bar charts\n\nBar charts are used for comparing discrete categories. Use a bar chart when there is a constraint to the number of data points that can appear on the visualization, otherwise it becomes hard to scale.\n\n### Best used for\n\nShowing discrete categories of data, like {products} vs {sales}.\n\n### Don’t use\n\nWhen the number of data points can exceed 6. In this case, use a table.\n\n### Bar chart labels\n\nLabel each bar with what it’s displaying, as well as the value. For more best practices, visit axis and label conventions.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nInclude a label on each bar. If the bar is too small, include it outside of the bar.\n\n![A horizontal bar chart with 2 dollar values within the bar and the lowest value outside of the bar to the right](/images/foundations/design/data-visualizations/do/include-a-label-on-each-bar-if-the-bar-is-too-small-include-it-outside-of-the-bar@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nInclude a label on top of each bar to display what data it’s showing.\n\n![A horizontal bar chart displaying the country represented by each bar](/images/foundations/design/data-visualizations/do/include-a-label-on-top-of-each-bar-to-display-what-data-it-is-showing@2x.png)\n\n</div></div>\n\n### Color\n\nUse one color for all bars.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nGive negative bars 60% opacity.\n\n![A horizontal bar chart with solid purple positive bars and purple negative bars set to 60% opacity](/images/foundations/design/data-visualizations/do/give-negative-bars-60-opacity@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse multiple colors for the bars.\n\n![A horizontal bar chart using a different color for each bar](/images/foundations/design/data-visualizations/dont/use-multiple-colors-for-the-bars@2x.png)\n\n</div></div>\n\n### Bar positioning\n\nMake sure the bars are proportional in width, roughly twice the size of the space between the bars.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nMake the width of each bar about twice as wide as the space between them.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nMake the bars too skinny.\n\n</div></div>\n\n---\n\n## Vertical column charts\n\nColumn charts are used to show change over time, trends, and individual data points. Use column charts for when the number of data points is fewer than 30, or else use a line chart.\n\n### Best used for\n\n- Showing continuous data like sales per hour, or orders per month\n- Showing smaller granularities of time (hourly, daily, weekly, and monthly)\n\n### Don’t use\n\nWhen the number of data points can exceed 31. In this case, use a [line chart](/design/data-visualizations#line-charts).\n\n### Color\n\nAll bars should be the same color.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse one color for all bars.\n\n![A bar chart showing a data trend with the same bar color](/images/foundations/design/data-visualizations/do/use-one-color-for-all-bars@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse multiple colors for the bars.\n\n![A bar chart showing the same data point with different colors](/images/foundations/design/data-visualizations/dont/use-multiple-colors-for-the-bars2@2x.png)\n\n</div></div>\n\n### Bar positioning\n\nMake sure the bars are proportional in width, roughly twice the size of the space between the bars.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nMake the width of each bar about twice as wide as the space between them.\n\n![A bar chart properly formatted with spaces half the size of each bar](/images/foundations/design/data-visualizations/do/make-the-width-of-each-bar-about-twice-the-space-between-them@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nMake the bars too skinny.\n\n![A bar chart with spaces 4 times larger than the bar itself](/images/foundations/design/data-visualizations/dont/make-the-bars-too-skinny@2x.png)\n\n</div></div>\n\n### Interactivity\n\nInclude some interactivity on the bars upon hover since users will be looking at individual data points. The top line of the tooltip should follow x-axis abbreviation and labelling guidelines, while the bottom line tooltip should follow y-axis abbreviation and labelling guidelines.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nInclude tooltips for x-axis and y-axis values.\n\n![A bar chart with a tool tip on a bar displaying the date axis point and the dollar value axis point](/images/foundations/design/data-visualizations/do/include-tooltips-with-both-the-x-axis-value-and-y-axis-value@2x.png)\n\n</div></div>\n\n---\n\n## Line charts\n\nA line chart is created by connecting a series of data points together with a line. Line charts are good to show change over time, comparisons, and trends. Use line charts when the number of data points is more than 30.\n\n### Best used for\n\n- Showing continuous data like sales or orders over time\n- Showing larger granularities of time (yearly, or quarterly)\n- Spotting overall trends and shapes of data\n\n### Axis and labelling\n\nSet up the chart area using the [axis and labelling guidelines](/design/data-visualizations#axis-and-labelling-conventions)\n\n---\n\n## Multiline charts\n\nLine graphs work well when multiple datasets need to be compared. Use the [color palette](/design/colors#color-palette) to select colors.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse contrasting color and include a legend.\n\n![A line chart with 2 lines using purple and teal to represent the years 2015 and 2016](/images/foundations/design/data-visualizations/do/use-contrasting-colors-and-include-a-legend@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse more than 4 lines.\n\n![A line chart with 4 lines of different colors](/images/foundations/design/data-visualizations/dont/use-more-than-4-lines-try-to-stick-to-2-lines@2x.png)\n\n</div></div>\n\n---\n\n## Display metrics\n\nA display metric is a quantifiable measure that is used to track and display the status of a specific process. Examples include a sum, an average, or a movement in a positive or negative direction.\n\n### Best used for\n\nShowing a single value with a base unit.\n\n### Units\n\nMetrics should be paired with their base unit in close proximity to the number. Use concise and clear language for metrics.\n\n### Scope\n\nMetrics should be scoped to indicate the timeline of the data.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nInclude a dimension of time to scope the value.\n\n![Diagram showing “sales this week” with a numeric dollar value](/images/foundations/design/data-visualizations/do/include-a-dimension-of-time-to-scope-the-value@2x.png)\n\n</div></div>\n\n### Movement\n\nIf needed, consider including a comparison indicator, such as comparison to the previous time or average.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse green for positive movement.\n\n![Diagram of green being used to signify an upward trend in data](/images/foundations/design/data-visualizations/do/use-green-to-signify-positive-movement@2x.png)\n\nUse red for negative movement.\n\n![Diagram of red being used to signify a downward trend in data](/images/foundations/design/data-visualizations/do/use-red-to-signify-negative-movement@2x.png)\n\n</div></div>\n\n---\n\n## Tables\n\nA table is a good way to showcase a large amount of information which has a variety of columns and data to show for each entity. A table should be used when multiple metrics and categories need to be presented together, and accurate lookup of the data values is more important that showing patterns in the data.\n\n### Best used for\n\n- Showing large amounts of discrete data with many variables\n- Showing values across multiple categories and measures\n- Allowing for filtering and ordering when comparison is not a priority\n\n### Alignment\n\nConsistent vertical alignment is essential for fast visual comparison between values in a table.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLeft align non-numeric values and right align numeric values.\n\n![A table showing product inventory with product names aligned to the left and numbers aligned to the right](/images/foundations/design/data-visualizations/do/left-align-non-numeric-values-and-right-align-numeric-values@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nCenter column headers.\n\n![A table showing product inventory data with headers, numbers, and titles centered](/images/foundations/design/data-visualizations/dont/center-align-columns@2x.png)\n\n</div></div>\n\n### Separation\n\nIn order to reduce clutter and non-data ink, we prefer to subtly separate each row.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse light lines to indicate separation between rows.\n\n![A table with three rows separated by light grey lines](/images/foundations/design/data-visualizations/do/separate-rows-with-dividing-lines@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nHighlight every other row to indicate separation.\n\n![A table with a white background and grey lines using a darker grey every other row](/images/foundations/design/data-visualizations/dont/separate-rows-by-highlighting-every-other-row@2x.png)\n\n</div></div>\n\n### Totals\n\nTotals allow merchants to understand the data holistically and should be easy to find.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nPlace totals as the first row beneath the headers, and bold the text.\n\n![A diagram showing individual product sales underneath the total sales in bold type](/images/foundations/design/data-visualizations/do/place-bold-totals-in-the-first-row@2x.png)\n\n</div></div>\n\n---\n\n## Accessibility\n\nAn important part of designing clear visualizations is making data accessible to everyone.\n\n### Provide options\n\nMerchants with vision issues might have trouble understanding visual presentations of data, even with assistive software.\n\nMerchants with dexterity or motor issues might have trouble using interactive visualizations that depend on fine motor control.\n\nOthers might simply have trouble understanding data presented in a chart or graph.\n\nTo support the needs of different merchants, always provide multiple formats for data visualizations.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nLet merchants access their data in multiple formats. For charts and graphs, it’s often helpful to offer the same content in a data table that’s either on the same page or on a related page that’s easy to discover.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nProvide data visualizations in only one format.\n\n</div></div>\n\n### Use of color\n\nColor is critical for visualization, but can cause issues for merchants with color blindness and low vision. Color should be used in a way that supports the interpretation of visual information for all merchants, including those with visual issues.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nEnsure that text, line, bar, and other colors have sufficient contrast against their background.\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nUse colors that can be distinguished from each other to support merchants with different forms of [color blindness](https://webaim.org/articles/visual/colorblind).\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nRequire that merchants are able to see color to understand the information provided in the chart or graph.\n\n</div></div>\n\nTo learn more, see guidance about [accessible colors in Polaris](https://polaris.shopify.com/design/colors#section-accessibility).\n\n### Scalable vector graphics (SVGs)\n\n`<svg>` and `<canvas>` elements are excellent tools for creating engaging, dynamic visualizations in HTML. However, they are frequently difficult to access using assistive technologies. Assistive technology users may not be able to access content in the correct order, find text equivalents for visual information, or access interactions with the keyboard.\n\nIn general, hide `<svg>` elements from screen readers using `aria-hidden=\"true\"` and provide a separate text equivalent for the graph or chart. Although different visualizations may benefit from different treatments, try to prioritize creating a consistent experience.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Design",
      "keywords": [
        "visual design",
        "design language",
        "design"
      ]
    },
    "intro": "These are the principles that shape how we design all the experiences across the Shopify admin.",
    "content": "\n\n# Design\n\nThese are the principles that shape how we design all the experiences across the Shopify admin.\n\n![Design of Polaris for Admin, showcasing an admin interface and a mobile view](/images/foundations/design/design-intro@2x.png)\n\n### Fresh visual style\n\nA clean, simple style makes things feel approachable and&nbsp;efficient.\n\n### Faster performance\n\nElegant code and lightweight assets means pages load&nbsp;more&nbsp;quickly.\n\n### Future-friendliness\n\nBuilt for flexibility, design tokens and new infrastructure let us iterate easily across&nbsp;experiences.\n\n### Purposeful brand presence\n\nBeing intentional about when the Shopify brand comes forward, and when it takes a backseat, directs the focus to where it&nbsp;matters&nbsp;most.\n\n### Familiarity across experiences\n\nDefined patterns and guidelines help us design a wide variety of experiences that still always feel&nbsp;like&nbsp;Shopify.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Icons",
      "keywords": [
        "shopify icons",
        "icon sets",
        "icon designs",
        "icon guidelines",
        "icon standards",
        "iconography",
        "visual helpers",
        "minor icons",
        "major icons",
        "inline icons",
        "in-line icons",
        "main navigation icons",
        "main nav icons",
        "icons in nav",
        "icons in main nav",
        "icon colors"
      ]
    },
    "intro": "Icons in the Shopify admin act as visual aids to help merchants complete tasks. They’re simple, informative, and build on the visual language of the design system.",
    "content": "\n\n# Icons\n\nIcons in the Shopify admin act as visual aids to help merchants complete tasks. They’re simple, informative, and build on the visual language of the design system.\n\n![A collection of various icons used in the Shopify Admin.](/images/foundations/design/icons/icons-intro@2x.png)\n\n---\n\n## Principles\n\n### Simple over detailed\n\nDetailed icons increase cognitive load. Focus on simplicity to help merchants understand the concept the icon represents and recognize icons on smaller screens.\n\n### Literally literal\n\nLiteral symbols are easier to understand than abstract symbols. When possible, use symbols that represent the most basic idea or concept instead of a metaphorical one. If the concept can’t be conveyed literally (an activity like gardening, a profession like doctor), pick a logically related symbol (shovel, stethoscope).\n\n### Stay professional\n\nThe design of an icon communicates tone, much like the content it’s paired with. Focus on the effectiveness of the message instead of its ability to delight. In other words, prioritize representing the function, rather than how nice it looks.\n\n---\n\n## Creating icons\n\n![Five icons in order: a trash can to represent a delete action, a cogwheel to represent settings, a spyglass to represent search, a pin to represent location and a bell to represent notifications.](/images/foundations/design/icons/icons-established@2x.png)\n\n### Use established icons\n\nIcons that have been used for a long time worldwide have a higher chance of being recognized and understood quickly. Don’t reinvent an icon that’s already been accepted as the convention. There are global, established conventions for concepts like “delete,” “settings,” and “search.” These symbols are effective, and don’t need to be redefined.\n\n![An icon of a cogwheel that represents Store, Product, and global settings.](/images/foundations/design/icons/icons-limit-variations@2x.png)\n\n### Limit variations\n\nUse a single icon to represent variations of the same concept. Shipping settings, store settings, account settings, and any new settings should use the cog icon. Don’t create a custom icon for each of these concepts—it bloats the icon library and makes it difficult for merchants to create strong connections around a concept.\n\n![Various icons paired with text, notably the icon of a house with the word \"Home\", the icon of a computer with the word \"Desktop\" and an icon of an arrow pointing up and another pointing down with the word \"Sort\".](/images/foundations/design/icons/icons-pairing@2x.png)\n\n### Pair icons with text\n\nThe purpose of an icon is to clarify the content by providing a visual cue and improve legibility and scannability of the user interface. In general, icons should be placed near a label or title. Never use an icon to replace a name of a product or feature—the rare exception being an icon that’s a universally understood action, like the trash can icon that represents deletions.\n\n![Five icons representing the currency of different countries: a dollar, a euro, a british pound, an indian rupee and a japanese yen.](/images/foundations/design/icons/icons-internationalization@2x.png)\n\n### Keep internationalization in mind\n\nWhenever possible, use a universally recognized icon. However, there will be times where only a locally understood icon will work to communicate a concept. When deciding what symbol should be used, check that it will be understood at a glance by people from different cultures and&nbsp;backgrounds.\n\n---\n\n## When to use icons\n\nIcons are powerful visual helpers and should be used with care. Overuse quickly results in user interfaces that are visually overwhelming or distracting.\nIcons are commonly used:\n\n- In primary navigation\n- In page headers and section titles\n- In banners to bring attention to a specific theme, such as an announcement or an error\n- Inline with text to add clarity\n- To direct attention to something the merchant can take action on\n\nTo browse a list of all available icons, visit the [polaris-icons](https://polaris-icons.shopify.com/) site.\n\n---\n\n## System icons\n\nSystem icons help merchants find their way around and shouldn’t be ornamental. They’re smaller than spot icons because they’re always applied in product experiences where it’s important that they complement the user experience and not overpower it. They should represent a specific action, object, or concept.\n\n![Icons in a navigation menu.](/images/foundations/design/icons/icons-system-20@2x.png)\n\n### Major icons—20×20\n\nMajor system icons are:\n\n- Primarily used in navigation to support wayfinding\n- Used to help promote, reinforce, or draw special attention to a specific area or metaphor\n- 20×20 in size\n- Within a 20×20 bounding box\n\n![Smaller icons in a drop-down menu](/images/foundations/design/icons/icons-system-16@2x.png)\n\n### Minor icons—16×16\n\nMinor system icons are:\n\n- Used inline to add clarity to an action\n- Used in form elements (`<input>`, `<button>`, etc.)\n- 16×16 in size\n- Within a 20×20 bounding box\n\n---\n\n## Spot icons\n\n![Larger, spot icons of a spyglass for a \"results not found\" error, an upwards arrow for a file upload card, and an exclamation point for a \"page not found\" error.](/images/foundations/design/icons/icons-spot@2x.png)\n\nSpot icons reinforce messaging in product experiences that are seen more than once. Spot&nbsp;icons&nbsp;are:\n\n- Bigger than system icons and have a stronger stroke weight to add visual balance to the layout\n- 60×60 in size\n- Within a 60×60 bounding box\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Illustrations",
      "keywords": [
        "drawings",
        "pictures"
      ]
    },
    "intro": "The Shopify admin uses a precise illustration style to help merchants quickly and clearly understand how things work across every experience.",
    "content": "\n\n# Illustrations\n\nThe Shopify admin uses a precise illustration style to help merchants quickly and clearly understand how things work across every experience.\n\n![The illustration of a chair, in simples straight lines, followed by a version with curves and some color, followed by a final version with filled shapes and shadows.](/images/foundations/design/illustrations/illustrations-intro@2x.png)\n\n---\n\n## Principles\n\n### Always be useful\n\nIllustration adds information. It provides context, adds clarity, or leads to the next step. It gives merchants a deeper understanding of what they’re working on.\n\n### Keep it in the family\n\nIllustrations are all part of the same visual family. Inconsistencies lower the overall quality of the experience, and can distract merchants or make them feel like they’re in the wrong place.\n\n### Be considerate\n\nIllustration should understand and support the merchant’s experience. Each illustration needs to feel appropriate for whatever situation it shows up in.\n\n### Stay focused\n\nEach illustration conveys one thing. The story is easy to understand, so merchants intuitively know how to accomplish whatever they came here to do.\n\n---\n\n## Elements of style\n\n![A color palette and illustrations using the color palette](/images/foundations/design/illustrations/illustrations-color@2x.png)\n\n### Color\n\nIllustrations use a special set of colors designed to work well in the places where they show up. The palette is limited: individual illustrations use whites, grays, and two or three colors each. Colors are also less saturated than the surrounding UI, so they don’t distract from core interactions.\n\n![Illustrations of a flag, a teapot, a leaf, and various profiles of people of different ethnicities.](/images/foundations/design/illustrations/illustrations-shape@2x.png)\n\n### Shape\n\nObjects have realistic proportions so they’re easy to recognize. Simple geometric shapes with rounded corners build images that are clear and approachable. Representations of people use more organic shapes.\n\n![An illustration of a laptop and an illustration of shipping boxes separated on a white background](/images/foundations/design/illustrations/illustrations-space@2x.png)\n\n### Space\n\nThe perspective is flat and two-dimensional so the entire area of the illustration is of equal importance. Drop shadows give things subtle depth when necessary. An additional side of an object can be added if things aren’t easily recognizable from a single side.\n\nEach illustration has negative space around it so it feels balanced in the place it lives, and so its visual weight is the same as other illustrations that live in the same places.\n\n![An stylized illustration of a chair with red lines defining its angles, next to an illustration of the profile of a person, with red lines to emphasize where curves are used.](/images/foundations/design/illustrations/illustrations-line@2x.png)\n\n### Line\n\nLine makes and arranges shapes in the space. All illustrations have smooth lines without texture. Smaller objects have straighter lines, while larger objects can have more detailed, curved lines.\n\nIntersecting and continuous lines are a key element of the admin illustration style, but they aren’t forced. They make a simple illustration feel elegant and visually interesting without being distracting.\n\n![An intricate illustration of a shipping label, followed by an illustration of a sheet with a list of users, followed by a very simple illustration of an URL address bar.](/images/foundations/design/illustrations/illustrations-detail@2x.png)\n\n### Detail\n\nIllustrations need some detail to make sense, but too much can be noisy. They have the minimum amount of detail necessary to make them feel realistic but still simple. Fine details are rarely smaller than 4px in height or width.\n\n---\n\n## Where illustrations live\n\nThere are places where illustrations always appear, and places where they’re used only sometimes.\n\n![An illustration of scissors cutting a coupon to indicate a page for discount code administration that has no discount codes saved.](/images/foundations/design/illustrations/illustrations-empty-states@2x.png)\n\n### Empty states\n\nMerchants see an empty state illustration the first time they access a new part of the experience, before they’ve had the chance to do anything there yet. It introduces what they can do here, and sets expectations for what’s ahead.\n\n![An admin homecard with a small illustration next to some text describing how to customize a theme.](/images/foundations/design/illustrations/illustrations-onboarding@2x.png)\n\n### Onboarding\n\nOnboarding tasks help new merchants set up their store. Illustrations frame what each task is for. And by changing in appearance, they reinforce when a task is complete.\n\n![An illustration celebrating a store anniversary.](/images/foundations/design/illustrations/illustrations-announcements@2x.png)\n\n### Announcements\n\nAnnouncements let merchants know about something that might help their business. When the announcement celebrates a major merchant milestone or introduces an important product, illustration helps make it special or noticeable.\n\n![An illustration next to a card talking about Shopify Payments.](/images/foundations/design/illustrations/illustrations-spot@2x.png)\n\n### Spot illustrations\n\nIn some rare instances, unique spot illustrations can be used to achieve a specific goal, like to draw attention to something important on a busy page, or to explain a technical concept.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Interaction states",
      "keywords": [
        "visual patterns",
        "color strategy",
        "interaction states",
        "hover",
        "focus",
        "active",
        "selected",
        "disabled",
        "subdued",
        "state"
      ]
    },
    "intro": "Interaction states communicate the status of an element in the interface, establish confidence once an action is taken, and suggest the ability (or inability) to interact with the element.",
    "content": "\n\n# Interaction states\n\nInteraction states communicate the status of an element in the interface, establish confidence once an action is taken, and suggest the ability (or inability) to interact with the element.\n\n![A collection of buttons in different states](/images/foundations/design/interaction-states/interaction-states-intro@2x.png)\n\n---\n\n## Principles\n\n### Be subtle, but clear\n\nSuccessful interaction feedback is informative, not decorative. Avoid elaborate transitions that create visual noise or intense color changes. Distracting animation can create disturbance and make an interface unpleasant to use.\n\n### Keep things consistent\n\nConsistent treatments for interaction feedback create recognizable patterns. If an interaction produces different feedback across the Shopify admin, it deteriorates the integrity of the pattern and risks confusing merchants.\n\n---\n\n## Designing interaction states\n\nKeep in mind that merchants interact with interfaces differently depending which input device they’re using. Devices they may be using include:\n\n### Input devices to consider\n\n- Mouse\n- Touch screen\n- Keyboard\n- Voice\n- Game controller\n- Refreshable braille display\n\nTo learn more, check out the [accessibility guidelines](/foundations/accessibility).\n\n### Use signifiers\n\nProvide merchants with cues as to what the interface will do if they interact with it. By using signifiers we set expectations about what components can do, which creates a more intuitive interface that’s easier to use. The types of signifiers include:\n\n![A \"sort\" button in a default state.](/images/foundations/design/interaction-states/interaction-states-explicit@2x.png)\n\n**Explicit**, where content directs merchants to do the intended action, such as “Sort” or “Save.”\n\n![An \"edit\" button with its underline appearing when the mouse hovers above it.](/images/foundations/design/interaction-states/interaction-states-hidden@2x.png)\n\n**Hidden**, where the clue isn’t revealed until the merchant interacts with it, such as hovering or using tab navigation to see if a button is clickable.\n\n![A \"print packing slip\" button that is grayed out and inactive.](/images/foundations/design/interaction-states/interaction-states-negative@2x.png)\n\n**Negative**, where the action appears inactive (like the button is grayed out and doesn’t respond to hover) because it isn’t available for the merchant to use.\n\n![A toast component, a button with a spinner component and a text field component with an error message.](/images/foundations/design/interaction-states/interaction-states-behavior@2x.png)\n\n### Behavior\n\n**Use feedback indicators** like the [progress bar](https://polaris.shopify.com/components/progress-bar) component or the [spinner](https://polaris.shopify.com/components/spinner) component to let them know that the interface received their request. If appropriate, you can also provide added information about what or how long it will take to complete.\n\n**For non-disruptive feedback** on the outcome of an action, use the [toast](https://polaris.shopify.com/components/toast) component.\n\n**For an unsuccessful completion** that requires the merchant to take action, provide information about what prevented the action from completing successfully and what the merchant can do to fix the problem. For example, use the validation error state of the [text field](https://polaris.shopify.com/components/text-field) component.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Sounds",
      "keywords": [
        "audio",
        "sonic",
        "noise"
      ]
    },
    "intro": "We use sound to communicate information and to enhance how merchants experience the Shopify admin. Sound patterns make interactions easier and more predictable.",
    "content": "\n\n# Sounds\n\nWe use sound to communicate information and to enhance how merchants experience the Shopify admin. Sound patterns make interactions easier and more predictable.\n\n![Visual representation of sound waves as concentric circles](/images/foundations/design/sounds/sound-intro@2x.png)\n\n---\n\n## Principles\n\n### Selectively urgent\n\nThe duration, volume, and character of a sound should all be dictated by the level of urgency of an event. For example, an alert indicating that a customer is struggling to complete checkout requires more urgent attention and immediate action. An alert indicating that a customer has arrived at a storefront is informative, but doesn’t require immediate action. The sounds used during these events should be customized to reflect the differences in urgency.\n\n### Avoid annoying repetition\n\nSome sounds occur many times per day. While appealing on first listen, a sound may become irritating after ten, and unbearable after a hundred. Merchants that hear a sound repeatedly may quickly grow tired of it. **Our sounds should be informative and not annoying.** When possible, use data to determine how often a sound is triggered.\n\n### Distinct and succinct\n\nMerchants are likely to hear our sounds in a variety of contexts. Clean, focused, and succinct sounds convey information better than muffled or distorted sounds.\n\n### Test across devices\n\nWhile you may be testing your designs using headphones or loudspeakers that reveal the audible frequency spectrum clearly, a smartphone speaker will affect the quality of the sound. Smaller speakers are more susceptible to distortion. Sounds on mobile devices should be played at lower levels than on a desktop computer or laptop. Test sounds on a variety of devices and volume&nbsp;levels.\n\n### Think beyond sound\n\nSome people can’t rely on sound to receive cues or notifications. Merchants may have a disability that affects hearing or auditory processing. Depending on the merchant’s preferences and technologies, they may receive sound cues through haptic or visual feedback, but don’t assume that they’ll be able to perceive sound. Always include an alternative method to convey information, like text-based notifications or visual changes in the interface.\n\n---\n\n## When to use sound\n\nSounds in our product help convey information. There’s an important balance between having too many sounds and not enough. Useful and well-planned sounds will help with merchant understanding. Unnecessary sounds will reduce the perceived quality of our product.\n\nEven though merchants might miss important information if they turn off their sound, we should always provide the option for them to do so.\n\n### Common sound events\n\n- For an event that requires a merchant’s immediate attention, use an alert to encourage them to pause their workflow and take care of things.\n- For something that’s useful for a merchant to do, but not necessarily immediately, use a notification.\n- To confirm success, use feedback for a successful action.\n- For statement of failure, use feedback for unsuccessful action.\n\n---\n\n## How to approach sound design\n\nBe creative and intentional with your sound design. And remember:\n\n- Short sounds should be no longer than 250ms, long sounds no longer than 1 second.\n- Sounds should be in the same “family.” If you introduce a new note, key, or timbre, make sure there’s a good reason.\n- Create two versions of every sound:\n  - A louder version for desktop applications.\n  - A quieter version for mobile applications where the speakers are smaller and may distort more easily.\n\nDesign sounds with as much intentionality as other design aspects of Shopify’s products.\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Spacing",
      "keywords": [
        "spacing",
        "space",
        "layout",
        "grid",
        "position",
        "margin",
        "padding"
      ]
    },
    "intro": "Consistent spacing creates visual balance that makes the user interface (UI) easier for merchants to scan. Apply consistent spacing to improve the quality of the UI.",
    "content": "\n\n# Spacing\n\nConsistent spacing creates visual balance that makes the user interface (UI) easier for merchants to scan. Apply consistent spacing to improve the quality of the UI.\n\n---\n\n## Principles\n\n### Create visual rhythm\n\nWe use incrementally measured spacing to create harmonious arrangements of components and text. This gives the elements a predictable rhythm, which makes the experience as a whole feel intentional and well designed.\n\n### Precise but flexible\n\nBeyond mathematical precision, spacing also reacts to the objects it surrounds, giving more space to larger objects, less to small. Optical adjustments can also be made if an element looks off and the spacing needs a nudge to make things feel right.\n\n---\n\n## The spacing system\n\nAll spacing for components and typography is done in increments of 4 pixels. This forms the basic unit of measurement for spacing.\n\n![The mobile interface of the Shopify admin on a 4 pixel grid.](/images/foundations/design/spacing/spacing-4px-grid@2x.png)\n\n### 4px grid\n\nTypography doesn’t use a traditional baseline grid. Instead, line heights are set in increments of 4px and spacing is measured from the edges of the text boxes.\n\n![A profile card component on a 4 pixel grid with text placed vertically at 20 pixel intervals](/images/foundations/design/spacing/spacing-20px-elements@2x.png)\n\nMany components are sized in increments of 20px to match the line height of body text. This makes it easy to create harmonious arrangements of components and&nbsp;text.\n\n---\n\n## Spacing in code\n\nYou can apply spacing in code in two ways:\n\n- Using stylesheets\n- Using utility components provided by Polaris React\n\n### Applying spacing with stylesheets\n\nWhen applying spacing in CSS, use these [spacing tokens](/tokens/spacing).\n\n### Applying spacing with components\n\nVarious components within Polaris enable automatic spacing between elements:\n\n![Several paragraphs of text with space in between, with their edges and spacing highlighted](/images/foundations/design/spacing/spacing-text-container@2x.png)\n\nUse the [text container](/components/text-container) component to wrap and automatically add the correct spacing between a set of paragraphs, lists, or other textual components.\n\n![A text label, text value and badge arranged in a row, with their edges and spacing highlighted](/images/foundations/design/spacing/spacing-stack@2x.png)\n\nThe [stack](/components/stack) component can be used to arrange arbitrary components in a horizontal row or vertical stack with space in between. It accepts the same values as the Sass spacing function to control spacing between the items.\n\n---\n\n## How to choose spacing\n\nUse less space between small components, or components that share a close functional&nbsp;relationship.\n\n![Two text fields showing spacing within and between them](/images/foundations/design/spacing/spacing-less-space@2x.png)\n\nUse less space between small components, or components that share a close functional&nbsp;relationship.\n\n![Detail of a screen from Shopify admin, showing space between the page header and cards, between the cards, and the space around the layout](/images/foundations/design/spacing/spacing-more-space@2x.png)\n\nCoordinate small and large values, along with structural components (like Home cards), to create visual groupings of related things. This helps merchants understand the interface and more easily find what they’re looking for.\nFor screens with specialized layouts, adjust overall spacing based on the density of the content. For example, a simple login screen on desktop display has more room to breathe, so more space can be used.\n\n---\n\n## Common values\n\nThe most common spacing sizes are used throughout Polaris for admin as follows:\n\n![Space between icon and text in buttons and list items](/images/foundations/design/spacing/spacing-extra-tight@2x.png)\n\n**4px** (`extra-tight`) between icon and text.\n\nThe [button](/components/button) component has this spacing built in.\n\n![Two buttons in a row, with annotation showing the space between](/images/foundations/design/spacing/spacing-tight@2x.png)\n\n**8px** (`tight`) between icon and text.\n\nThe [button group](/components/button-group) component has this spacing built in.\n\n![A form showing horizontal and vertical space between text fields](/images/foundations/design/spacing/spacing-base-forms@2x.png)\n\n16 or 20px between form fields.\n\n**16px** (`base`) vertically, **20px** (`loose`) horizontally.\n\nThe [form layout](/components/form-layout) component has this spacing built in.\n\n![Detail of a card component from a large screen display, showing padding on the top, sides and between card sections](/images/foundations/design/spacing/spacing-loose-forms@2x.png)\n\n**20px** (`loose`) padding in cards.\n\n![Detail of a card on a small screen, showing reduced side padding](/images/foundations/design/spacing/spacing-loose-mobile@2x.png)\n\n**16px** (`base`) side padding on small screen.\n\nThe [card](/components/card) component has this built in.\n\n![Detail of a screen from the Shopify admin, showing horizontal and vertical spacing between cards](/images/foundations/design/spacing/spacing-loose-between-cards@2x.png)\n\n**20px** (`loose`) between cards\n\nThe The [card](/components/card) component automatically adds vertical space between it and any preceding card.\n\nFor horizontal spacing, use the [layout](/components/layout) component to create multi-column layouts.\n\n---\n\n## Adjustments and exceptions\n\nIn cases where minute alignment adjustments are necessary, some exceptions apply:\n\n![Closeup of a badge component, showing how its internal padding can be arbitrary, but its height is a multiple of 4px and the text within is vertically centered](/images/foundations/design/spacing/spacing-exception-badge@2x.png)\n\nWhen text is vertically centered inside a component, the top and bottom padding can be any size.\n\n![Three buttons in a row, showing how their width depends on their text content](/images/foundations/design/spacing/spacing-text-width@2x.png)\n\nAllow the length of text to determine the width of components and where they fall horizontally when placed in a row.\n\n![Diagram of a button with optical adjustment for an icon](/images/foundations/design/spacing/spacing-optical-adjustment@2x.png)\n\n### Optical adjustment\n\nSometimes an element is larger than it appears. Spacing based on the invisible edges of the element will feel wrong. Correct for these optical effects by adjusting the space in 4px increments until it looks more balanced.\n\nWithout optical adjustment, the disclosure icon appears too far from the right edge of the button. After optical correction, the perceived spacing is more balanced.\n\n---\n\n## Touch targets\n\nMerchants can more easily perform a task on mobile when interactive elements follow the recommended touch target sizes and spacing guidelines. Make sure that there’s enough space between links, buttons, and inputs prevents accidental actions. Note: touch target sizes differ across iOS (44px) and Android (48dpi).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Assess the content in the surrounding area and position the UI elements accordingly\n- If you work at Shopify, use the components provided in the iOS and Android UI kits\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Don’t use adjacent actions (if possible). It will reduce the risk of error.\n\n</div></div>\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Typography",
      "keywords": [
        "type styles",
        "font sizes",
        "fonts"
      ]
    },
    "intro": "Shopify admin provides a constrained, purposeful set of typographic styles. These styles map to functional roles so you know when to use what.",
    "content": "\n\n# Typography\n\nShopify admin provides a constrained, purposeful set of typographic styles. These styles map to functional roles so you know when to use what.\n\nBy tying typographic styles to specific functions in the interface, we create a clear visual pattern for merchants to follow while they interact with our product.\n\n---\n\n## Principles\n\n### Style with purpose\n\nA disciplined consistency with how you size and style type makes the whole admin more intuitive to use. Merchants who learn how to navigate one experience can apply that same knowledge to each new experience they come across.\n\n### Stay flexible\n\nTo make things accessible to audiences with different eyesight constraints, across different browsers, and different mobile devices, make sure to design in a way that works no matter what font size the merchant opts to use.\n\n---\n\n## Font sizes\n\nWe use the typographic scale to communicate visual hierarchy in text.\n\n---\n\n## Formatting\n\nAlong with the typographic scale, sometimes additional formatting is necessary to illuminate the distinction between smaller-scale relationships. Different formatting styles can be implemented using the text style component.\n\n![Diagram presenting text that is left aligned](/images/foundations/design/typography/type-left-align@2x.png)\n\n### Left aligned\n\nBy default, text is left aligned. Exceptions to this rule include text in tables, and the centered text we use in empty states.\n\n![Diagram presenting text that is emphasised by being bold](/images/foundations/design/typography/type-strong@2x.png)\n\n### Strong\n\nUse this style sparingly and only where strong emphasis is required. In interfaces, strong should be seldom used to enhance visual hierarchy.\n\n![Diagram presenting text that is underlined](/images/foundations/design/typography/type-underline@2x.png)\n\n### Underline\n\nUnderline styles are exclusively for text links. Don’t use underline for things like adding emphasis to text within body copy.\n\n![Diagram presenting text that is subdued in a lighter gray color](/images/foundations/design/typography/type-subdued@2x.png)\n\n### Subdued\n\nThe subdued style lets you de-emphasize content, and you can use it across all font sizes. Mostly it should be used in contrast to other un-subdued text, vs. on its own. However you can use Subdued with standalone text that’s non-actionable or less important.\n\n---\n\n## Display styles\n\n### PageHeading\n\nPageHeading is reserved for the title of a screen.\n\n![An interface showing the title of a page before its contents](/images/foundations/design/typography/type-pageheading@2x.png)\n\n### Display\n\nDisplay is for titling various interface elements, such as empty states and modals.\n\n![An empty state and a modal with large display headings](/images/foundations/design/typography/type-display@2x.png)\n\n### Heading\n\nHeading should always be used for titles of top-level sections of a screen. If the sections of a screen are represented by cards, each card’s title should use the Heading style.\n\n![Two interface cards with headings](/images/foundations/design/typography/type-heading@2x.png)\n\n### Subheading\n\nIf a top-level section of a screen has subsections, use the Subheading style for titling those subsections. Subheading should never appear as the first element in a card. Only use with titles (vs. sections of content).\n\n![An interface card titled with a large heading text size followed by a smaller subheading](/images/foundations/design/typography/type-subheading@2x.png)\n\n### Caption\n\nCaption is for providing details in places where content is compact and space is tight, like when it comes to data visualization.\n\n![A line chart with small, caption-sized labels](/images/foundations/design/typography/type-caption@2x.png)\n\n---\n\n## Font stack\n\nWe use a font stack that adapts to the operating system it runs on, like macOS, iOS, Windows, Android or Linux distributions.\n\n![A diagram showing a selection of default iOS, Mac, Windows, Android and Linux fonts](/images/foundations/design/typography/type-fontstack@2x.png)\n\n- Apple devices will display [San Francisco](https://developer.apple.com/fonts/)\n- Android devices will display\n  [Roboto](https://material.io/guidelines/resources/roboto-noto-fonts.html)\n- Devices running Windows will display\n  [Segoe UI](https://en.wikipedia.org/wiki/Segoe#Segoe_UI)\n- Machines running Linux will display the default sans-serif font for any running distribution\n\nThis font-stack makes sure all browsers can load platform-specific fonts:\n\n```\n-apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif\n```\n\nAdd this to your CSS to preload system fonts and set up browsers for legibility:\n\n```css\nhtml {\n  /* Load system fonts */\n  font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI,\n    Roboto, Helvetica Neue, sans-serif;\n\n  /* Make type rendering look crisper */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Deactivate auto-enlargement of small text in Safari */\n  text-size-adjust: 100%;\n\n  /* Enable kerning and optional ligatures */\n  text-rendering: optimizeLegibility;\n}\n\n/**\n * Form elements render using OS defaults,\n * so font-family inheritance must be specifically declared\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n}\n```\n\n---\n\n## Mobile considerations\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Refer to the platform’s native font scales when designing experiences for native apps\n- Refer to the small-screen scale when designing experiences for mobile browsers\n- Use the platform-specific component library\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Use the native font scale\n- Keep in mind that all UI elements containing text will be affected\n- Explore additional content height, width, truncation, and line wraps\n\n</div></div>\n",
    "category": "design"
  },
  {
    "frontMatter": {
      "name": "Accessibility",
      "keywords": [
        "a11y",
        "universal design",
        "inclusive",
        "inclusivity",
        "disability",
        "disabilities",
        "people with disabilities",
        "persons with disabilities",
        "accessible markup",
        "accessible mark up",
        "accessible code",
        "accessible",
        "diversity",
        "diverse"
      ]
    },
    "intro": "Making commerce better for everyone means caring deeply about making quality products. A quality product should have a fantastic user experience (UX), including:",
    "content": "\n\n# Accessibility\n\nMaking commerce better for everyone means caring deeply about making quality products. A quality product should have a fantastic user experience (UX), including:\n\n- A beautiful and functional design\n- Consistent and useful [copy](/content/product-content)\n- Principles of\n  [universal design](https://en.wikipedia.org/wiki/Universal_design) and inclusivity\n\n---\n\n## Usable for everyone\n\nIt’s important that Shopify products—and [Partner](https://www.shopify.ca/partners) products—are usable and useful to everyone.\n\nEveryone is a pretty big group. It includes our merchants, their customers, our developer partners, our employees, and the greater tech community at large. That also includes all members of our community who have disabilities.\n\nDisabilities may affect how people move, see, hear, communicate, learn, understand, and process information.\nAs a result, it’s important to consider how to design and develop your product to support a wide range of needs and experiences.\n\nIn the United States, as many as 1 in 4 adults has at least 1 disability [Source: [CDC](https://www.cdc.gov/media/releases/2018/p0816-disability.html)]. In Canada, the estimate is 22%, and elsewhere in the world the estimate is closer to 1 in 7 [Source: [Statistics Canada](https://www150.statcan.gc.ca/n1/pub/11-627-m/11-627-m2018035-eng.htm), [World Bank](https://www.worldbank.org/en/topic/disability)].\n\n---\n\n## Building inclusive experiences\n\nUsing our [components](/components/get-started) is a way to improve accessibility and consistency when building products for Shopify.\n\n- The component library in this style guide includes code we can use across applications\n- This component code includes accessible markup\n- Since the code exists in a single component that gets reused, it’s easier to update and fix any bugs\n\nThe build-it-once, use-it-everywhere model means the accessibility knowledge of the designers and developers who build these components is available to all of Shopify and our partners. Because of this, merchants get a consistent experience that can be leveraged into accessible products.\n\nMany accessibility features come free in the components. But, it’s important to make sure that components are integrated in a way that doesn't create unforeseen accessibility barriers. Depending how components are used, there may be more design and implementation considerations. Be sure to test user task flows post integration.\n\n### Managing focus to support merchant workflows\n\nDon’t programmatically move focus to new content without merchant input. Polaris components that use controls to display overlays, such as modals and popovers, manage focus automatically.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- When a merchant activates a link that goes elsewhere in the page, move focus to that content\n- When a merchant must access an overlay, move focus to it\n- When a merchant submits a form that results in an error, move focus to the error message\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Move focus when content updates in the background\n- Move focus when the user is actively working elsewhere on the page\n\n</div></div>\n\nThe only case where focus should be managed without the merchant’s okay is when the merchant needs to be interrupted because they cannot continue their current workflow.\n\n### Limiting non-standard interactions\n\nMerchants will expect to interact with controls and content in ways that follow the defaults for their browser, platform, and assistive technologies. Introducing non-standard features can give merchants better ways of accomplishing tasks, but they can also create barriers.\n\nFor example, merchants who rely on the keyboard will expect that buttons can be activated with the <kbd>enter</kbd>/<kbd>return</kbd> key or the <kbd>space</kbd> key. If buttons are programmed to be used with different keys, merchants will need to be instructed on how to use them.\n\nBefore designing or building custom features that use non-standard controls or interactions, first consider whether the goal can be met using native features.\n\nIf non-standard interactions _are_ required:\n\n- Carefully follow guidelines and best practices for designing, building, and testing custom features on your platform\n- Give merchants clear instructions for using the custom feature\n- Provide an additional, standard way to accomplish the task\n\n### Assistive technology support\n\nOur components are tested for accessibility with automated and manual techniques. Merchants should expect to be able to access features built with our components using modern assistive technologies. These include native and third-party tools like:\n\n- Screen readers\n- Speech recognition programs\n- Supports for low vision and color blindness\n- Alternative keyboards\n- Switch devices\n- Tools for readability\n\n### Coding standards\n\nPolaris components start with web standards for HTML, CSS, and JavaScript. Features from the Accessible Rich Internet Applications (WAI-ARIA or ARIA) specification are used to build functionality that is not available in native HTML.\n\n### Alternative text\n\nTo help people who rely on assistive technologies, such as a screen reader or other text to speech programs, our components use [alternative text](/content/alternative-text) for icons and images used to convey information and actions (like buttons and links).\n\n### Meeting the Web Content Accessibility Guidelines (WCAG)\n\nPolaris targets WCAG 2.1 Level A and Level AA success criteria, and seeks to provide a highly usable experience for everyone.\n\nFor more information, see the following resources:\n\n- [WCAG 2.1](https://www.w3.org/TR/WCAG21/)\n- [ARIA 1.1](https://www.w3.org/TR/wai-aria-1.1/)\n- [Shopify's statement of commitment to accessibility](https://www.shopify.com/accessibility)\n\n### Feedback\n\nSometimes, building accessible and inclusive experiences can be difficult. If we’ve made any mistakes in this style guide, please\n[reach out by creating a GitHub issue](https://github.com/Shopify/polaris-react/issues) and help us make it better.\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Shopify experience values",
      "keywords": [
        "mission",
        "approaches",
        "design principles",
        "design values",
        "ux principles",
        "ux values",
        "user experience principles",
        "user experience values",
        "shopify mission",
        "shopify approaches",
        "shopify design principles",
        "shopify ux principles",
        "shopify principles",
        "merchant first",
        "merchant-first",
        "empower",
        "considerate",
        "empowering",
        "crafted",
        "efficient",
        "trustworthy",
        "familiar",
        "don’t overwhelm",
        "cohesive experiences",
        "polished"
      ]
    },
    "intro": "At Shopify, we empower commerce at a global scale. We build products, tools, and services for people to start, manage, and scale their businesses. We manage enormous complexity for commerce giants, and give new entrepreneurs the best chance to succeed.",
    "content": "\n\n# Shopify experience values\n\nAt Shopify, we empower commerce at a global scale. We build products, tools, and services for people to start, manage, and scale their businesses. We manage enormous complexity for commerce giants, and give new entrepreneurs the best chance to succeed.\n\nThese values are at the heart of how we build experiences at Shopify. They’re important whether you work at Shopify or you’re developing third-party apps or themes.\n\n---\n\n## Our approach\n\nThe best part of this shared set of values is the conversations they enable. They are fantastic lenses through which to view, critique, and improve our work.\n\nWe always aspire for Shopify experiences to feel:\n\n### Considerate\n\nAbove all else, we show care for the people who use our tools and products. We’re here to make their day-to-day and long-term work better — no matter who they are, where they are, or what platform they’re using.\n\n- Build experiences that work on every screen, on every platform, in every language, and in every country.\n- Take time to understand where we can build for a general audience, and where we should offer different paths for different needs.\n- Respect the reality of this work – don’t assume the perfect situation, preparation, or usage.\n\n### Empowering\n\nWe want people to feel like they can accomplish whatever they’re trying to do. Our experiences should give people confidence that they’re capable of achieving their goals, no matter their level of experience.\n\n- Help users complete their tasks, without taking away decisions or independence.\n- Optimize for the most important tasks without blocking people from doing the rest.\n- Hide complexity where you can, but give people access to more sophistication if they need it.\n\n### Crafted\n\nShopify experiences should feel like they were created with the highest level of craftsmanship. Through thoughtful details and small touches, we combine the power of professional tools with the simplicity of consumer products.\n\n- Work to understand the complex problems users face, then find clear and approachable solutions to those problems.\n- Delight people with how powerful and effective an experience is, not with extra decoration or flair.\n- Look for meaningful ways to make experiences more natural, friendly, and thoughtful.\n\n### Efficient\n\nShopify experiences should help people achieve their goals quickly, accurately, and with less effort. We value speed and simplicity, but we value productivity even more.\n\n- Break complex tasks down into simple steps, and remove repetitive tasks whenever you can.\n- Use friction to highlight important decisions, then let users get back to work.\n- Give users the ability to reduce and optimize their workloads through automation and bulk actions.\n\n### Trustworthy\n\nWe constantly work to recharge our users’ trust batteries. We sweat the details. We’re genuine and transparent to show users that we’re always acting in their best interest.\n\n- Fix the small mistakes and inconsistencies that erode trust.\n- Be transparent about what a feature or tool can do and what it can’t.\n- Make safe and positive actions frictionless. If they’re risky, give clear instructions and greater control. Make it easy to recover from mistakes.\n\n### Familiar\n\nWe want people to feel comfortable using our products, whether it’s their first time using them or their hundredth. Our experiences should embody the same principles, act the same way, and fit together seamlessly.\n\n- Think bigger than any individual task or product. Understand the context users are working in.\n- Use familiar patterns to make experiences intuitive and recognizable.\n- Evolve experiences seamlessly. They should keep getting better with time and information.\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Formatting localized currency",
      "keywords": [
        "internationalization",
        "localization",
        "currency",
        "currencies",
        "money",
        "euro",
        "dollar",
        "formatting",
        "short format",
        "explicit format",
        "internationalizing",
        "localizing",
        "locale",
        "overseas",
        "international",
        "global",
        "japan"
      ]
    },
    "intro": "Currencies are formatted differently in different countries and languages. There’s a currency formatting framework to:",
    "content": "\n\n# Formatting localized currency\n\nCurrencies are formatted differently in different countries and languages. There’s a currency formatting framework to:\n\n- Help more merchants sell globally\n- Localize currency formatting for merchants and customers everywhere\n- Unify the display of mixed currencies to help merchants manage multiple currency stores\n- Implement the formatting through APIs\n\n---\n\n## Definitions\n\nA store can have more than one type of currency and currency format.\n\n### Store currency\n\nThe main currency of the store and the Shopify default. All sales and reports are shown in the store currency.\n\n### Non-store currency\n\nAny other type of currency is called “non-store currency”. Types of non-store currency include:\n\n- Presentment currency: The type of currency that is presented to buyers in a merchant’s store. For multi-currency stores, it can be different from store currency.\n- Payout currency: The type of currency used to pay merchants for their sales. For multi-currency stores, it can be different from store currency.\n- Billing currency: The type of currency used to bill merchants for themes, app purchases, and monthly subscriptions. Billing currency is in USD only, but might include local currencies for tax purposes.\n\n### Short format\n\nIncludes the currency symbol and currency value. This format is used for currency that merchants are familiar with.\n\nExamples: \\$12.50; 12,50 €\n\n### Explicit format\n\nIncludes the currency symbol, currency value, and ISO code (for example, “USD” and “CAD”). Best used for currency that merchants aren’t familiar with and don’t expect to see.\n\nExamples: \\$12.50 CAD; 12,50 € EUR\n\n---\n\n## Aligning with global standards\n\nShopify uses [Common Locale Database Repository (CLDR)](http://cldr.unicode.org/) for localization formatting for currency, date, time, and amount.\n\n- It’s the recognized international standard\n- It automatically formats numbers and currency based on the merchant’s locale\n- The repository is maintained by a third party\n\nCLDR determines:\n\n- Whether the currency symbol appears before or after the amount (for example, $250, 250 USD, 250 $)\n- Whether decimals are used (for example, there are no “cents” in Japanese yen)\n- Whether the decimal sign is a period or a comma (for example, 37,50 or 37.50)\n- How to group numbers (for example, 10,000 or 1,0000, or using spaces)\n\nCLDR doesn’t determine the appropriate level of detail shown in different contexts. For example, it can’t determine when to show the currency symbol and value ([short format](#short-format)), or the currency symbol, value, and ISO code ([explicit format](#explicit-format)).\n\nThough short format is more efficient, it’s important to provide clarity for merchants who deal with unfamiliar currencies in multi-currency stores. In those cases, use explicit format.\n\n---\n\n## Design guidelines\n\nBecause CLDR formatting is limited, these guidelines will help you choose the appropriate level of currency detail to display in a multi-currency context.\n\n### Merchants\n\n#### Store currency\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nDefault to [short format](#short-format).\n\n![Short format in today’s sales card](/images/foundations/foundations/internationalization/do-use-short-format@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nUse [explicit format](#explicit-format) except when presenting store currency within in a mixed-currency context.\n\n![Incorrect explicit format in today’s sales card](/images/foundations/foundations/internationalization/dont-use-explicit-format@2x.png)\n\n</div></div>\n\n#### Non-store currency\n\n- Use explicit format when showing total amounts, an amount within a button, or in a paragraph\n- Use short format when showing non-total amounts with total amounts\n\n![](/images/foundations/foundations/internationalization/paid-status-explicit@2x.png)\n\nThis example shows a scenario where the presentment currency is in USD, which is different than the store currency. The non-total amounts in the paid status card are in short format, and the total amounts are in explicit format.\n\n![](/images/foundations/foundations/internationalization/refund-non-store-currency@2x.png)\n\nThis example shows a scenario refunding an order that’s in a non-store currency.\n\n![](/images/foundations/foundations/internationalization/short-format-non-total@2x.png)\n\nThis example illustrates the use of short format for non-total amounts and explicit format for total amounts in a data table.\n\n#### Negative amount display\n\nAlways place the negative symbol before the currency and amount in either format.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- \\-\\$4.20\n- -12,50 €\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- \\$-4.20\n- 12,50 €-\n\n</div></div>\n\n### Customers\n\n- Default to explicit format whenever prices are customer-facing. Use short format for unit prices, itemized prices, and installment prices.\n- If there are enough indicators to let customers know which currency they’re looking at, short format may be sufficient. When using short format, make sure to always use explicit format for cart total, checkout total, and notification totals.\n\n![](/images/foundations/foundations/internationalization/short-format-installment-prices@2x.png)\n\nThis example shows the use of short format for installment prices.\n\n![](/images/foundations/foundations/internationalization/short-format-unit-prices@2x.png)\n\nThis example shows the use of short format for unit prices.\n\n![](/images/foundations/foundations/internationalization/short-format-itemized-prices@2x.png)\n\nThis example shows the use of short format for itemized prices.\n\n---\n\n## Guiding questions when making design decisions\n\nUse the following questions to guide you when making decisions about currency formatting.\n\n**Does the merchant know which currency they’re looking at?**\n\n- Which currency do they expect to see?\n- Do they know which currency their orders are in if they have a multi-currency store?\n\n**Does the currency format support the merchant’s main task?**\n\n- Is the main task scanning, comparing and analyzing, or taking an action (for example, a refund)?\n\n**Are there enough details to make an informed decision?**\n\n- For example, do they know the currency of their non-store currency order refund?\n- Can they distinguish between the sales report and payout summary if the store currency and payout currency are different?\n\n**Can the UI be simplified without creating confusion?**\n\nWe don’t want to show [explicit format](#explicit-format) everywhere and for every task.\n\n- How can we make currency formatting both simple and accurate?\n\n---\n\n## Design tips\n\nMock up a scenario where the store, presentment, payout, and billing currencies are different. This scenario is becoming more common as more merchants start selling globally.\n\n### Use currencies that share the same symbol to test for clarity\n\nUSD, CAD, AUD, HKD, SGD are just a few of the many currencies that share the same symbol “\\$”.\n\n### Use Japanese Yen (JPY) amount to test currency length and space constraints\n\n1 USD is approximately 100 JPY. If there is enough space for the JPY amount, it should work for most other major currencies.\n\n### When in doubt, let the guiding questions help you make a decision\n\nThe guiding questions are meant to help make merchant-focused decisions about which format to use when the use case is unclear.\n\n---\n\n## Major currencies in their local formats\n\nThis table shows commonly-used currencies in short and explicit formats.\n\n| Currency                        | Locale       | Short format | Explicit format |\n| ------------------------------- | ------------ | ------------ | --------------- |\n| **US Dollar ($, USD)**          | en-US        | $12.50       | $12.50 USD      |\n| **Canadian Dollar ($, CAD)**    | en-CA        | $12.50       | $12.50 CAD      |\n|                                 | fr-CA        | 12,50 $      | 12,50 $ CAD     |\n| **Australian Dollar ($, AUD)**  | en-AU        | $12.50       | $12.50 AUD      |\n| **Euro (€, EUR)**               | de-DE, fr-FR | 12,50 €      | 12,50 € EUR     |\n|                                 | en-IE        | €12.50       | €12.50 EUR      |\n|                                 | nl-NL        | €12,50       | €12,50 EUR      |\n| **British Pounds (£, GBP)**     | en-GB        | £12.50       | £12.50 GBP      |\n| **Japanese Yen (¥, JPY)**       | ja-JP        | ¥1250        | ¥1250 JPY       |\n| **New Zealand Dollar ($, NZD)** | en-NZ        | $12.50       | $12.50 NZD      |\n| **Hong Kong Dollar ($, HKD)**   | zh-HK        | $12.50       | $12.50 HKD      |\n| **Singapore Dollar ($, SGD)**   | zh-SG        | $12.50       | $12.50 SGD      |\n| **Danish Krone (Kr, DKK)**      | da-DK        | 12,50 kr.    | 12,50 kr. DKK   |\n\n---\n\n## Implementation\n\nTo format currency in a React component, use the [`Shopify/react-i18n`](https://github.com/Shopify/quilt/tree/master/packages/react-i18n) library’s `formatCurrency` method. You can select either `short` or `explicit` formatting by setting the `form` option as shown in the code example below.\n\n```jsx\nimport { useI18n } from \"@shopify/react-i18n\";\n\nconst [i18n] = useI18n();\n\ni18n.locale = \"de-AT\";\n\nconst eurDeAt = i18n.formatCurrency(price, {\n  currency: \"EUR\",\n  form: \"short\",\n});\n\nconst eurDeAtExp = i18n.formatCurrency(price, {\n  currency: \"EUR\",\n  form: \"explicit\",\n});\n```\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Information architecture",
      "keywords": [
        "IA principles",
        "info architecture",
        "wayfinding",
        "way finding",
        "navigation"
      ]
    },
    "intro": "Everything we create at Shopify has an underlying foundation of information architecture. If you’re a designer, a content strategist, or a UX developer, you’re already doing IA work.",
    "content": "\n\n# Information architecture (IA)\n\nEverything we create at Shopify has an underlying foundation of information architecture. If you’re a designer, a content strategist, or a UX developer, you’re already doing IA work.\n\n---\n\n## Defining IA\n\nInformation architecture is the practice of organizing, structuring, and labeling content in an effective and sustainable way. Whether you’re creating an app, part of the Shopify admin, a new feature, or an editorial page, these IA principles are here to help you make content usable and findable.\n\n---\n\n## Why we do IA\n\n1. Simplify complexity: Information should be structured and managed in the simplest way possible.\n2. Support scalability: Good IA practices will help us avoid overhauling our previous work whenever the product grows or changes.\n3. Create familiarity: Regardless of how our merchants access Shopify, it should feel like the same product. Creating a common experience goes beyond design and extends to how we structure Shopify’s content.\n\n---\n\n## Our IA principles\n\nThese principles will help you make good IA decisions no matter what you’re working on.\n\n### Show your audience where they are\n\nSuccessful wayfinding happens when your audience can make navigation decisions that fulfill their goal. For navigation to enable wayfinding:\n\n- Establish multiple navigation schemes\n- Use task-based navigation\n- Integrate secondary navigational support (like breadcrumbs)\n\nNavigation is a tool that serves a number of wayfinding purposes.\nGood navigation allows our merchants to explore a topic in depth, switch tasks easily, and filter information.\n\nIn the Shopify admin, merchants can find their way using multiple navigation schemes:\n\n- Structural: main navigation, local navigation, breadcrumbs\n- Associative: contextual links to other features or help documentation\n- Utility: linked avatars to access your account, search\n\nIn the Shopify admin, merchants can find their way to the blog posts page using the side navigation (nav) and search. They can use the breadcrumb to go up to the main level in the Online Store section of the nav. They can also access related help documentation through the contextual “learn more” footer at the bottom of the page.\n\n![Blog posts page breadcrumbs and left side navigation](/images/foundations/foundations/information-architecture/blogposts-breadcrumb-nav@2x.png)\n\n### Give content one home and many doors\n\nAll people are unique and have different information-seeking behaviors. For example, one person might start their experience from various points in a product or shift their focus midway through a task. They might also begin a task on one device and finish it on another. To facilitate these behaviors, all screens should have meaningful navigation and bridge content to other parts of the product.\n\nThe content on the Shopify Help Center’s shipping page only lives in the Help Center—we don’t duplicate it in the Shopify admin or on our marketing pages. But even though it only lives in one place, we give merchants access to it when it’s likely that they’ll need more context on shipping (like through a link on our shipping settings page in the Shopify admin).\n\n![shipping labels settings with link to docs](/images/foundations/foundations/information-architecture/shippinglabels-link@2x.png)\n\n### Avoid information overload\n\nAlthough we want to give our merchants all the information they need to complete a task, we need to avoid overloading them with information. Don’t over-simplify, but don’t burden your user with choice. To do this in design, we use progressive disclosure, but this principle also applies to information architecture. To practice progressive disclosure in IA:\n\n- Gradually reveal information as it’s requested\n- Provide multiple access points to information\n- Eliminate redundant content\n\nThe content on the [Shopify Capital page](https://www.shopify.com/capital) on Shopify.com summarizes the benefits of receiving capital from Shopify at a high level. After scanning the summary, merchants have the option to access more information about the program with a link to the [docs on the Shopify Help Center](https://help.shopify.com/en/manual/your-account/shopify-capital?itcat=capital&itterm=capital-resources-help-docs). By progressively disclosing information in this way, we help merchants reach decisions faster and avoid the frustration and disorientation of front-loading with too much detail.\n\n![capital page landing page](/images/foundations/foundations/information-architecture/capitalpage-hero@2x.jpg)\n\n### Plan for growth and change\n\nInformation architecture, like design, is not set in stone. It should change with your product. As such, the IA decisions you make need to leave room for growth while also continuing to promote consistency across the experience.\n\nThe [Shopify.com homepage](https://www.shopify.com/) takes a scalable approach to page architecture—the structure was designed to adapt as Shopify expands to different locations. This was done by taking a modular approach.\n\nEach locale can customize the homepage to meet their needs. For example, for 2 stories, they can use 2 banners. For 3, they can use 1 banner and 2 tiles.\n\n![Three content components Denmark page](/images/foundations/foundations/information-architecture/de-component@2x.png)\n\n![2 content components India page](/images/foundations/foundations/information-architecture/india-component@2x.jpg)\n\nTo make sure your IA decisions are scalable:\n\n- Communicate early and often, within and outside of your team.\n  Open the lines of communication when doing IA work and make sure your work aligns with the work of other areas of the product.\n- Think about the future and how the work you’re doing will intersect with other projects.\n- Create content groups that are flexible enough to accommodate growth, while being meaningful to the user.\n- Consider how your IA will adapt to multiple environments and their existing patterns (for instance, iOS, Android, desktop browsers, chat bots, retail products like Point of Sale).\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Internationalization",
      "keywords": [
        "internationalization",
        "localization",
        "translation",
        "internationalizing",
        "localizing",
        "translating",
        "locale",
        "overseas",
        "international",
        "global",
        "globalization",
        "japan",
        "germany",
        "france"
      ]
    },
    "intro": "Make commerce better for everyone by building interfaces that work everywhere. These guidelines will help you design, write, and build products that can be used in every part of the world.",
    "content": "\n\n# Internationalization\n\nMake commerce better for everyone by building interfaces that work everywhere. These guidelines will help you design, write, and build products that can be used in every part of the world.\n\nWe want our merchants to experience Shopify in a way that’s appropriate and meaningful to them, no matter where they are in the world.\n\nWe aim to build one experience that works for all merchants in all of our markets. However, when a certain experience doesn’t fit a specific market, we should tailor it.\n\n---\n\n## Definitions\n\n### Internationalization\n\nBuilding your product and interface so they can be used in different locales. This includes creating flexible interfaces that allow for text expansion and changes to word order.\n\n### Localization\n\nAdapting your product and interface for different locales to make them a good cultural fit. This includes adapting features, changing visuals, and translating text.\n\n### Translation\n\nConverting text from one language to another. Not to be confused with localization, translation is just one part of localizing a product.\n\n### Locale\n\nA linguistic region defined by both its language and country. Examples:\nFrench-France (fr-FR); French-Canada (fr-CA); Portuguese-Brazil (pt-BR). Note that languages and countries won’t always have a 1:1 mapping.\n\n---\n\n## Plan for text expansion\n\nWhen interfaces are localized, the content will often expand in length. In most languages, text is up to 50% longer on average than English. Some non-Latin languages, such as Japanese, take up more vertical space. For character-based languages, text wrapping and line breaking can’t always rely on spaces to separate words. Your interface needs to be flexible enough to accommodate language-specific formatting and text expansion without changing its context of use.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Good example of flexible layouts with text expansion](/images/foundations/foundations/internationalization/info-hierarchy-do@2x.png)\n\nLay out your elements in a way where text expansion doesn’t hinder your information hierarchy.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Bad example of flexible layouts with text expansion](/images/foundations/foundations/internationalization/info-hierarchy-dont@2x.png)\n\nDon’t rely on responsive stacking alone. It can often change the hierarchy of information of the layout. In this case, the text expansion causes the line break at the wrong spot, placing the button in the middle of the heading and content of this card.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Good example of narrow columns with text expansion](/images/foundations/foundations/internationalization/narrow-columns-do@2x.png)\n\nUse single columns to stack elements flexibly to accomodate for text expansion.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Bad example of narrow columns with text expansion](/images/foundations/foundations/internationalization/narrow-columns-dont@2x.png)\n\nAvoid using narrow columns in smaller components. Ensure the right amount of padding for a clean interface.\n\n</div></div>\n\n### Tips\n\n- Always assume the worst-case scenario for text length, especially on mobile and in layouts such as tables and columns. Avoid using narrow columns.\n- Pay particular attention to content elements that only have a few words. In English, labels and buttons [exclude words such as “a” or “the”](/content/actionable-language#section-buttons), but many other languages need to include them. Overall these small pieces of text may expand up to 300%.\n- Our components are designed to be expandable, but you should still test them in your designs and builds. Check the CSS layout to make sure text doesn’t overflow when the screen size is reduced.\n- Work with linguistic experts to review line breaks and word wrapping for character-based languages, like Chinese or Japanese, to ensure they don’t break sentences.\n\n---\n\n## Plan for changes in word order\n\nWord order can change dramatically in translation. If the layout and functionality of your interface is dependent on a certain word order, it’s likely to break when localized.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Good example of avoiding sentence-based UI](/images/foundations/foundations/internationalization/sentence-based-ui-do@2x.png)\n\nIf content elements need to stay in a certain position on the page, implement them as separate labels, outside of sentences.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Bad example of sentence-based UI](/images/foundations/foundations/internationalization/sentence-based-ui-dont@2x.png)\n\nDon’t place elements with a fixed position inside a sentence. The order of this sentence would often need to change in translation, which is impossible to do if the interface is built this way.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Good example of hyperlinking text](/images/foundations/foundations/internationalization/hyperlink-text-do@2x.png)\n\nWhen including links in body text, only use a single and descriptive term or a small part of a phrase as the link. Find out more about [links](/content/actionable-language#section-links).\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Bad example of link within sentence](/images/foundations/foundations/internationalization/hyperlink-text-dont@2x.png)\n\nDon’t use full phrases as links. Word order changes might break the link into several parts when translated.\n\n</div></div>\n\n### Tips\n\n- Assume the word order of every sentence in your interface will change when translated.\n- Avoid using UI components to build sentences.\n- Avoid splitting one sentence into several strings, known as concatenated strings. If you use concatenated strings, translators won’t be able to change the word order and their translations won’t make sense.\n- Avoid using variables in your strings as it will translate differently.\n\n---\n\n## Plan for cultural differences\n\nMerchants in each locale have different cultural sensibilities. Use visuals, content, and interface formats that are useful and meaningful to merchants in all parts of the world.\n\n![Good example of icon usage](/images/foundations/foundations/internationalization/icons-meaning@2x.png)\n\nWhen possible, use universally known icons. Be mindful of when you use country-specific icons and where they are surfaced. Find out more about [icons](/foundations/design/icons).\n\n![Bad example of text fields](/images/foundations/foundations/internationalization/colors-cultural-context@2x.png)\n\nBe mindful of using colors to represent meaning. Colors can hold discrete connotations in different cultures. For example, in North America, green is used to indicate success and red for failure, as opposed to China, where red symbolizes prosperity and good fortune.\n\n### Tips\n\n- When using photos, illustrations, icons, or emojis, make sure the visuals you’re using are not offensive or culturally insensitive. If you’re unsure about a visual you’re using, research it or ask someone with local knowledge.\n- When naming features, be mindful of connotations in other cultures, especially for evocative names and acronyms. Find out more about [naming](/content/naming).\n- Avoid colloquial words, idioms, and references to popular culture. It’s difficult to translate them in a meaningful way.\n- In some cultures, a person’s given name comes first, whereas in other cultures the family name comes first. Let merchants choose how they want to enter, read, and sort names, especially in text fields and lists.\n- Many types of information, such as addresses, dates, numbers, and currencies, are shown in different formats in different locales. For example, some locales display currency symbols before the number, others display them after. Make sure these can be translated appropriately. Find out more about [formatting localized currency](/foundations/formatting-localized-currency#navigation).\n- Some cultures expect more guidelines and instructions when filling in long or critical forms. Consider using asterisks to mark mandatory fields in a form to match that expectation.\n- Work with people that have local knowledge if possible.\n\n---\n\n## Internationalize Polaris components\n\n- When designing with a Polaris component, test the localized versions to make sure it still works with the rest of your interface.\n  If you need a certain component to adapt, but it hasn’t yet been internationalized in Polaris, you can open a feature request in [GitHub](https://github.com/Shopify/polaris-react/issues/).\n",
    "category": "foundations"
  },
  {
    "frontMatter": {
      "name": "Error messages",
      "keywords": [
        "error states",
        "invalid",
        500,
        400,
        404,
        "error pages"
      ]
    },
    "intro": "Error messages can be scary. Make errors visible to merchants, easy to understand, and helpful.",
    "content": "\n\n# Error messages\n\nError messages can be scary. Make errors visible to merchants, easy to understand, and helpful.\n\nError messages should:\n\n- Tell merchants what happened. If there’s a solution, explain it. If possible, offer a one-click fix with a button. If there’s\n  [no solution](#errors-without-solutions), give troubleshooting instructions.\n- Be placed close to the source of the problem.\n- Communicate severity using the appropriate [color](#colors) and\n  [tone of voice](#voice-and-tone).\n- Use\n  [plain language](/content/product-content#section-write-for-a-grade-7-reading-level).\n- Be specific. For example, use precise\n  [numbers and dates](/content/grammar-and-mechanics#section-dates-numbers-and-addresses).\n- Be brief.\n\nGood design can reduce the need for error messages by preventing them in the first place.\n\n---\n\n## Error message types\n\nThink about the scope of the error when selecting a message type. Is something wrong with the entire application, with the entire current screen, or with a specific element on the screen?\n\nIf the cause of the error is visible and the error just happened, show the error message immediately and as close to the source of the problem as possible.\n\n### [Text field validation error](#form-validation)\n\nUse when:\n\n- An error applies to a text field and feedback can be provided while merchants are typing\n\n![Text field validation](/images/foundations/patterns/error-messages/text-field-validation-error@2x.png)\n\n### [Settings warning](#settings-warning)\n\nUse when:\n\n- The form input is valid, but you want to warn merchants of a consequence they might not expect\n\n![Settings warning error](/images/foundations/patterns/error-messages/settings-warning@2x.png)\n\n### [Page-level banner: critical or warning](#page-level-banners)\n\nUse when:\n\n- An error applies to the entire page\n- The error is far down the page and it’s critical merchants see the message\n- Multiple validation errors on the page need to be summarized\n- The error was delayed and it’s okay to inform merchants of the problem when they return to the page\n\n![Yellow page level banner](/images/foundations/patterns/error-messages/page-level-warning-banner@2x.png)\n\n![Red page level banner](/images/foundations/patterns/error-messages/page-level-critical-banner@2x.png)\n\n### [Banner in a card or modal: critical or warning](#banners-in-cards-modals)\n\nUse when:\n\n- An error applies to a single card within the page, a single section within a card, or a modal\n- You need to direct merchants to a page with multiple sections and you want to visually call out the section with the error\n\n![Yellow section level banner](/images/foundations/patterns/error-messages/section-level-warning@2x.png)\n![Yellow field level banner](/images/foundations/patterns/error-messages/field-level-warning-02@2x.png)\n\n### [Exception list: critical or warning](#exception-list-errors)\n\nUse when:\n\n- A message placed within or next to a component can help merchants make better decisions about routine tasks\n\n![Warning exception list error](/images/foundations/patterns/error-messages/exception-list-warning@2x.png)\n\n![Critical exception list error](/images/foundations/patterns/error-messages/high-risk-fraud@2x.png)\n\n### [Home notification: critical or warning](#home-notifications)\n\nNote: Home notifications should rarely be used for errors. Always attempt to display an error close to the source of the problem.\n\nUse when:\n\n- A high-priority task must be completed immediately to continue using Shopify or avoid losing money\n- A feature doesn’t have a dedicated details page\n\n![Yellow home notification](/images/foundations/patterns/error-messages/home-notification-warning@2x.png)\n\n![Red home notification](/images/foundations/patterns/error-messages/home-notification-critical@2x.png)\n\n### [Admin unavailable](#admin-unavailable-errors)\n\nUse when:\n\n- A server error is preventing an entire page from being displayed, like with 400 or 500-series server errors\n- Account permissions are preventing someone from accessing Shopify\n\n![Admin page not found error](/images/foundations/patterns/error-messages/page-not-found@2x.png)\n\n![Admin page load error](/images/foundations/patterns/error-messages/admin-error@2x.png)\n\n---\n\n## Error colors\n\nRed is the scariest error color. Only use red for critical messages that merchants need to deal with immediately to avoid harm to their business. For example, if merchants don’t act on the message right away, they might lose money or their store might be suspended.\n\nYellow error messages still demand attention, but are more appropriate for messages that are part of a daily workflow.\n\n### Red (critical)\n\nUse critical messages to:\n\n- Bring attention to urgent tasks. If not dealt with immediately, merchants' businesses will be noticeably impacted, like an account being suspended or money being lost.\n\nExamples of critical message types:\n\n- Update a payment method expiry date\n- Unsuspend an account\n- Review an order for fraud\n- Fix a problem that’s preventing payment from being processed\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Red banner with high fraud risk message](/images/foundations/patterns/error-messages/red-banner@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Yellow banner with high fraud risk message](/images/foundations/patterns/error-messages/yellow-banner@2x.png)\n\n</div></div>\n\nThe one exception to using red is in form validation errors because this is a standard convention merchants are used to seeing outside of Shopify.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Form validation with red banner](/images/foundations/patterns/error-messages/validation-banner-red@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Form validation with yellow banner](/images/foundations/patterns/error-messages/validation-banner-yellow@2x.png)\n\n</div></div>\n\n### Yellow (warning)\n\nUse warning messages to:\n\n- Help merchants fix issues so they can complete a common workflow or continue to the next step\n- Notify merchants about upcoming expirations or pending requests that, if not dealt with soon, could lead to problems in the future\n\nExamples of warning message types:\n\n- Fix a problem before proceeding to the next step.\n- Fix a problem at some point in a common workflow.\n- There’s a pending request.\n- There’s an upcoming expiration.\n- Changing a setting might have unintended consequences. See\n  [settings warning](#settings-warning).\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Yellow banner with warning message](/images/foundations/patterns/error-messages/yellow-do@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Red banner with warning message](/images/foundations/patterns/error-messages/yellow-dont@2x.png)\n\n</div></div>\n\n---\n\n## Anti-patterns\n\n### Avoid using toast for error messages\n\nAlthough error toast is still available, we discourage its use. Toast messages are too short to adequately explain what went wrong and how to fix the problem. Because the toast component appears at the bottom of the screen and disappears after 3 seconds, it can easily be missed. Reserve toast for errors not caused by merchants, like a connection issue. Always try to use a banner to inform merchants about persistent errors.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Don’t\n\n![Toast error message](/images/foundations/patterns/error-messages/dont-toast-error@2x.png)\n\n### Don’t use modals for errors\n\nModal dialogs are a good way to ask merchants to confirm a destructive action, but not to tell them an error has occurred.\nModals block merchants until a decision is made, which is likely to make merchants feel pressured. Most errors don’t need to block access to the rest of the feature.\n\n<!-- dodont -->\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Modal error message](/images/foundations/patterns/error-messages/dont-modals-for-errors@2x.png)\n\n### Avoid using [home notifications](#home-notifications) for errors\n\nHome notification errors are for high-priority tasks that merchants must complete immediately to continue using Shopify or prevent\na negative impact to their business, like losing money.\nOne exception is errors for features that don‘t have a dedicated details page.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Don’t\n\n![Home notification error message](/images/foundations/patterns/error-messages/dont-home-notification@2x.png)\n\n</div></div>\n\n---\n\n## Form validation\n\n### Text field validation\n\nUse when:\n\n- A text field has formatting requirements. Use this pattern to enhance\n  [validation on form submission](#validate-on-submit).\n\nDon’t use when:\n\n- It takes\n  [more than a full second](https://developers.google.com/web/fundamentals/performance/rail#ux) to validate input and display a message. If there’s a lag before a validation message appears, merchants might shift their attention and miss the error.\n  Either find a way to improve the validation speed, or rely on the\n  [validation after form submission](#validate-on-submit).\n- The field is empty. Merchants might tab through a form before filling it out, and errors on empty fields can cause confusion and frustration.\n\n### Component\n\n- [Text field](/components/text-field)\n\n### Content\n\n- Use two or three words to explain what’s wrong or what’s needed to fix the problem.\n- Avoid using the word \"invalid\" to define an error. When appropriate, use \"not valid\" instead.\n- Since the message is directly below the text field, the copy only needs to explain why the error happened. Optionally, the message can clarify what to do next or offer a one-click fix.\n\n![Text field validation error](/images/foundations/patterns/error-messages/text-field-validation-error-no-cursor@2x.png)\n\n**Usage**\n\nDo an initial validation check as soon as merchants finish typing in the field.\n\nMerchants can be considered to be finished typing only when keyboard focus moves away from the field and there is at least one character in the field. This helps avoid marking the field as not valid before merchants are really done typing.\n\n![Initial validation check with purple border](/images/foundations/patterns/error-messages/text-field-validation-purple-incorrect-input@2x.png)\n\nIf the validation check fails, show an error message below the field.\n\n![Text field turns red](/images/foundations/patterns/error-messages/text-field-validation-error-no-cursor@2x.png)\n\nOnce a field has an error, complete validation checks after each keystroke.\n\n![Text field validation with cursor by incorrect semi colon](/images/foundations/patterns/error-messages/text-field-validation-cursor@2x.png)\n\nRemove the error message as soon as the input becomes valid so merchants can immediately tell they fixed the issue.\n\n![Text field validation with purple border](/images/foundations/patterns/error-messages/text-field-validation-purple-border-cursor@2x.png)\n\nIf the validation process is less than a second but not instant, show a spinner on the field to indicate validation progress.\n\n![Text field validation in loading state with spinner](/images/foundations/patterns/error-messages/text-field-validation-loading@2x.png)\n\n---\n\n## Validate on submit\n\nValidate on submit is triggered when merchants press the form’s submit button. The submit button is often \\[Save\\], but can be another call to action.\n\nUse when:\n\n- Not all fields can be validated while merchants are typing. When a form is used for saving data, always validate on submit and validate text fields while typing. For example, if merchants never interact with a required text field, there’s no change to mark it as not valid until they press the submit button. The same applies to form controls other than text fields, such as radio buttons, and selects.\n\nDon’t use when:\n\n- A form doesn’t have specific validation requirements, or the form doesn’t save data. For example, a search form that returns no results should display an empty state, rather than a validation error.\n\n### Component\n\n- [Banner](/components/banner#navigation)\n\nAnd one or more of the following:\n\n- [Text field]\n- [Select]\n- [Choice list]\n- [Checkbox]\n- [Radio button]\n\n### Content\n\nBanner heading\n\n- Use a colon to introduce the list.\n- Make the heading instructional. Don’t just call out that there are {x} number of errors.\n\nBanner body text\n\n- Use the [list component](/components/list#navigation) to itemize the errors\n- Start each list item with the label of the field that isn't valid, and describe the action needed to fix it\n\nIndividual field error messages:\n\n- See content guidelines for [validation while typing](#validate-while-typing)\n\n![Red form validation banner](/images/foundations/patterns/error-messages/validation-banner-red@2x.png)\n\nRather than pointing out that there are {x} number of errors, be more descriptive. Explain that in order to save or continue, {x} number of fields need to be changed. For the bullet point instructions, see if you can word them to be more actionable, for example, “Add a discount code,“ instead of “Discount can’t be blank.“\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Instructional validation banner](/images/foundations/patterns/error-messages/validation-banner-content-do@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Validation banner that only points out that there is an error](/images/foundations/patterns/error-messages/validation-banner-content-dont@2x.png)\n\n</div></div>\n\n**Usage**\n\nAlways indicate submission progress. If the fields aren't valid, don’t clear or alter them on behalf of merchants during validation.\n\n![Spinner displaying on save](/images/foundations/patterns/error-messages/submission-progress@2x.png)\n\nIf the form submission has a single error:\n\n- Move scroll position to the field that is not valid\n- Focus the field\n- Show an error message below the field\n\n![Validation error for a price entry field](/images/foundations/patterns/error-messages/input-validation@2x.png)\n\nIf the form submission has multiple errors:\n\n- Move scroll position to the top of the screen\n- Use a banner to display a summary of all the errors\n- Show an error message below each field that is not valid so merchants can scroll through and make corrections\n\n![Red form validation banner](/images/foundations/patterns/error-messages/validation-banner-red@2x.png)\n\n---\n\n## Settings warning\n\nUse:\n\n- To help merchants prevent potential mistakes\n- When form input is valid, but you want to warn merchants of a consequence they might not be expecting\n\nDon’t use:\n\n- For actual error states\n\nTip: Explore ways to prevent the warning message from showing at all. Look for opportunities to add help text or other contextual information to surface or highlight potential risks or consequences of taking, or not taking, the action.\n\n### Component\n\n- [Banner](/components/banner) without title\n\n### Content\n\n- Since the warning message is in close context to the action that triggered the warning, it should be short\n- Explain the risks or consequences of an action that’s just been taken\n- These messages don’t have to start with actionable language, like, “Change currency.” Here are some options\n  - Start with the word “This” and explain the consequence, for example, “This will affect inventory prices”\n  - Start by noting the action, then explain the consequence, “Changing {x} will affect {y}”\n- If available, link to a resource where merchants can learn more\n\n![In line warning banner below a drop down](/images/foundations/patterns/error-messages/settings-warning@2x.png)\n\n---\n\n## Banners\n\n### Page-level banners\n\nUse when:\n\n- An error applies to the entire screen\n- The error is far down the page and it’s critical that they see the message\n- [A form was submitted with fields that are not valid](#form-validation)\n- If the error was delayed, for example, an action was taken and the error doesn’t immediately appear in context\n\nDon’t use when:\n\n- It’s possible to place the banner [in context] because the source of the error is in view and the event that triggered the action just happened\n\nFor multiple error guidelines, see [validate on submit](#validate-on-submit)\n\nPage-level banner errors should explain:\n\n- Where the error happened\n- What happened\n- Why it happened\n- What to do next\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Error message with arrows pointing at different parts of the message](/images/foundations/patterns/error-messages/banner-breakdown@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Unable to process payment for checkout with negative taxes.\n\n</div></div>\n\n### Component\n\n- [Banner](/components/banner)\n\n### Content\n\nHeadings should:\n\n- Clearly state the problem\n- Not use punctuation\n\nBody content should:\n\n- Explain how to solve the problem.\n- Use actionable language like “do x.” Don‘t use permissive language, like “you can x.” Be concise: no longer than 2 sentences.\n- Use periods.\n\nCalls to action should:\n\n- Be action-led (verb+noun format)\n- Aim for a one-click fix. If the error can be fixed via a single button or menu, offer that action directly in the error message.\n- Open a dedicated error-correction view for more complex problems such as reviewing a risky order or editing an unverified customer address.\n- Provide a link to documentation for information that may be valuable but can’t fit in a brief error message.\n\n![Page level warning banner](/images/foundations/patterns/error-messages/page-level-warning-banner@2x.png)\n\n### Banners in cards and modals\n\nUse when:\n\n- Merchants are engaged in a task flow and you want to warn them about potential issues with the task at hand, or inform them something has gone wrong\n- Directing merchants to a page with multiple sections and you want to visibly call out the section with the error\n\nDon’t use when:\n\n- An error applies to the entire screen.\n- The error is far down the page and it’s critical that merchants see the message.\n- If the error was delayed. For example, an action was taken and the error doesn’t immediately appear in context. In these cases, use the\n  [page-level banner](#page-level-banners)\n\n### Component\n\n- [Banner](/components/banner#navigation)\n\n### Variant\n\n- Without title\n\n### Content\n\n- The more contextual the message, the less you need to say, so go straight to explaining what happened and how to fix\n- Keep to one sentence\n- Contextual banners don’t have titles\n- Try to add a next step, whether in a button or link\n- Use when there is more than one call to action\n\n![Warning banner at the top of a card below the card title](/images/foundations/patterns/error-messages/section-level-warning@2x.png)\n![Small warning banner in a section within a card](/images/foundations/patterns/error-messages/section-level-warning@2x.png)\n\n---\n\n## Exception lists\n\nUse when:\n\n- Items in a list are in a noteworthy state that you want to make merchants aware of, like a status, or piece of information (like a high risk order) that’s directly relevant to the information it’s connected to\n\nExample:\n\n- High risk order\n\nDon’t use when:\n\n- The source of the problem is an entire card or page\n\n### Component\n\n- [Exception list](/components/exception-list)\n\nVariant\n\n- Status: critical or warning\n\n### Content\n\nContent should:\n\n- Highlight an exceptional state that encourages clicking on the list item\n- Pair content with a warning or error icon\n- Always lead with what went wrong\n- A description is required\n- A title is optional\n- Links are optional but not common because the list item is actionable\n- Be concise\n\n![Exception list warning](/images/foundations/patterns/error-messages/exception-list-warning@2x.png)\n\n![Exception list error](/images/foundations/patterns/error-messages/high-risk-fraud@2x.png)\n\n---\n\n## Home notifications\n\nHome notifications are primarily used to prevent merchants from losing money or help them continue using Shopify if they don’t act on the error message instructions immediately.\n\nUse for:\n\n- High-priority tasks that must be completed immediately to continue using\n  Shopify or avoid losing money.\n- Important enough tasks that we wouldn’t want merchants to navigate to another place in Shopify to find it, or stumble upon while completing another task.\n- Errors for features that don’t have a dedicated details page. For example, before\n  Shopify Capital had a details page, related status messages were temporarily surfaced in Home.\n\nDon’t use for:\n\n- Tips or advice\n- Positive feedback\n- Confirmation messages\n- New feature announcements\n- Status messages, other than those for Shopify Capital\n- Messages that can be displayed in context\n- Error messages that should be displayed in context\n- Task-related errors like a problem with saving a page\n\n![Structure of home notification with a header, body content, and button](/images/foundations/patterns/error-messages/home-notification-anatomy@2x.png)\n\n### Warning home notifications\n\nWarning home notifications are pre-emptive. They let merchants know that their finances will be impacted if action isn’t taken in a couple days or more, or that an action can be taken to make money sooner.\n\n- Financing request is pending\n- Warn about upcoming expiration\n- Pending status, like with Shopify Capital application status\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Warning home notification with credit card expiry message](/images/foundations/patterns/error-messages/home-notification-warning@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Warning home notification with chargeback message](/images/foundations/patterns/error-messages/dont-home-notification@2x.png)\n\n</div></div>\n\n### Critical home notifications\n\nCritical home notifications inform merchants of issues that:\n\n- Currently impact their finances\n- Will have an impact on their finances if action isn’t taken immediately\n- Prevent the normal operation of their business or account\n\nCritical home notifications can be used for these message types:\n\n- Trial expired\n- Domain expired\n- Credit card expired\n- Account is suspended\n- Shopify Payment payouts on hold\n- Payment processing issues\n- Payment authorizations expiring that day\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Critical home notification with account on hold message](/images/foundations/patterns/error-messages/home-notification-critical@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Critical home notification with out of stock message](/images/foundations/patterns/error-messages/dont-home-notification-02@2x.png)\n\n</div></div>\n\n---\n\n## Admin unavailable errors\n\nSometimes the admin can’t be displayed due to a network issue, browser limitation, connection problem, or server issue. 400 and 500 series errors fall in this category. In these cases, always explain what went wrong and provide merchants with a troubleshooting step, like refreshing the page.\n\nUse when:\n\n- A page or the entire admin can’t be displayed\n\nDon’t use when:\n\n- The error can be placed in context, close to the source of the problem\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Page not found error with internet connection message](/images/foundations/patterns/error-messages/page-not-found-02@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Page not found error with oops, something went wrong message](/images/foundations/patterns/error-messages/dont-page-not-found@2x.png)\n\n</div></div>\n\nDon’t use internal language in error messages and avoid using question formats.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Problem loading page error with troubleshooting tips](/images/foundations/patterns/error-messages/admin-error@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![Problem loading page error with content that talks about operational engineers](/images/foundations/patterns/error-messages/dont-admin-error@2x.png)\n\n</div></div>\n\n### Component:\n\n- [Empty state](/components/empty-state)\n\n### Content\n\nHeadings should:\n\n- Heading should explain what went wrong\n- Body should help merchants troubleshoot the problem\n- Call to action should provide the most probable fix, like reloading the page, or going to the previous page or Shopify Home\n\n![Page not found error](/images/foundations/patterns/error-messages/page-not-found@2x.png)\n\n---\n\n## Errors without solutions\n\nWhen a service issue occurs in Shopify or is caused by a third party, we don’t always have a solution to offer to merchants. In these cases, always explain what went wrong so they can attempt to troubleshoot. If available, provide them with a troubleshooting step, like refreshing the page or returning at a later time.\n\nUse when:\n\n- Merchants are being denied access to a page or the entire admin\n  [See admin unavailable errors](#admin-unavailable-errors)\n- A third party issue is causing a disruption to merchants’ workflows\n\nDon’t use when:\n\n- There’s literally any solution we can offer to merchants\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![Carrier may not be able to pick up package error message](/images/foundations/patterns/error-messages/warning-no-solution@2x.png)\n![Carrier may not be able to pick up package error message](/images/foundations/patterns/error-messages/warning-no-solution-2@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Don’t use the “Something went wrong. Please try again in a few minutes.” message when there’s any option to offer more context.\n\n</div></div>\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- This error message is a last resort: \"Something went wrong. Please try again in\n  a few minutes.\"\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- An error occurred\n- 1 error\n- Invalid\n\n</div></div>\n\n---\n\n## Voice and tone\n\nThese content guidelines are based on common copy mistakes. Avoid sounding overly apologetic, too technical, or hyperbolic. Keep Shopify out of the conversation unless Shopify was the cause of the error. Don’t downplay the error by telling merchants not to worry or by adding humor to a negative situation.\n\nAvoid the word “please” so it’s not overused throughout the admin. Don’t downplay serious problems.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Some of today’s sales data isn’t updated yet. This will be fixed soon. Your data is safe, and your actual sales are not affected.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Today’s sales data **might** not be accurate, but **please don’t worry—it’s just temporary**.\n\n</div></div>\n\nDon’t use scary, technical words in error messages.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Product weight can’t be negative. Change the product weight to be 0 or higher and try again.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- **Error** **Line items grams** must be greater than or equal to 0.\n\n</div></div>\n\nError messages are not the place for hyperbole or injecting personality.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- High risk of fraud detected\n\nBefore fulfilling this order or capturing payment, review the Risk Analysis and determine if this order is fraudulent.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- **Uh oh! High risk of fraud detected**\n\nLooks like there’s a high fraud risk with this order. Better review the Risk\nAnalysis to make sure the order is safe!\n\n</div></div>\n\nDon’t use internal Shopify terms. Only include the information merchants need.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- There’s a problem loading this page\n\nThere’s a technical problem with Shopify that has prevented this page from loading. Try reloading this page or going to another page in Shopify. If that doesn’t work, visit our status page for updates and try again later.\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- There’s a technical problem with Shopify that has prevented this page from loading. **Our operation engineers are aware of this problem and are working hard to get it solved**.\n\n</div></div>\n\nKeep Shopify out of the conversation. Focus on the information merchants need to complete their task efficiently.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n- Before you can view earnings from your store, you need to complete your account setup. [Complete account setup]\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n- Before **we** can provide you with earnings from your store, **we** need some additional information. [Complete account setup]\n\n</div></div>\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Help content",
      "keywords": [
        "help text",
        "learn more",
        "help center",
        "help"
      ]
    },
    "intro": "​\nHelp content is educational text that describes interactive elements or offers information about concepts in the UI.",
    "content": "\n\n# Help content\n\n​\nHelp content is educational text that describes interactive elements or offers information about concepts in the UI.\n\nThe goal of help content is to teach merchants:\n\n- How to complete a task or make a good decision for their business\n- Important information related to the current workflow\n- How to optimize the way they use Shopify\n\n---\n\n## When to use less, when to use more\n\n​\nThe choice of whether or not to use help content depends on the kind of experience you’re designing.\n\n### Productivity areas\n\n​\nProductivity areas include tasks that merchants do regularly, like adding products and fulfilling orders. These pages are used often and become familiar quickly.\n\nWhen designing productivity experiences, prioritize experienced merchants. This is their space to get work done and we can keep out of their way by offering a clean, streamlined UI. This means minimal help content.\n​\n\n### Educational areas\n\n​\nEducational areas include tasks that merchants do infrequently, like adjusting tax or payments settings. Most of these settings aren’t changed very often, so merchants doing these tasks are often seeing them for the first time.\n\nWhen designing for educational experiences, prioritize merchants who are unfamiliar with the task or workflow. Offer context and guidance to help them make the right decisions for their business. This means making use of help content.\n\n---\n\n## Place help where it’s needed\n\n​\nHelp content belongs as close as possible to the part of the UI it references. If it’s teaching merchants about the purpose of a card, put it at the top of the card as a description. If it’s teaching merchants about a particular field, put it beneath the field as help text.\n\nThe following is an example of help content that was originally a card description, but felt easier to parse after moving closer to the upload actions it helps with.\n\n#### Before\n\n![Before: help text as a card description](/images/foundations/patterns/help-content/Before.png)\n\n#### After\n\n![After: help text close to the upload action](/images/foundations/patterns/help-content/After.png)\n\n---\n\n## Avoid a marketing tone\n\n​\nUsing help content to promote new features can erode trust with merchants. Not every feature is the best choice for every merchant at every point in time, and we shouldn’t assume that they want or need it.\n\nThere are times when our motivations and our merchants’ are highly aligned, and encouraging a certain action through help content might be appropriate. An example of this is discounted annual billing. It’s good for Shopify because of the long-term merchant commitment and up-front payment. It’s good for merchants who are long-term committed to Shopify and can pay up front.\n\nThis example also illustrates that there’s still only a subset of merchants that are at the right place to adopt it. Keep this in mind when suggesting how a feature might help someone’s business.\n\n---\n\n## “Learn more” links\n\n​\n“Learn more” links take merchants to the Shopify Help Center for more detailed information than we can offer in the UI.\n\nMake sure “learn more” links go to a Help Center page or heading that’s specific to the topic.\n\nThe Help Center is a rich resource, but for a merchant it’s not always a convenient time to read documentation. Landing on a dense page of information without knowing where to start is frustrating and disorienting. If there isn’t a page or heading specific to the topic you’re providing help for, work with the documentation team to create the right content.\n\n### “Learn more” badges for settings\n\n​\n“Learn more” badges show an information icon that takes you to the Help Center. These are different from tooltips. On large screens, they expand on hover to reveal a “Learn more” link.\n\n![“Learn more” badge interaction pattern](/images/foundations/patterns/help-content/learn-more-badges-interaction.png)\n\nUse “learn more” badges:\n​\n\n- Only in settings experiences, and only in card headers\n- When the linked Help Center topic is relevant to the entire card\n\nBest practices:\n\n- Use regular “learn more” links for help topics specific to only a part of a card\n- Some cards benefit from a “learn more” badge in the heading in combination with “learn more” links or other help content in the card body\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Home cards",
      "keywords": [
        "home cards",
        "insights",
        "milestones"
      ]
    },
    "intro": "Home cards make actionable recommendations based on data from the merchant’s store, or give merchants feedback about their store’s performance.",
    "content": "\n\n# Home cards\n\nHome cards make actionable recommendations based on data from the merchant’s store, or give merchants feedback about their store’s performance.\n\nHome cards should:\n\n- track progress and give feedback\n- teach and educate\n- inspire and motivate\n- be data-driven and use data from the merchant’s store\n\n---\n\n## Home card types\n\nWhen choosing a home card type, think about the simplest way to present your message. For example, if the goal of the card is to inform merchants about holiday shipping deadlines, then a table is probably the best way to present this information. Alternatively, if your goal is to recognize merchant success, consider using a large illustration with some encouraging content.\n\n### Simple card\n\nUse when\n\n- you have one data point or recommendation, and one action. Use of the “Learn more” link is optional.\n\n![Simple Home card encouraging the merchant to add or learn more about an advertising campaign](/images/foundations/patterns/home-cards/simple-home-card@2x.png)\n\n### Action-list card\n\nUse when:\n\n- you have one data point and a series of related actions\n\n![Action-list home card showing several suggested discounts the merchant can add, and prompting them to create their own](/images/foundations/patterns/home-cards/action-list-home-card@2x.png)\n\n### Table card\n\nUse when:\n\n- you have more than one data point but one action\n\n![Table card showing shipping services and the holiday dates the merchant can expect for each, with a prompt to see unfulfilled orders](/images/foundations/patterns/home-cards/table-home-card@2x.png)\n\n### Large illustration card\n\nUse when:\n\n- you need to introduce an unfamiliar concept, or you want to recognize merchant success\n- you want to announce a new Shopify feature\n\n![Large illustration card encouraging and prompting the merchant to set up gift cards for the holidays](/images/foundations/patterns/home-cards/large-illustration-home-card@2x.png)\n\n### Graph card\n\nUse when:\n\n- you need to show trends over time or compare two datasets\n\n![Graph card showing an upward trend in traffic to the merchant’s store from a social media post](/images/foundations/patterns/home-cards/graph-home-card@2x.png)\n\n### Video card\n\nUse when:\n\n- you need to communicate an unfamiliar concept or idea, or explain a complex task\n\n![Video card showing a video introducing an app, with a call to action to add it to the merchant’s store](/images/foundations/patterns/home-cards/video-home-card@2x.png)\n\n### Blog card\n\nUse when:\n\n- you need to recommend a helpful [Shopify blog post](https://www.shopify.com/blog) based on a merchant’s previous activity\n\n![Blog card showing a short description and link for a blog post relevant to the merchant’s experience](/images/foundations/patterns/home-cards/blog-home-card@2x.png)\n\n### Comparison card\n\nUse when:\n\n- you need to compare two data points\n\n![Comparison card showing a brief description of a specific data point, with a comparison between the merchant’s data and an industry standard](/images/foundations/patterns/home-cards/comparison-home-card@2x.png)\n\n---\n\n## Content\n\nIn general, home card content should follow this format:\n\n- The **heading** should clearly state the merchant benefit or primary data point. Keep headings to a single sentence fragment and don’t use punctuation at the end.\n- **Body** content should explain the value or significance of the information in the heading, and provide next steps. Body content should be concise and no longer than two sentences.\n- The **primary call-to-action** should be clear, predictable, and actionable. A merchant should anticipate where the [call-to-action button](/content/actionable-language#section-buttons) takes them. Call-to-action buttons are action-led (verb + noun format), and shouldn’t exceed 34 characters in length.\n- A **secondary call-to-action** links to a [Shopify Help Center](https://help.shopify.com/) article or a [Shopify Blog](https://www.shopify.com/blog) post. Include a secondary action whenever educational content is available for the topic of the home card. The button content is always “Learn more”.\n\n---\n\n## Voice and tone\n\nA good home card prioritizes merchant needs over Shopify’s needs. Home cards are not advertisements, status updates, or [error messages](/patterns/error-messages).\n\nThe tone changes depending on the context or situation of a card, but it should always be empathetic. For example, for a message about a negative situation, the tone should be considerate and encouraging, with a recommended action on how to fix it.\n\n### Positive situation\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nRecognize milestones that merchants might find significant.\n\n_**Congratulations on your 1st order**_\n_Sarah Rodriguez bought Rainbow Unicorn Plushie._\n\n_**People are subscribing to your mailing list**_\n_Your mailing list lets you contact customers or visitors who have shown an interest in your store. Reach out to them with exclusive offers or updates about your products._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nDon’t downplay or over-exaggerate details.\n\n_**You have received your 10th order.**_\n\n_**Congratulations! You’ve received 4 orders today!**_\n_Fulfill them from your Orders page!_\n\n</div></div>\n\n### Neutral situation\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nShare important information or insights about the merchant’s business.\n\n_**Visitors from these social sites are spending time in your store**_\n_Here’s how many pages they viewed and how long they stayed._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nDon’t emphasize what Shopify can do for the merchant. Focus on the merchant benefit instead.\n\n_**Use Shopify Payments!**_\n_We make it easy to accept payments online and won’t charge you any transaction fees._\n\n_**Shopify Capital is offering you up to \\$10,000 in funding**_\n_It’s easy to apply and it’ll help your business grow!_\n\n</div></div>\n\n### Negative situation\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\nBe considerate with sensitive information and offer merchants solutions if something went wrong.\n\n_**Some of your visitors can’t find what they’re looking for**_\n_You might want to add product descriptions to help them out._\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\nDon’t blame the merchant or only offer impractical or costly solutions.\n\n_**Your shipping rates are high compared to similar stores**_\n_Save money on shipping labels with Shopify Shipping._\n\n_**Sales are down this week**_\n_Consider creating a marketing campaign to promote your products._\n\n</div></div>\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Loading",
      "slug": "loading",
      "keywords": [
        "page loading",
        "loading",
        "load",
        "performance",
        "web performance",
        "speed",
        "focus",
        "guidelines",
        "principles"
      ]
    },
    "intro": "Navigating the Shopify admin should be fast, meaningful, and focused, but unintentional loading can get in the way and break a merchant's flow. To deliver a continuous experience, we need to consider loading states when planning and prototyping.",
    "content": "\n\n# Loading\n\nNavigating the Shopify admin should be fast, meaningful, and focused, but unintentional loading can get in the way and break a merchant's flow. To deliver a continuous experience, we need to consider loading states when planning and prototyping.\n\n---\n\n### Join the conversation!\n\nDo you have ideas or feedback on how we can make these guidelines more empowering and useful? Please share your thoughts in the [GitHub discussion](https://github.com/Shopify/polaris/discussions/5976).\n\n---\n\n## Principles\n\n- **Make it fast.** Plan and prioritize the loading to make it as short as possible.\n- **Make good use of time.** Give merchants useful structure and content.\n- **Focus on the job.** Put merchants' attention on what's important.\n\n---\n\n## Make it fast\n\nWe can speed up loading by planning how much data we load and when we load it. Figure out what content merchants will need first, and make it available as soon as possible.\n\n### Cache commonly needed data\n\nCaching data eliminates the loading time the next time it's needed. Consider caching data that is reused throughout an experience, such as the name and image of an item, and use that to show essential content while other content loads.\n\n### Prefetch relevant data\n\nPrefetching data can save valuable loading time. Start prefetching when merchants show intent to need the data, such as when hovering over an interactive element.\n\n### Prioritize viewport content\n\nThe content that is visible in the viewport is the content that merchants will likely need first. Make sure that such content isn't delayed by content that merchants won't need until after an interaction, such as scrolling or clicking a popover.\n\n### Limit page content\n\nPages with a lot of content take longer to load. By limiting the page to meaningful content that merchants will need, we can speed up the loading and declutter the page. Use progressive disclosure to give merchants more content when they need it, and use [pagination](/components/pagination) to limit long lists. Remember to prefetch the data so that it's readily available.\n\n## Make good use of time\n\nMerchants use the Shopify admin to get work done. Showing the right context, real page structure, and meaningful content will keep them engaged and prepare them for what’s to come.\n\n### Switch to the next view quickly\n\nPeople expect to get the result of their interaction right away. When merchants navigate to a new page or view, it’s typically best to move toward that context immediately, rather than load first and switch later. Sometimes that means reverting to the previous view in case of errors, but it’s often a reasonable tradeoff when success is the most common outcome.\n\n### Use highly accurate loading layouts\n\nThe page layout during loading should allow merchants to scan and understand the page structure. Matching layouts set clear expectations and make merchants proactive. Mismatched layouts confuse merchants and waste their time. Test skeleton content with different breakpoints and make sure both the content and the layout represents the final state.\n\n### Show real content\n\nShowing static content, such as section labels, icons, text, and imagery, gives merchants a head start in understanding the page. A small thing like a labeled card can enable them to anticipate what they need almost immediately. It’s important that we make an effort to show as much real content as possible.\n\n### Show active controls\n\nIdeally, controls are rendered active so merchants can take action before the page is done loading. For example, when a primary action like \"Add product\" is the same everywhere, then you could include it in the loading state.\n\nControls can often be rendered active even when the data behind it hasn’t finished loading. Many times it will be done by the time the merchant interacts with it, and if not, show that it needs to finish loading then. Render it inactive only if it mustn’t be interacted with, but use that as a last resort.\n\n### Give hints with recognizable placeholders\n\nPlaceholders let merchants anticipate content type and location. Use placeholders for visually distinct elements, such as lists, images, controls, text, and data visualizations. This is the most important job [skeleton content](/components/skeleton-body-text) can do. Don’t use placeholders for content that could be rendered.\n\nAvoid details in the placeholder that may not appear. We don't want to draw attention to it and set false expectations.\n\n## Focus on the job\n\nThe task and the content must always be the focus. Confusion and visual noise will distract merchants and waste their time.\n\n### Give clear feedback on the interaction\n\nLoading is typically a consequence of merchants navigating to a new page or view. If it's unclear that their initializing interaction worked, then the experience will start with doubt and confusion.\n\nWhen the interaction feedback is clear, then the interaction is a thing of the past and they can make better use of their time. Make sure that the feedback is noticeable within 100 milliseconds and that it's clear what happened.\n\n### Show real loading progress\n\nThe best way to inform people that the system is working is to show real progress. Real progress puts people’s attention on the content while providing something useful to work with.\n\nProgress within 1 second is perceived as natural and continuous, which keeps people engaged in the task. When actual progress can be shown within 1 second intervals, merchants typically don't need any other loading indicators.\n\n### Make the layout visually stable\n\nIt's very important that the layout doesn't unexpectedly change during the loading process. Merchants will engage with visible content, and unexpected change can confuse or cause them to misclick. Pay attention to layout shifts throughout loading, find out what causes them, and make an effort to remove them. Sometimes we can wait to render some layout until it’s certain it will stay put. Learn more about layout shift and visual stability on [web.dev](https://web.dev/cls/).\n\n### Minimize visual noise\n\nMerchants get distracted by things changing on the screen. Pay attention to anything that changes during loading. Categorize the change as signal or noise, and use the following tips to address it.\n\n- **Remove avoidable visual noise.** For example, fix poorly matching placeholders or plan for unexpectedly appearing content.\n- **Subdue visual noise that is unavoidable.** This includes using transitions to make state changes less sudden such as fading in an image that might render late. When an element’s size is unknown, such as a product index with a variable number of items, then it's typically better to add too many placeholder items than too few. It's less jarring when elements suddenly shrink than when they suddenly expand.\n- **Emphasize the visual change that matters.** Animate items in a list or the most important information on the screen. Emphasizing important content will guide merchants' attention to what they want, while also increasing tolerance for other visual changes.\n\n### Use spinners when real progress isn't enough\n\nUse spinners when it’s not clear that the system is working, but only when it will improve the user experience. Excessive use of loading indicators isn’t informative. Rather, it can be overwhelming and make the system appear slow.\n\n### Avoid using spinners as placeholders\n\nDefault to using more meaningful content where possible. If spinners are needed, place them where it’s easy for merchants to understand what is loading. This helps drawing attention to the content that is about to appear and not to the spinner itself.\n\n### Avoid empty views with spinners\n\nIt's important to provide useful content during loading. Being in the right visual context, seeing progress, or getting a glimpse of what's ahead can go a long way. Empty views with spinners provide low value and cause merchants to become passive and disengage.\n\n### Be honest about lengthy loading times\n\nPeople are likely to be frustrated and abandon their tasks if loading times exceed 10 seconds. In such cases, it's better to set clear expectations and empower merchants to make an informed decision to wait. Put their attention on the value ahead to increase the likelihood that they stay engaged in the task.\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Locations",
      "keywords": [
        "breakpoint",
        "locations",
        "location picker",
        "location list"
      ]
    },
    "intro": "The number of locations a merchant has can range dramatically, and the location experience should adapt to that number. Using progressive disclosure, we can introduce features as merchants need them.",
    "content": "\n\n# Locations\n\nThe number of locations a merchant has can range dramatically, and the location experience should adapt to that number. Using progressive disclosure, we can introduce features as merchants need them.\n\n---\n\n## Principles\n\n- **Leverage shared foundations.** By starting with available components and patterns, we keep design and development simple. Shared foundations also help guarantee familiar experiences for our merchants.\n- **Use progressive disclosure.** This is at the core of designing location experiences. As merchants add locations, patterns should gradually offer more features. For example:\n  - A small number of locations (1–10) doesn’t need text search, sorting, and filtering.\n  - A larger number of locations (11 or more) requires patterns like text search, sorting, filtering, and pagination.\n\n---\n\n## Foundational patterns\n\nWhen building a location experience, leverage components and patterns that offer:\n\n- Easy access to known complex data (text search by location name, city, province, etc.)\n- Access to incomplete or unfamiliar data (filter contextual to the surface area)\n- The ability to organize and browse data (sort contextual to the surface area)\n- Pagination (load additional locations via infinite scrolling)\n\nSometimes existing solutions don’t fit your use case. They are a great place to start, but don’t be afraid to create a new solution for your merchant’s unique situation. If you do create something new, it’s important to document that solution and share it back to the system.\n\n---\n\n## Progressive disclosure\n\nProgressive disclosure means we introduce advanced features only when needed. This keeps things simple, and merchants get the right features at the right moment.\n\nTo scale the experience consistently, we want to establish specific points for introducing new functionality.\n\nWhile there are many ways to treat locations, two common patterns that use progressive disclosure are the location picker and the location list.\n\n### Location picker\n\nThe location picker allows a merchant to select any location they have added in the admin.\n\n![1 location](/images/foundations/patterns/locations/1-location@2x.png)\n\n#### 1 location\n\nWhen a merchant only has one location, the button that opens the location picker should be hidden. There’s no need to access the experience when they can’t switch locations.\n\n![2–10 locations](/images/foundations/patterns/locations/2-10-locations@2x.png)\n\n#### 2–10 locations\n\nWhen a merchant has 2–10 locations, show the button that accesses the location picker. The button always shows the current location.\n\nIn the location picker:\n\n- Make “All locations” the default selected location.\n- Show “All locations” at the top of the list.\n- List all other locations in alphabetical order. Each location item shows the location name only.\n\n![11 or more locations](/images/foundations/patterns/locations/11-or-more-locations-picker@2x.png)\n\n#### 11 or more locations\n\nWhen a merchant has 11 or more locations:\n\n- Apply the same features as 2–10 locations.\n- Add text search at the top of the location picker. This allows merchants to search for locations by specific criteria (location name, city, province, postal code, address, etc.).\n- Directly below the search, show a section with the 5 most recently used locations. If there are none, show the first 5 locations from the full list.\n- Below recently used locations, show an option to view all locations. Clicking this will show the inactive search state, displaying the full list of locations.\n\n### Location list\n\nThe location list allows merchants to view all locations they have added in the admin.\n\n![1–10 locations list](/images/foundations/patterns/locations/1-10-locations@2x.png)\n\n#### 1–10 locations\n\nWhen a merchant has 1–10 locations, show all locations in a simple list. As notated in the image above:\n\n1. Each list item should include the location name and address\n2. The indicator at the bottom shows the total number of locations\n\n![11 or more locations list](/images/foundations/patterns/locations/11-or-more-locations-list@2x.png)\n\n#### 11 or more locations\n\nWhen a merchant has 11 or more locations:\n\n- Apply the same features as 1–10 locations\n- Show text search, filters, and sorting at the top of the list\n\nNotated in the image above, location list functionality at this level includes:\n\n1. **Search**. Allow merchants to find locations via specific criteria (location name, city, province, postal code, address, etc.).\n2. **Sort**. This will be contextual to the use case (alphabetical sort, date created, date edited, etc.).\n3. **Filter**. This is also contextual to the use case. For example, merchants could filter by subscription type.\n4. **Pagination**. Allow the merchant to load and view additional sets of locations. Trigger loading with a “Load more” button.\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Page layouts",
      "keywords": [
        "layout",
        "page",
        "columns",
        "hierarchy",
        "spacing",
        "stack"
      ]
    },
    "intro": "Layout patterns provide common ways to arrange the content of a screen.",
    "content": "\n\n# Page Layouts\n\nLayout patterns provide common ways to arrange the content of a screen.\n\n---\n\n## Structure of a screen\n\nA screen is the entire user interface (UI) of an application at a given time.\n\nA typical Polaris screen consists of several layers. The app frame makes up the outer layer. Within that are the page component and a layout component.\n\nThe layout component arranges containers like cards and banners in a way that’s responsive across all screen sizes.\n\n### App frame\n\n![Screen from the Shopify admin, highlighting the top bar with logo, search and profile menu, and the navigation sidebar on the left](/images/foundations/patterns/page-layouts/app-frame-diagram@2x.png)\n\nThe app frame is the outer UI of the application. It holds global features like top-level navigation and search.\n\n### Page component\n\n![Screen highlighting the top of the page content and the side margins of the page](/images/foundations/patterns/page-layouts/page-frame-diagram@2x.png)\n\nThe [page component](/components/page):\n\n- Acts as a container for the content of each specific page\n- Controls the horizontal margins of the content area\n- Has a header containing the breadcrumb, page title, and page-level actions\n\nPage component variations:\n\n- Full width. Use this for wide content like lists and tables.\n- Single-column. Use this narrow variant to focus the page on a single transaction, like filling out a form.\n\n### Layout component\n\n![Admin screen highlighting a typical layout](/images/foundations/patterns/page-layouts/page-layout-diagram@2x.png)\n\nWithin the page, the [layout component](/components/layout) groups the content into sections. Sections control how the content flows into columns. Each section can be:\n\n- Full-width\n- Primary (2/3 width)\n- Secondary (1/3 width)\n- Annotated\n\n### Arranging content in a layout\n\n![Screen highlighting a layout with: page-level banner up top, primary and secondary sections in the middle, and footer actions below](/images/foundations/patterns/page-layouts/cards-in-layout-diagram@2x.png)\n\nPlace page-level [banners](/components/banner) in a full-width section at the top of the page.\n\nStack [cards](/components/card) in sections to separate the screen’s main content into meaningful groups.\n\nFor screens that represent an individual resource like a product or order, place\n[page actions](/components/page-actions) in a full-width section at the bottom of the page.\n\nFor pages that don’t have footer actions, the\n[footer help component](/components/footer-help) can offer a link to documentation about the current screen.\n\n### Layout in a card\n\n![Diagram showing the anatomy of a card component, showing the card title and header actions at the top, two sections in the middle, and footer below](/images/foundations/patterns/page-layouts/card-layout-diagram@2x.png)\n\n[Cards](/components/card) have a similar structure to the page as a whole.\n\n- Cards often have a header, with a title and card-level actions on the right.\n- Cards can have footer actions.\n- Complex cards can be split into sections. Card sections are automatically separated with a divider.\n- Sections often have a subheader with a title on the left and section-level actions on the right.\n\nFor more details, including when to use header and footer actions, see the\n[card component](/components/card).\n\n---\n\n## Specialty screen types\n\nThe structure described above applies to most screens in the Shopify admin, but other types of screens exist.\n\n**Embedded Shopify apps**, including sales channels, are contained within the normal app frame. However, they display the [page component](/components/page) differently.\n\n![Typical embedded app settings screen, showing the embedded page header with app icon and breadcrumb.](/images/foundations/patterns/page-layouts/embedded-page-diagram@2x.png)\n\n**Sell screens** present opt-in features that require additional payment.\n\n![Shopify Capital sell screen. The standard app frame and page components contain a layout with a large illustration and introductory heading. This is followed by side-by-side cards with different offers, and a grid of selling points.](/images/foundations/patterns/page-layouts/sell-screen@2x.png)\n\n**Immersive editors** are for complex, interactive editing tasks. Immersive editors often show a live preview of what’s being worked on with tools for making changes arranged around the edges.\n\n![Shopify theme editor screen, with specialized top bar and side bar offering edit controls, and a preview of the online store website in the middle](/images/foundations/patterns/page-layouts/theme-editor-screen@2x.png)\n\n---\n\n## Standard page layouts\n\nThe following patterns describe common ways to arrange content within the app frame and below the page header.\n\n### Single column, wide\n\n![Generic customers list screen, showing how a wider layout can fit more content about each customer](/images/foundations/patterns/page-layouts/page-frame-wide@2x.png)\n\nUse this layout for wide list or table views that benefit from more horizontal space.\n\n- Set the page component to full width\n- Use one or more basic layout sections\n\n```jsx\n<Page fullWidth title=\"Single column wide layout\">\n  <Layout>\n    <Layout.Section>{/* Page-level banners */}</Layout.Section>\n    <Layout.Section>{/* Wide page content */}</Layout.Section>\n    <Layout.Section>{/* Page footer content */}</Layout.Section>\n  </Layout>\n</Page>\n```\n\n### Single column, narrow\n\n![Example screen showing a complex form in a narrow layout](/images/foundations/patterns/page-layouts/page-frame-narrow@2x.png)\n\nUse this layout to focus merchant attention on a screen dedicated to a single task, like filling out a form.\n\n- Set the page component to single column (narrow) mode\n- Use one or more basic layout sections\n\n```jsx\n<Page singleColumn title=\"Single column narrow layout\">\n  <Layout>\n    <Layout.Section>{/* Page-level banners */}</Layout.Section>\n    <Layout.Section>{/* Narrow page content */}</Layout.Section>\n  </Layout>\n</Page>\n```\n\n### Primary/secondary\n\nPrimary/secondary layouts split content into a main column and a secondary one.\nThe main column is usually on the left, but can be on the right.\n\nThe most common use of the primary/secondary layout is for showing the details for an individual object, such as an order or product.\n\n![Product details page, with cards for product title, description and images in the left, primary column, and cards for publishing to sales channels and product tags in the secondary column](/images/foundations/patterns/page-layouts/page-layout-details@2x.png)\n\n- Set the page component to its default width.\n- Place the most important content in a primary column.\n- Place other content in the secondary column. Content here should be navigational, less frequently used, or not essential.\n\n```jsx\n<Page title=\"Details page\">\n  <Layout>\n    <Layout.Section>{/* Page-level banners */}</Layout.Section>\n    <Layout.Section>{/* Primary content */}</Layout.Section>\n    <Layout.Section secondary>{/* Secondary content */}</Layout.Section>\n    <Layout.Section>{/* Page actions (delete and save) */}</Layout.Section>\n  </Layout>\n</Page>\n```\n\nAnother use of this layout is for a focused task where a summary is helpful, such as purchasing shipping labels for an order.\n\n![Create shipping labels screen, with configuration for the labels in the left, primary column, and summary with “Buy shipping labels” button in the secondary column](/images/foundations/patterns/page-layouts/page-layout-task-with-summary@2x.png)\n\n- Set the page component to its default width\n- Place the primary column on the left to hold the main UI\n- Place the secondary column on the right to hold the summary and call to action\n\n```jsx\n<Page title=\"Task screen with summary\">\n  <Layout>\n    <Layout.Section>{/* UI to complete the task */}</Layout.Section>\n    <Layout.Section secondary>\n      {/* Summary and call to action */}\n    </Layout.Section>\n  </Layout>\n</Page>\n```\n\n### Annotated\n\n![General settings page, with annotated sections for “Store details” and “Store address” visible](/images/foundations/patterns/page-layouts/page-layout-annotated@2x.png)\n\nAnnotated layouts group the content of the page into distinct sections that are only loosely related. This layout makes it easier to scan the page for a particular section.\n\nUse this layout for settings screens. Don’t use this layout when merchants need to navigate to more than one section to complete their task.\n\n- Set the page component to its default width.\n- Use an annotated layout section for each independent topic on the page.\n- Avoid combining annotated layouts with other layout types.\n\n```jsx\n<Page title=\"Annotated layout\">\n  <Layout>\n    <Layout.AnnotatedSection\n      title=\"Store details\"\n      description=\"Shopify and your customers will use this information to contact you.\"\n    >\n      {/* Details fields */}\n    </Layout.AnnotatedSection>\n    <Layout.AnnotatedSection\n      title=\"Store address\"\n      description=\"This address will appear on your invoices.\"\n    >\n      {/* Address fields */}\n    </Layout.AnnotatedSection>\n  </Layout>\n</Page>\n```\n\n### Custom page layouts\n\nMost screens in the Shopify admin use one of these layouts, but they aren’t the only ones you can use in Polaris. The following layouts are also possible:\n\n- Multi-column list\n- Grid of equals\n- Masonry layout\n\nTo achieve these and other layouts, create one or more custom layout components.\nThink of layout components a set of “shelves” into which other components can be placed.\n\n---\n\n## Small-scale layout\n\nThe [stack](/components/stack) component is useful for small-scale layout. It lets you arrange arbitrary components in a horizontal row or vertical stack. It’s also a useful component for applying\n[standard spacing](/design/spacing).\n\n![A text label, text value and badge arranged in a row with space between](/images/foundations/patterns/page-layouts/stack-horizontal@2x.png)\n\nStacks work especially well for a row of components where one item needs to grow to fill the available space. When space becomes constrained, the content will wrap by default.\n\n![A custom heading on the left (labeled “fill”) and UI control pushed to the right (labeled “auto”)](/images/foundations/patterns/page-layouts/stack-with-fill@2x.png)\n\n### Custom small-scale layouts\n\nYou’re more likely to need a custom small-scale layout than a custom page layout. If the desired layout can’t be easily achieved using a single stack component, create a custom layout.\n\nCustom small-scale layouts can often be done as part of a functional component, such as the timeline input shown here. It’s also possible to create dedicated small-scale layout components if the layout needs to be reusable.\n\n![A row of UI elements on a wide screen, showing one element pushing two others to the right. A second state of the same element is shown on a narrower screen. The two smaller elements have wrapped below the first, creating a new row. Now one element stretches to fill the row and pushes last element to the end.](/images/foundations/patterns/page-layouts/layout-small-scale-custom@2x.png)\n\n---\n\n## Placing actions on screen\n\nOrganizing actions is as important as organizing content.\n\nIf an action applies to the entire page:\n\n- Place it in the page header as a primary or secondary action\n- Use the [page actions](/components/page-actions) component for page-level delete and save actions\n\nIf an action applies to something more specific, place it at the level of the content it affects. For example, if an action applies to the contents of a card:\n\n- Use card header actions for less important actions, or those that don’t benefit from reviewing the contents of the card. For example, merchants may want to add items to a card containing a long list.\n- Use card footer actions for a card’s most important actions, or actions that benefit from reviewing the contents of the card. For example, merchants should review the contents of a shipment before cancelling or adding tracking information.\n\n---\n\n## Combining navigation with layout\n\nAlways consider the full range of screen sizes when designing layouts.\n\nIf a page has become complex, overloaded with content, or hard to navigate by scrolling on a phone, it can be broken up into a core page and secondary pages accessible via navigation.\n",
    "category": "patterns"
  },
  {
    "frontMatter": {
      "name": "Text fields",
      "keywords": [
        "text fields",
        "search",
        "placeholder text"
      ]
    },
    "intro": "Text fields are a combination of the field label (the title) and the input area. Inputs can be typed text, URLs, date pickers, and more.",
    "content": "\n\n# Text fields\n\nText fields are a combination of the field label (the title) and the input area. Inputs can be typed text, URLs, date pickers, and more.\n\nText fields can be grouped in a form or placed individually in the UI. Placeholder text should generally be avoided in text fields. Help text can be used below the text input area to guide the user on acceptable inputs.\n\n![text-field-anatomy](/images/foundations/patterns/text-fields/text-field-anatomy@2x.png)\n\n---\n\n## Field labels\n\nField labels act as a title for the text field. Labels should typically be short and in noun form. For example, “Name”.\n\n![field-label-highlighted](/images/foundations/patterns/text-fields/field-label-highlighted@2x.png)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-form-fields](/images/foundations/patterns/text-fields/do-example-form-fields@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-form-fields](/images/foundations/patterns/text-fields/dont-example-form-fields@2x.png)\n\n</div></div>\n\nEdge case: When a text field isn’t part of a form and is placed individually on a page (like a comment field), then you can write the field label as a call to action. For example, “Leave a comment”. This is because there’s no surrounding context and using “Comment” alone could be confusing.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![](/images/foundations/patterns/text-fields/do-example-leave-a-comment@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![](/images/foundations/patterns/text-fields/dont-example-comment@2x.png)\n\n</div></div>\n\n---\n\n## Placeholder text\n\nIn general, avoid using placeholder text in text fields. It can pose a range of accessibility problems, like:\n\n- Low color contrast, making the text hard to read\n- Inconsistent behavior between browsers and screen readers\n- Text disappearing when the user starts typing, which can be confusing to people with cognitive impairments\n- Limited space available for additional context, due to field size\n\nException: Read the guidelines on [search fields](#search-and-email-fields).\n\n![blue-search-field-placeholder-text](/images/foundations/patterns/text-fields/blue-search-field-placeholder-text@2x.png)\n\n---\n\n## Help text\n\nHelp text provides extra guidance or instructions to people filling out a form field. It can also be used to clarify how the information will be used.\n\nUse help text:\n\n- when the text field label doesn’t clearly explain the purpose of the text input\n- to provide guidance or instructions on the type of information needed\n- to show examples of the required format for modeled text inputs\n\nBest practices:\n\n- Avoid repeating the field label. If the field label provides sufficient context for completing the action, then you likely don’t need to add help text.\n- If there’s not enough room to include both instructions and an example, then only include the example.\n\n![help-text](/images/foundations/patterns/text-fields/help-text@2x.png)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-help-text-customer-email](/images/foundations/patterns/text-fields/do-example-help-text-customer-email.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-help-text-customer-email](/images/foundations/patterns/text-fields/dont-example-help-text-customer-email.png)\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-help-text-domain](/images/foundations/patterns/text-fields/do-example-help-text-domain.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-help-text-domain](/images/foundations/patterns/text-fields/dont-example-help-text-domain.png)\n\n</div></div>\n\n---\n\n## Text input types\n\nThere are three types of text inputs:\n\n### Modeled text inputs\n\nThese are fields that require a specific format to be valid. They’re often used for tags, dates, and some tracking numbers. Modeled text is highly structured, so providing examples is useful. [Read more](#modeled-text-inputs)\n\n![modeled-text-inputs](/images/foundations/patterns/text-fields/modeled-text-inputs@2x.png)\n\n### Free text inputs\n\nThese are fields that accept short strings of text. They’re often used for SKUs, barcodes, and titles. Only provide example text if you know how the text should be structured, such as a tracking number or discount code. [Read more](#free-text-inputs)\n\n![free-text-input](/images/foundations/patterns/text-fields/free-text-input@2x.png)\n\n### Multiline text inputs\n\nThese are fields that are rendered as multiline textarea elements, as well as text input elements that accept long strings of text. They’re often used for product descriptions, order comments, and customer notes. Users can write whatever they want, so providing example text is less useful. [Read more](#multiline-text-inputs)\n\n![multiline-text-inputs](/images/foundations/patterns/text-fields/multiline-text-inputs.png)\n\n---\n\n## Modeled text inputs\n\nModeled text inputs are text field inputs that require text to be formatted in a specific way. For instance, tags need to be separated by commas, and dates need to be typed in YYYY-MM-DD format. Because modeled text inputs require a particular structure, always include examples that demonstrate how the user should enter the information.\n\n- Use help text to include an instructional call to action and an example that shows the required text format\n- If there’s not enough room to include both an instructional call to action and an example, then include only the example\n- Use the word “Example” followed by a colon to introduce the example (instead of e.g.)\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-modeled-text-inputs-options](/images/foundations/patterns/text-fields/do-example-modeled-text-inputs-options@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-modeled-text-inputs-options](/images/foundations/patterns/text-fields/dont-example-modeled-text-inputs-options@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-modeled-text-inputs-expected-arrival](/images/foundations/patterns/text-fields/do-example-modeled-text-inputs-expected-arrival@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-modeled-text-inputs-expected-arrival](/images/foundations/patterns/text-fields/dont-example-modeled-text-inputs-expected-arrival@2x.png)\n\n</div></div>\n\n---\n\n## Free text inputs\n\nFree text inputs accept a single string of text, without any particular structure. Use the field label to clearly indicate what should go in the text field.\n\nDon’t provide an example for free text inputs. The text doesn’t follow a specific format, and we shouldn’t assume what belongs in the field. If more context is needed, use help text.\n\n### Avoid redundancy\n\nIf a text field label has a call to action, there's no need to repeat it in the help text. Instead, add a sentence that provides extra context.\n\nFor example, when a free text input is located independent of a form and has no surrounding context, you can make the field label a call to action.\n\n![free-text-input-leave-a-comment](/images/foundations/patterns/text-fields/free-text-input-leave-a-comment@2x.png)\n\n### Point in the right direction\n\nIf the text field label isn’t clear about where the user can find the information, use help text to guide them.\n\n![free-text-input-isbn](/images/foundations/patterns/text-fields/free-text-input-isbn@2x.png)\n\n---\n\n## Titles, names, and descriptions\n\nDon’t use placeholder text for free input titles, names, and descriptions; use help text instead.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-titles-names-descriptions](/images/foundations/patterns/text-fields/do-example-titles-names-descriptions@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-titles-names-descriptions](/images/foundations/patterns/text-fields/dont-example-titles-names-descriptions@2x.png)\n\n</div></div>\n\n---\n\n## Codes and tracking numbers\n\nDon’t use placeholder text for codes or tracking numbers; use help text instead. If the code follows a standardized format, include an example, using the same format as help text for modeled content. If not, omit the example since the field’s contents can vary.\n\nChoose clear names for the field label, and don’t repeat it in the help text if possible. Instead, offer context that will help the user understand and complete the task quickly.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-tracking-number](/images/foundations/patterns/text-fields/do-example-tracking-number@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-tracking-number](/images/foundations/patterns/text-fields/dont-example-tracking-number@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-discount-code](/images/foundations/patterns/text-fields/do-example-discount-code@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-discount-code](/images/foundations/patterns/text-fields/dont-example-discount-code@2x.png)\n\n</div></div>\n\n---\n\n## Multiline text inputs\n\nMultiline fields let merchants type long blocks of text. There are a few different versions:\n\n- Plain textarea elements with no formatting options\n- Formatted textarea elements with what-you-see-is-what-you-get (WYSIWYG) menus\n- Plain text input elements that accept long strings of text\n- Plain text input elements that accept long strings of text and expand as the user types\n\nMultiline inputs hold things like product and collection descriptions, notes about an order that only store staff can access, notes that the customer can access, and anything else the merchant wants to type into them.\n\nWe usually don’t know what will go in multiline fields, so providing example text isn’t helpful. Instead, include help text that explains how the text will be used and who can view it.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-multiline-text-input](/images/foundations/patterns/text-fields/do-example-multiline-text-input@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-multiline-text-input](/images/foundations/patterns/text-fields/dont-example-multiline-text-input@2x.png)\n\n</div></div>\n\n### Comments and notes\n\nDon’t use placeholder text for comments and notes; use help text instead. Comments and notes help merchants keep track of unstructured information they may need about an order or a buyer.\n\nSome comments and notes are not visible to customers, but some are. In the help text, describe clearly who will be able to view the note.\n\n<div class=\"dodont\"><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-comment](/images/foundations/patterns/text-fields/do-example-comment@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-placeholder-text-as-comment](/images/foundations/patterns/text-fields/dont-example-placeholder-text-as-comment@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"do\">\n\n#### Do\n\n![do-example-note](/images/foundations/patterns/text-fields/do-example-note@2x.png)\n\n</div><div class=\"dodont-part\" data-type=\"dont\">\n\n#### Don’t\n\n![dont-example-note](/images/foundations/patterns/text-fields/dont-example-note@2x.png)\n\n</div></div>\n\n---\n\n## Search and email fields\n\nFor standard text fields, avoid placeholder text. However, regular or floating placeholder text can be used for:\n\n- Search fields\n- Filter fields\n- Email entry fields\n\nPlaceholder text is a common, recognizable pattern for these field types. Moving the placeholder text outside of the text field box may seem out of place and negatively impact the visual design of some marketing pages.\n\n![blue-search-field-placeholder-text](/images/foundations/patterns/text-fields/blue-search-field-placeholder-text@2x.png)\n\nTo make search, filter, and email entry fields more accessible, always move the placeholder text above the cursor while the field is in focus. This lets the user read the placeholder text as soon as they select the field.\n\n![search-field-placeholder-text](/images/foundations/patterns/text-fields/search-field-placeholder-text@2x.png)\n\n---\n\n## Minimalist page design and placeholders\n\nThere are some cases where help text clutters a page. For example, the minimalist design of pages like the admin login page would be significantly changed by adding another line of text.\n\nAs with standard placeholder text, the placeholder should float above the text entry once the field has been selected. It’s not easy for everyone to read the small print of the floating text, so use this method sparingly.\n\n![minimalist-design-placeholder-text](/images/foundations/patterns/text-fields/minimalist-design-placeholder-text@2x.png)\n",
    "category": "patterns"
  }
]