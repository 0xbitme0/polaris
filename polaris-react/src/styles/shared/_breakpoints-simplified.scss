@import '../foundation/layout';

@function breakpoint($value) {
  $value-unit: unit($value);

  @if $value-unit == 'em' {
    @return $value;
  } @else if $value-unit == 'px' {
    @return $value / 16px * 1em;
  } @else {
    @error 'The $value passed into breakpoint() must be a pixel or em value. Got "#{$value}"';
  }
}

$page-max-width: $layout-width-primary-max + $layout-width-secondary-max +
  $layout-width-inner-spacing-base;
$frame-with-nav-max-width: $layout-width-nav-base + $page-max-width;

$stacked-content: breakpoint(
  $layout-width-primary-min + $layout-width-secondary-min +
    $layout-width-inner-spacing-base
);

$not-condensed-min-page: 680px + 64px;
$partially-condensed-min-page: 450px + 40px;

@mixin page-content-breakpoint-before($size) {
  $size: breakpoint($size);

  @if $size < 450px {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      @media (max-width: #{min(769px, $size)}),
        (min-width: #{769px}) and (max-width: #{240px + $size}) {
          @content;
      }
    }

    @media (max-width: #{$size}) {
      @content;
    }
  } @else if $size < 680px {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      @media (max-width: #{min(769px, $size + 40px)}),
        (min-width: #{769px}) and (max-width: #{240px + $size + 64px}) {
          @content;
      }
    }

    @media (max-width: #{$size + 40px}) {
      @content;
    }
  } @else {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      @media (max-width: #{min(769px, $size + 40px)}),
        (min-width: #{769px}) and (max-width: #{240px + $size + 64px}) {
          @content;
      }
    }

    @media (max-width: #{$size + 64px}) {
      @content;
    }
  }
}

@mixin page-content-breakpoint-after($size) {
  $size: breakpoint($size);

  @if $size < 450px {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      @media (max-width: #{769px}) and (min-width: #{$size}),
        (min-width: #{240px + $size}) {
          @content;
      }
    }

    @media (min-width: #{$size}) {
      @content;
    }
  } @else if $size < 680px {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      /*                   590px <------------------------> 769px */
      @media (min-width: #{$size + 40px}) and (max-width: #{769px}),
      /*                    830px ------------------------> */
      (min-width: #{240px + $size + 40px}) {
          @content;
      }
    }

    @media (min-width: #{$size + 40px}) {
      @content;
    }
  } @else {
    // prettier-ignore
    [data-has-navigation] #{if(&, "&", "*")} {
      @media (max-width: #{769px}) and (min-width: #{$size + 64px}),
        (min-width: #{240px + $size + 64px}) {
          @content;
      }
    }

    @media (min-width: #{$size + 64px}) {
      @content;
    }
  }
}

@mixin breakpoint-after($breakpoint, $inclusive: true) {
  @media (min-width: #{breakpoint($breakpoint) + if($inclusive, 0, 0.01em)}) {
    @content;
  }
}

@mixin breakpoint-before($breakpoint, $inclusive: true) {
  @media (max-width: #{breakpoint($breakpoint) + if($inclusive, 0, -0.01em)}) {
    @content;
  }
}

@mixin frame-with-nav-when-not-max-width() {
  @include breakpoint-before($frame-with-nav-max-width) {
    @content;
  }
}

@mixin page-when-not-max-width() {
  @include breakpoint-before($page-max-width) {
    @content;
  }
}

@mixin page-content-when-layout-stacked() {
  @include page-content-breakpoint-before($stacked-content) {
    @content;
  }
}

@mixin page-content-when-layout-not-stacked() {
  @include page-content-breakpoint-after($stacked-content) {
    @content;
  }
}

@mixin page-content-when-partially-condensed() {
  @include page-content-breakpoint-before(680px) {
    @content;
  }
}

@mixin page-content-when-not-partially-condensed() {
  @include page-content-breakpoint-after(680px) {
    @content;
  }
}

@mixin page-content-when-fully-condensed() {
  @include page-content-breakpoint-before(450px) {
    @content;
  }
}

/* --- */
@mixin page-content-when-not-fully-condensed() {
  @include page-content-breakpoint-after(450px) {
    @content;
  }
}

@mixin frame-when-nav-displayed() {
  @include breakpoint-after($layout-width-page-with-nav-base) {
    @content;
  }
}

@mixin frame-when-nav-hidden() {
  @include breakpoint-before($layout-width-page-with-nav-base, false) {
    @content;
  }
}

.test1 {
  width: 680px;
  @include page-content-breakpoint-after(450px) {
    color: #000;
  }
}

@include page-content-breakpoint-after(450px) {
  color: #000;
}
